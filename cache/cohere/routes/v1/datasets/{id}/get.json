{
  "description": "Retrieve a dataset by ID. See ['Datasets'](https://docs.cohere.com/docs/datasets) for more information.",
  "operationId": "get-dataset",
  "parameters": [
    {
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
        "pattern": "^(?!usage$).*$",
        "type": "string"
      }
    },
    {
      "description": "The name of the project that is making the request.\n",
      "example": "my-cool-project",
      "in": "header",
      "name": "X-Client-Name",
      "required": false,
      "schema": {
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "dataset": {
                "properties": {
                  "created_at": {
                    "description": "The creation date",
                    "format": "date-time",
                    "type": "string"
                  },
                  "dataset_parts": {
                    "description": "the underlying files that make up the dataset",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The dataset part ID",
                          "type": "string"
                        },
                        "index": {
                          "description": "The index of the file",
                          "format": "int32",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the dataset part",
                          "type": "string"
                        },
                        "num_rows": {
                          "description": "The number of rows in the file",
                          "format": "int32",
                          "type": "integer"
                        },
                        "original_url": {
                          "description": "The download url of the original file",
                          "type": "string"
                        },
                        "samples": {
                          "description": "The first few rows of the parsed file",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "size_bytes": {
                          "description": "The size of the file in bytes",
                          "format": "int32",
                          "type": "integer"
                        },
                        "url": {
                          "description": "The download url of the file",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "dataset_type": {
                    "description": "The type of the dataset",
                    "enum": [
                      "embed-input",
                      "embed-result",
                      "cluster-result",
                      "cluster-outliers",
                      "reranker-finetune-input",
                      "single-label-classification-finetune-input",
                      "chat-finetune-input",
                      "multi-label-classification-finetune-input",
                      "batch-chat-input",
                      "batch-openai-chat-input",
                      "batch-embed-v2-input",
                      "batch-chat-v2-input"
                    ],
                    "type": "string"
                  },
                  "id": {
                    "description": "The dataset ID",
                    "type": "string"
                  },
                  "metrics": {
                    "properties": {
                      "finetune_dataset_metrics": {
                        "properties": {
                          "chat_data_metrics": {
                            "properties": {
                              "num_eval_turns": {
                                "description": "The sum of all turns of valid eval examples.",
                                "format": "int64",
                                "type": "number"
                              },
                              "num_train_turns": {
                                "description": "The sum of all turns of valid train examples.",
                                "format": "int64",
                                "type": "number"
                              },
                              "preamble": {
                                "description": "The preamble of this dataset.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "classify_data_metrics": {
                            "properties": {
                              "label_metrics": {
                                "items": {
                                  "properties": {
                                    "label": {
                                      "description": "value of the label",
                                      "type": "string"
                                    },
                                    "samples": {
                                      "description": "samples for this label",
                                      "items": {
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "total_examples": {
                                      "description": "Total number of examples for this label",
                                      "format": "int64",
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "eval_examples": {
                            "description": "Number of evaluation examples.",
                            "format": "int64",
                            "type": "number"
                          },
                          "eval_size_bytes": {
                            "description": "The size in bytes of all eval examples.",
                            "format": "int64",
                            "type": "number"
                          },
                          "reranker_data_metrics": {
                            "properties": {
                              "num_eval_hard_negatives": {
                                "description": "The sum of all hard negatives of valid eval examples.",
                                "format": "int64",
                                "type": "number"
                              },
                              "num_eval_queries": {
                                "description": "The number of evaluation queries.",
                                "format": "int64",
                                "type": "number"
                              },
                              "num_eval_relevant_passages": {
                                "description": "The sum of all relevant passages of valid eval examples.",
                                "format": "int64",
                                "type": "number"
                              },
                              "num_train_hard_negatives": {
                                "description": "The sum of all hard negatives of valid training examples.",
                                "format": "int64",
                                "type": "number"
                              },
                              "num_train_queries": {
                                "description": "The number of training queries.",
                                "format": "int64",
                                "type": "number"
                              },
                              "num_train_relevant_passages": {
                                "description": "The sum of all relevant passages of valid training examples.",
                                "format": "int64",
                                "type": "number"
                              }
                            },
                            "type": "object"
                          },
                          "total_examples": {
                            "description": "The overall number of examples.",
                            "format": "int64",
                            "type": "number"
                          },
                          "train_examples": {
                            "description": "The number of training examples.",
                            "format": "int64",
                            "type": "number"
                          },
                          "train_size_bytes": {
                            "description": "The size in bytes of all training examples.",
                            "format": "int64",
                            "type": "number"
                          },
                          "trainable_token_count": {
                            "description": "The number of tokens of valid examples that can be used for training.",
                            "format": "int64",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "description": "The name of the dataset",
                    "type": "string"
                  },
                  "parse_info": {
                    "properties": {
                      "delimiter": {
                        "type": "string",
                        "writeOnly": true
                      },
                      "separator": {
                        "type": "string",
                        "writeOnly": true
                      }
                    },
                    "type": "object",
                    "writeOnly": true
                  },
                  "preserve_fields": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "required_fields": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "schema": {
                    "description": "the avro schema of the dataset",
                    "type": "string"
                  },
                  "updated_at": {
                    "description": "The last update date",
                    "format": "date-time",
                    "type": "string"
                  },
                  "validation_error": {
                    "description": "Errors found during validation",
                    "type": "string"
                  },
                  "validation_status": {
                    "description": "The validation status of the dataset",
                    "enum": [
                      "unknown",
                      "queued",
                      "processing",
                      "failed",
                      "validated",
                      "skipped"
                    ],
                    "type": "string"
                  },
                  "validation_warnings": {
                    "description": "warnings found during validation",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "created_at",
                  "updated_at",
                  "dataset_type",
                  "validation_status"
                ],
                "type": "object"
              }
            },
            "required": [
              "dataset"
            ],
            "type": "object"
          }
        }
      },
      "description": "A successful response."
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "403": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "404": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a resource is not found. This could be because:\n  - The endpoint does not exist\n  - The resource does not exist eg model id, dataset id\n"
    },
    "422": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Too many requests"
    },
    "498": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request or response contains a deny-listed token.\n"
    },
    "499": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request is cancelled by the user.\n"
    },
    "500": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when an uncategorised internal server error occurs.\n"
    },
    "501": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the requested feature is not implemented.\n"
    },
    "503": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the service is unavailable. This could be due to:\n  - Too many users trying to access the service at the same time\n"
    },
    "504": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request to the server times out. This could be due to:\n  - An internal services taking too long to respond\n"
    }
  },
  "summary": "Get a Dataset",
  "tags": [
    "/datasets"
  ]
}
