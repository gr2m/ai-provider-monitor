{
  "deprecated": true,
  "description": "<Warning>\nThis API is marked as \"Legacy\" and is no longer maintained. Follow the [migration guide](https://docs.cohere.com/docs/migrating-from-cogenerate-to-cochat) to start using the Chat API.\n</Warning>\nGenerates realistic text conditioned on a given input.\n",
  "operationId": "generate",
  "parameters": [
    {
      "description": "The name of the project that is making the request.\n",
      "example": "my-cool-project",
      "in": "header",
      "name": "X-Client-Name",
      "required": false,
      "schema": {
        "type": "string"
      }
    }
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "end_sequences": {
              "description": "The generated text will be cut at the beginning of the earliest occurrence of an end sequence. The sequence will be excluded from the text.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "writeOnly": true
            },
            "frequency_penalty": {
              "description": "Used to reduce repetitiveness of generated tokens. The higher the value, the stronger a penalty is applied to previously present tokens, proportional to how many times they have already appeared in the prompt or prior generation.\n\nUsing `frequency_penalty` in combination with `presence_penalty` is not supported on newer models.\n",
              "type": "number",
              "writeOnly": true
            },
            "k": {
              "description": "Ensures only the top `k` most likely tokens are considered for generation at each step.\nDefaults to `0`, min value of `0`, max value of `500`.\n",
              "type": "integer",
              "writeOnly": true
            },
            "max_tokens": {
              "description": "The maximum number of tokens the model will generate as part of the response. Note: Setting a low value may result in incomplete generations.\n\nThis parameter is off by default, and if it's not specified, the model will continue generating until it emits an EOS completion token. See [BPE Tokens](/bpe-tokens-wiki) for more details.\n\nCan only be set to `0` if `return_likelihoods` is set to `ALL` to get the likelihood of the prompt.\n",
              "type": "integer",
              "writeOnly": true
            },
            "model": {
              "description": "The identifier of the model to generate with. Currently available models are `command` (default), `command-nightly` (experimental), `command-light`, and `command-light-nightly` (experimental).\nSmaller, \"light\" models are faster, while larger models will perform better. [Custom models](https://docs.cohere.com/docs/training-custom-models) can also be supplied with their full ID.",
              "type": "string",
              "writeOnly": true
            },
            "num_generations": {
              "description": "The maximum number of generations that will be returned. Defaults to `1`, min value of `1`, max value of `5`.\n",
              "type": "integer",
              "writeOnly": true
            },
            "p": {
              "description": "Ensures that only the most likely tokens, with total probability mass of `p`, are considered for generation at each step. If both `k` and `p` are enabled, `p` acts after `k`.\nDefaults to `0.75`. min value of `0.01`, max value of `0.99`.\n",
              "type": "number",
              "writeOnly": true
            },
            "presence_penalty": {
              "description": "Defaults to `0.0`, min value of `0.0`, max value of `1.0`.\n\nCan be used to reduce repetitiveness of generated tokens. Similar to `frequency_penalty`, except that this penalty is applied equally to all tokens that have already appeared, regardless of their exact frequencies.\n\nUsing `frequency_penalty` in combination with `presence_penalty` is not supported on newer models.\n",
              "type": "number",
              "writeOnly": true
            },
            "preset": {
              "description": "Identifier of a custom preset. A preset is a combination of parameters, such as prompt, temperature etc. You can create presets in the [playground](https://dashboard.cohere.com/playground/generate).\nWhen a preset is specified, the `prompt` parameter becomes optional, and any included parameters will override the preset's parameters.\n",
              "example": "my-preset-a58sbd",
              "type": "string",
              "writeOnly": true
            },
            "prompt": {
              "description": "The input text that serves as the starting point for generating the response.\nNote: The prompt will be pre-processed and modified before reaching the model.\n",
              "example": "Please explain to me how LLMs work",
              "type": "string",
              "writeOnly": true
            },
            "raw_prompting": {
              "description": "When enabled, the user's prompt will be sent to the model without any pre-processing.",
              "type": "boolean"
            },
            "return_likelihoods": {
              "default": "NONE",
              "description": "One of `GENERATION|NONE` to specify how and if the token likelihoods are returned with the response. Defaults to `NONE`.\n\nIf `GENERATION` is selected, the token likelihoods will only be provided for generated text.\n\nWARNING: `ALL` is deprecated, and will be removed in a future release.",
              "enum": [
                "GENERATION",
                "ALL",
                "NONE"
              ],
              "type": "string"
            },
            "seed": {
              "description": "If specified, the backend will make a best effort to sample tokens\ndeterministically, such that repeated requests with the same\nseed and parameters should return the same result. However,\ndeterminism cannot be totally guaranteed.\nCompatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments\n",
              "maximum": 18446744073709552000,
              "minimum": 0,
              "type": "integer"
            },
            "stop_sequences": {
              "description": "The generated text will be cut at the end of the earliest occurrence of a stop sequence. The sequence will be included the text.",
              "items": {
                "type": "string"
              },
              "type": "array",
              "writeOnly": true
            },
            "stream": {
              "description": "When `true`, the response will be a JSON stream of events. Streaming is beneficial for user interfaces that render the contents of the response piece by piece, as it gets generated.\n\nThe final event will contain the complete response, and will contain an `is_finished` field set to `true`. The event will also contain a `finish_reason`, which can be one of the following:\n- `COMPLETE` - the model sent back a finished reply\n- `MAX_TOKENS` - the reply was cut off because the model reached the maximum number of tokens for its context length\n- `ERROR` - something went wrong when generating the reply\n- `ERROR_TOXIC` - the model generated a reply that was deemed toxic\n",
              "type": "boolean"
            },
            "temperature": {
              "description": "A non-negative float that tunes the degree of randomness in generation. Lower temperatures mean less random generations. See [Temperature](/temperature-wiki) for more details.\nDefaults to `0.75`, min value of `0.0`, max value of `5.0`.\n",
              "type": "number",
              "writeOnly": true
            },
            "truncate": {
              "default": "END",
              "description": "One of `NONE|START|END` to specify how the API will handle inputs longer than the maximum token length.\n\nPassing `START` will discard the start of the input. `END` will discard the end of the input. In both cases, input is discarded until the remaining input is exactly the maximum input token length for the model.\n\nIf `NONE` is selected, when the input exceeds the maximum input token length an error will be returned.",
              "enum": [
                "NONE",
                "START",
                "END"
              ],
              "type": "string",
              "writeOnly": true
            }
          },
          "required": [
            "prompt"
          ],
          "type": "object",
          "writeOnly": true
        }
      }
    },
    "description": ""
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "generations": {
                "description": "List of generated results",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "index": {
                      "description": "Refers to the nth generation. Only present when `num_generations` is greater than zero.",
                      "type": "integer"
                    },
                    "likelihood": {
                      "type": "number"
                    },
                    "text": {
                      "type": "string"
                    },
                    "token_likelihoods": {
                      "description": "Only returned if `return_likelihoods` is set to `GENERATION` or `ALL`. The likelihood refers to the average log-likelihood of the entire specified string, which is useful for [evaluating the performance of your model](likelihood-eval), especially if you've created a [custom model](https://docs.cohere.com/docs/training-custom-models). Individual token likelihoods provide the log-likelihood of each token. The first token will not have a likelihood.",
                      "items": {
                        "properties": {
                          "likelihood": {
                            "type": "number"
                          },
                          "token": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "token",
                          "likelihood"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "text",
                    "id"
                  ]
                },
                "type": "array"
              },
              "id": {
                "type": "string"
              },
              "meta": {
                "properties": {
                  "api_version": {
                    "properties": {
                      "is_deprecated": {
                        "type": "boolean"
                      },
                      "is_experimental": {
                        "type": "boolean"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "version"
                    ],
                    "type": "object"
                  },
                  "billed_units": {
                    "properties": {
                      "classifications": {
                        "description": "The number of billed classifications units.\n",
                        "type": "number"
                      },
                      "images": {
                        "description": "The number of billed images.\n",
                        "type": "number"
                      },
                      "input_tokens": {
                        "description": "The number of billed input tokens.\n",
                        "type": "number"
                      },
                      "output_tokens": {
                        "description": "The number of billed output tokens.\n",
                        "type": "number"
                      },
                      "search_units": {
                        "description": "The number of billed search units.\n",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "tokens": {
                    "properties": {
                      "input_tokens": {
                        "description": "The number of tokens used as input to the model.\n",
                        "type": "number"
                      },
                      "output_tokens": {
                        "description": "The number of tokens produced by the model.\n",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "warnings": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "prompt": {
                "description": "Prompt used for generations.",
                "type": "string"
              }
            },
            "required": [
              "id",
              "generations"
            ],
            "type": "object"
          }
        },
        "application/stream+json": {
          "schema": {
            "description": "Response in content type stream when `stream` is `true` in the request parameters. Generation tokens are streamed with the GenerationStream response. The final response is of type GenerationFinalResponse.",
            "discriminator": {
              "mapping": {
                "stream-end": "#/components/schemas/GenerateStreamEnd",
                "stream-error": "#/components/schemas/GenerateStreamError",
                "text-generation": "#/components/schemas/GenerateStreamText"
              },
              "propertyName": "event_type"
            },
            "oneOf": [
              {
                "allOf": [
                  {
                    "properties": {
                      "event_type": {
                        "enum": [
                          "text-generation",
                          "stream-end",
                          "stream-error"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "event_type"
                    ]
                  },
                  {
                    "properties": {
                      "index": {
                        "description": "Refers to the nth generation. Only present when `num_generations` is greater than zero, and only when text responses are being streamed.",
                        "type": "integer"
                      },
                      "is_finished": {
                        "type": "boolean"
                      },
                      "text": {
                        "description": "A segment of text of the generation.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "is_finished",
                      "text"
                    ],
                    "type": "object"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "properties": {
                      "event_type": {
                        "enum": [
                          "text-generation",
                          "stream-end",
                          "stream-error"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "event_type"
                    ]
                  },
                  {
                    "properties": {
                      "finish_reason": {
                        "enum": [
                          "COMPLETE",
                          "STOP_SEQUENCE",
                          "ERROR",
                          "ERROR_TOXIC",
                          "ERROR_LIMIT",
                          "USER_CANCEL",
                          "MAX_TOKENS"
                        ],
                        "type": "string"
                      },
                      "is_finished": {
                        "type": "boolean"
                      },
                      "response": {
                        "properties": {
                          "generations": {
                            "items": {
                              "properties": {
                                "finish_reason": {
                                  "enum": [
                                    "COMPLETE",
                                    "STOP_SEQUENCE",
                                    "ERROR",
                                    "ERROR_TOXIC",
                                    "ERROR_LIMIT",
                                    "USER_CANCEL",
                                    "MAX_TOKENS"
                                  ],
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "index": {
                                  "description": "Refers to the nth generation. Only present when `num_generations` is greater than zero.",
                                  "type": "integer"
                                },
                                "text": {
                                  "description": "Full text of the generation.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "text",
                                "id",
                                "finish_reason"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "id": {
                            "type": "string"
                          },
                          "prompt": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "is_finished",
                      "finish_response",
                      "response"
                    ],
                    "type": "object"
                  }
                ]
              },
              {
                "allOf": [
                  {
                    "properties": {
                      "event_type": {
                        "enum": [
                          "text-generation",
                          "stream-end",
                          "stream-error"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "event_type"
                    ]
                  },
                  {
                    "properties": {
                      "err": {
                        "description": "Error message",
                        "type": "string"
                      },
                      "finish_reason": {
                        "enum": [
                          "COMPLETE",
                          "STOP_SEQUENCE",
                          "ERROR",
                          "ERROR_TOXIC",
                          "ERROR_LIMIT",
                          "USER_CANCEL",
                          "MAX_TOKENS"
                        ],
                        "type": "string"
                      },
                      "index": {
                        "description": "Refers to the nth generation. Only present when `num_generations` is greater than zero.",
                        "type": "integer"
                      },
                      "is_finished": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "is_finished",
                      "finish_reason",
                      "err"
                    ],
                    "type": "object"
                  }
                ]
              }
            ]
          }
        }
      },
      "description": "OK",
      "headers": {
        "X-API-Warning": {
          "description": "The name of the project that is making the request.",
          "example": "Parameter xyz is deprecated, for more information please refer to https://docs.cohere.com/versioning-reference",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "403": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "404": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a resource is not found. This could be because:\n  - The endpoint does not exist\n  - The resource does not exist eg model id, dataset id\n"
    },
    "422": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Too many requests"
    },
    "498": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request or response contains a deny-listed token.\n"
    },
    "499": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request is cancelled by the user.\n"
    },
    "500": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when an uncategorised internal server error occurs.\n"
    },
    "501": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the requested feature is not implemented.\n"
    },
    "503": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the service is unavailable. This could be due to:\n  - Too many users trying to access the service at the same time\n"
    },
    "504": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request to the server times out. This could be due to:\n  - An internal services taking too long to respond\n"
    }
  },
  "summary": "Generate"
}
