{
  "deprecated": true,
  "description": "<Warning>\nThis API is marked as \"Legacy\" and is no longer maintained. Follow the [migration guide](https://docs.cohere.com/docs/migrating-from-cogenerate-to-cochat) to start using the Chat API.\n</Warning>\nGenerates a summary in English for a given text.\n",
  "operationId": "summarize",
  "parameters": [
    {
      "description": "The name of the project that is making the request.\n",
      "example": "my-cool-project",
      "in": "header",
      "name": "X-Client-Name",
      "required": false,
      "schema": {
        "type": "string"
      }
    }
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "additional_command": {
              "description": "A free-form instruction for modifying how the summaries get generated. Should complete the sentence \"Generate a summary _\". Eg. \"focusing on the next steps\" or \"written by Yoda\"",
              "type": "string",
              "writeOnly": true
            },
            "extractiveness": {
              "default": "low",
              "description": "One of `low`, `medium`, `high`, or `auto`, defaults to `auto`. Controls how close to the original text the summary is. `high` extractiveness summaries will lean towards reusing sentences verbatim, while `low` extractiveness summaries will tend to paraphrase more. If `auto` is selected, the best option will be picked based on the input text.",
              "enum": [
                "low",
                "medium",
                "high"
              ],
              "type": "string",
              "writeOnly": true
            },
            "format": {
              "default": "paragraph",
              "description": "One of `paragraph`, `bullets`, or `auto`, defaults to `auto`. Indicates the style in which the summary will be delivered - in a free form paragraph or in bullet points. If `auto` is selected, the best option will be picked based on the input text.",
              "enum": [
                "paragraph",
                "bullets"
              ],
              "type": "string",
              "writeOnly": true
            },
            "length": {
              "default": "medium",
              "description": "One of `short`, `medium`, `long`, or `auto` defaults to `auto`. Indicates the approximate length of the summary. If `auto` is selected, the best option will be picked based on the input text.",
              "enum": [
                "short",
                "medium",
                "long"
              ],
              "type": "string",
              "writeOnly": true
            },
            "model": {
              "description": "The identifier of the model to generate the summary with. Currently available models are `command` (default), `command-nightly` (experimental), `command-light`, and `command-light-nightly` (experimental). Smaller, \"light\" models are faster, while larger models will perform better.",
              "type": "string",
              "writeOnly": true
            },
            "temperature": {
              "default": 0.3,
              "description": "Ranges from 0 to 5. Controls the randomness of the output. Lower values tend to generate more “predictable” output, while higher values tend to generate more “creative” output. The sweet spot is typically between 0 and 1.",
              "maximum": 5,
              "minimum": 0,
              "type": "number",
              "writeOnly": true
            },
            "text": {
              "description": "The text to generate a summary for. Can be up to 100,000 characters long. Currently the only supported language is English.",
              "maxLength": 50000,
              "minLength": 250,
              "type": "string",
              "writeOnly": true
            }
          },
          "required": [
            "text"
          ],
          "type": "object"
        }
      }
    },
    "description": ""
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "description": "Generated ID for the summary",
                "type": "string"
              },
              "meta": {
                "properties": {
                  "api_version": {
                    "properties": {
                      "is_deprecated": {
                        "type": "boolean"
                      },
                      "is_experimental": {
                        "type": "boolean"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "version"
                    ],
                    "type": "object"
                  },
                  "billed_units": {
                    "properties": {
                      "classifications": {
                        "description": "The number of billed classifications units.\n",
                        "type": "number"
                      },
                      "images": {
                        "description": "The number of billed images.\n",
                        "type": "number"
                      },
                      "input_tokens": {
                        "description": "The number of billed input tokens.\n",
                        "type": "number"
                      },
                      "output_tokens": {
                        "description": "The number of billed output tokens.\n",
                        "type": "number"
                      },
                      "search_units": {
                        "description": "The number of billed search units.\n",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "tokens": {
                    "properties": {
                      "input_tokens": {
                        "description": "The number of tokens used as input to the model.\n",
                        "type": "number"
                      },
                      "output_tokens": {
                        "description": "The number of tokens produced by the model.\n",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "warnings": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "summary": {
                "description": "Generated summary for the text",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "OK",
      "headers": {
        "X-API-Warning": {
          "description": "The name of the project that is making the request.",
          "example": "Parameter xyz is deprecated, for more information please refer to https://docs.cohere.com/versioning-reference",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "403": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "404": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a resource is not found. This could be because:\n  - The endpoint does not exist\n  - The resource does not exist eg model id, dataset id\n"
    },
    "422": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Too many requests"
    },
    "498": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request or response contains a deny-listed token.\n"
    },
    "499": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request is cancelled by the user.\n"
    },
    "500": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when an uncategorised internal server error occurs.\n"
    },
    "501": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the requested feature is not implemented.\n"
    },
    "503": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the service is unavailable. This could be due to:\n  - Too many users trying to access the service at the same time\n"
    },
    "504": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request to the server times out. This could be due to:\n  - An internal services taking too long to respond\n"
    }
  },
  "summary": "Summarize"
}
