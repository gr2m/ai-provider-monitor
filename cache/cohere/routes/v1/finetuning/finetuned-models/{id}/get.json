{
  "description": "Retrieve a fine-tuned model by its ID.",
  "operationId": "GetFinetunedModel",
  "parameters": [
    {
      "description": "The fine-tuned model ID.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The name of the project that is making the request.\n",
      "example": "my-cool-project",
      "in": "header",
      "name": "X-Client-Name",
      "required": false,
      "schema": {
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "example": {
            "finetuned_model": {
              "completed_at": "2024-01-17T20:31:05.047Z",
              "created_at": "2024-01-17T20:11:42.907Z",
              "creator_id": "7a317d97-4d05-427d-9396-f31b9fb92c55",
              "id": "fee37446-7fc7-42f9-a026-c6ba2fcc422d",
              "name": "chat-ft",
              "organization_id": "6bdca3d5-3eae-4de0-ac34-786d8063b7ee",
              "settings": {
                "base_model": {
                  "base_type": "BASE_TYPE_CHAT",
                  "name": "medium",
                  "strategy": "STRATEGY_TFEW",
                  "version": "14.2.0"
                },
                "dataset_id": "my-dataset-d701tr",
                "hyperparameters": {
                  "early_stopping_patience": 6,
                  "early_stopping_threshold": 0.01,
                  "learning_rate": 0.01,
                  "train_batch_size": 16,
                  "train_epochs": 1
                }
              },
              "status": "STATUS_READY",
              "updated_at": "2024-01-17T20:31:06.464Z"
            }
          },
          "schema": {
            "description": "Response to a request to get a fine-tuned model.",
            "properties": {
              "finetuned_model": {
                "description": "Information about the fine-tuned model.",
                "properties": {
                  "completed_at": {
                    "description": "read-only. Timestamp for the completed fine-tuning.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "created_at": {
                    "description": "read-only. Creation timestamp.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "creator_id": {
                    "description": "read-only. User ID of the creator.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "id": {
                    "description": "read-only. FinetunedModel ID.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "last_used": {
                    "description": "read-only. Deprecated: Timestamp for the latest request to this fine-tuned model.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  },
                  "name": {
                    "description": "FinetunedModel name (e.g. `foobar`).",
                    "type": "string"
                  },
                  "organization_id": {
                    "description": "read-only. Organization ID.",
                    "readOnly": true,
                    "type": "string"
                  },
                  "settings": {
                    "description": "FinetunedModel settings such as dataset, hyperparameters...",
                    "properties": {
                      "base_model": {
                        "description": "The base model to fine-tune.",
                        "properties": {
                          "base_type": {
                            "description": "The type of the base model.",
                            "default": "BASE_TYPE_UNSPECIFIED",
                            "enum": [
                              "BASE_TYPE_UNSPECIFIED",
                              "BASE_TYPE_GENERATIVE",
                              "BASE_TYPE_CLASSIFICATION",
                              "BASE_TYPE_RERANK",
                              "BASE_TYPE_CHAT"
                            ],
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the base model.",
                            "type": "string"
                          },
                          "strategy": {
                            "description": "Deprecated: The fine-tuning strategy.",
                            "default": "STRATEGY_UNSPECIFIED",
                            "enum": [
                              "STRATEGY_UNSPECIFIED",
                              "STRATEGY_VANILLA",
                              "STRATEGY_TFEW"
                            ],
                            "type": "string"
                          },
                          "version": {
                            "description": "read-only. The version of the base model.",
                            "readOnly": true,
                            "type": "string"
                          }
                        },
                        "required": [
                          "base_type"
                        ],
                        "type": "object"
                      },
                      "dataset_id": {
                        "description": "The data used for training and evaluating the fine-tuned model.",
                        "type": "string"
                      },
                      "hyperparameters": {
                        "description": "Fine-tuning hyper-parameters.",
                        "properties": {
                          "early_stopping_patience": {
                            "description": "Stops training if the loss metric does not improve beyond the value of\n`early_stopping_threshold` after this many times of evaluation.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "early_stopping_threshold": {
                            "description": "How much the loss must improve to prevent early stopping.",
                            "format": "double",
                            "type": "number"
                          },
                          "learning_rate": {
                            "description": "The learning rate to be used during training.",
                            "format": "double",
                            "type": "number"
                          },
                          "lora_alpha": {
                            "description": "Controls the scaling factor for LoRA updates. Higher values make the\nupdates more impactful.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "lora_rank": {
                            "description": "Specifies the rank for low-rank matrices. Lower ranks reduce parameters\nbut may limit model flexibility.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "lora_target_modules": {
                            "description": "The combination of LoRA modules to target.",
                            "default": "LORA_TARGET_MODULES_UNSPECIFIED",
                            "enum": [
                              "LORA_TARGET_MODULES_UNSPECIFIED",
                              "LORA_TARGET_MODULES_QV",
                              "LORA_TARGET_MODULES_QKVO",
                              "LORA_TARGET_MODULES_QKVO_FFN"
                            ],
                            "type": "string"
                          },
                          "train_batch_size": {
                            "description": "The batch size is the number of training examples included in a single\ntraining pass.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "train_epochs": {
                            "description": "The number of epochs to train for.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "multi_label": {
                        "description": "read-only. Whether the model is single-label or multi-label (only for classification).",
                        "readOnly": true,
                        "type": "boolean"
                      },
                      "wandb": {
                        "description": "The Weights & Biases configuration (Chat fine-tuning only).",
                        "properties": {
                          "api_key": {
                            "description": "The WandB API key to be used during training.",
                            "type": "string"
                          },
                          "entity": {
                            "description": "The WandB entity name to be used during training.",
                            "type": "string"
                          },
                          "project": {
                            "description": "The WandB project name to be used during training.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "project",
                          "api_key"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "base_model",
                      "dataset_id"
                    ],
                    "type": "object"
                  },
                  "status": {
                    "description": "read-only. Current stage in the life-cycle of the fine-tuned model.",
                    "readOnly": true,
                    "default": "STATUS_UNSPECIFIED",
                    "enum": [
                      "STATUS_UNSPECIFIED",
                      "STATUS_FINETUNING",
                      "STATUS_DEPLOYING_API",
                      "STATUS_READY",
                      "STATUS_FAILED",
                      "STATUS_DELETED",
                      "STATUS_TEMPORARILY_OFFLINE",
                      "STATUS_PAUSED",
                      "STATUS_QUEUED"
                    ],
                    "type": "string"
                  },
                  "updated_at": {
                    "description": "read-only. Latest update timestamp.",
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "settings"
                ],
                "type": "object"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "A successful response."
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Error is the response for any unsuccessful event.",
            "properties": {
              "message": {
                "description": "A developer-facing error message.",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Bad Request"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Error is the response for any unsuccessful event.",
            "properties": {
              "message": {
                "description": "A developer-facing error message.",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Unauthorized"
    },
    "403": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Error is the response for any unsuccessful event.",
            "properties": {
              "message": {
                "description": "A developer-facing error message.",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Forbidden"
    },
    "404": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Error is the response for any unsuccessful event.",
            "properties": {
              "message": {
                "description": "A developer-facing error message.",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Not Found"
    },
    "500": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Error is the response for any unsuccessful event.",
            "properties": {
              "message": {
                "description": "A developer-facing error message.",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Internal Server Error"
    },
    "503": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Error is the response for any unsuccessful event.",
            "properties": {
              "message": {
                "description": "A developer-facing error message.",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Status Service Unavailable"
    }
  },
  "summary": "Returns a fine-tuned model by ID.",
  "tags": [
    "/finetuning"
  ]
}
