{
  "description": "This API launches an async Embed job for a [Dataset](https://docs.cohere.com/docs/datasets) of type `embed-input`. The result of a completed embed job is new Dataset of type `embed-output`, which contains the original text entries and the corresponding embeddings.",
  "operationId": "create-embed-job",
  "parameters": [
    {
      "description": "The name of the project that is making the request.\n",
      "example": "my-cool-project",
      "in": "header",
      "name": "X-Client-Name",
      "required": false,
      "schema": {
        "type": "string"
      }
    }
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "dataset_id": {
              "description": "ID of a [Dataset](https://docs.cohere.com/docs/datasets). The Dataset must be of type `embed-input` and must have a validation status `Validated`",
              "type": "string"
            },
            "embedding_types": {
              "description": "Specifies the types of embeddings you want to get back. Not required and default is None, which returns the Embed Floats response type. Can be one or more of the following types.\n\n* `\"float\"`: Use this when you want to get back the default float embeddings. Valid for all models.\n* `\"int8\"`: Use this when you want to get back signed int8 embeddings. Valid for v3 and newer model versions.\n* `\"uint8\"`: Use this when you want to get back unsigned int8 embeddings. Valid for v3 and newer model versions.\n* `\"binary\"`: Use this when you want to get back signed binary embeddings. Valid for v3 and newer model versions.\n* `\"ubinary\"`: Use this when you want to get back unsigned binary embeddings. Valid for v3 and newer model versions.",
              "items": {
                "enum": [
                  "float",
                  "int8",
                  "uint8",
                  "binary",
                  "ubinary",
                  "base64"
                ],
                "type": "string",
                "writeOnly": true
              },
              "type": "array"
            },
            "input_type": {
              "description": "Specifies the type of input passed to the model. Required for embedding models v3 and higher.\n\n- `\"search_document\"`: Used for embeddings stored in a vector database for search use-cases.\n- `\"search_query\"`: Used for embeddings of search queries run against a vector DB to find relevant documents.\n- `\"classification\"`: Used for embeddings passed through a text classifier.\n- `\"clustering\"`: Used for the embeddings run through a clustering algorithm.\n- `\"image\"`: Used for embeddings with image input.\n",
              "enum": [
                "search_document",
                "search_query",
                "classification",
                "clustering",
                "image"
              ],
              "type": "string"
            },
            "model": {
              "description": "ID of the embedding model.\n\nAvailable models and corresponding embedding dimensions:\n\n- `embed-english-v3.0` : 1024\n- `embed-multilingual-v3.0` : 1024\n- `embed-english-light-v3.0` : 384\n- `embed-multilingual-light-v3.0` : 384\n",
              "format": "string",
              "type": "string"
            },
            "name": {
              "description": "The name of the embed job.",
              "type": "string"
            },
            "truncate": {
              "default": "END",
              "description": "One of `START|END` to specify how the API will handle inputs longer than the maximum token length.\n\nPassing `START` will discard the start of the input. `END` will discard the end of the input. In both cases, input is discarded until the remaining input is exactly the maximum input token length for the model.\n",
              "enum": [
                "START",
                "END"
              ],
              "type": "string"
            }
          },
          "required": [
            "model",
            "dataset_id",
            "input_type"
          ],
          "type": "object"
        }
      }
    }
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Response from creating an embed job.",
            "properties": {
              "job_id": {
                "type": "string"
              },
              "meta": {
                "properties": {
                  "api_version": {
                    "properties": {
                      "is_deprecated": {
                        "type": "boolean"
                      },
                      "is_experimental": {
                        "type": "boolean"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "version"
                    ],
                    "type": "object"
                  },
                  "billed_units": {
                    "properties": {
                      "classifications": {
                        "description": "The number of billed classifications units.\n",
                        "type": "number"
                      },
                      "images": {
                        "description": "The number of billed images.\n",
                        "type": "number"
                      },
                      "input_tokens": {
                        "description": "The number of billed input tokens.\n",
                        "type": "number"
                      },
                      "output_tokens": {
                        "description": "The number of billed output tokens.\n",
                        "type": "number"
                      },
                      "search_units": {
                        "description": "The number of billed search units.\n",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "tokens": {
                    "properties": {
                      "input_tokens": {
                        "description": "The number of tokens used as input to the model.\n",
                        "type": "number"
                      },
                      "output_tokens": {
                        "description": "The number of tokens produced by the model.\n",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "warnings": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "job_id"
            ],
            "type": "object"
          }
        }
      },
      "description": "OK",
      "headers": {
        "X-API-Warning": {
          "description": "The name of the project that is making the request.",
          "example": "Parameter xyz is deprecated, for more information please refer to https://docs.cohere.com/versioning-reference",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      }
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "403": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "404": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a resource is not found. This could be because:\n  - The endpoint does not exist\n  - The resource does not exist eg model id, dataset id\n"
    },
    "422": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Too many requests"
    },
    "498": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request or response contains a deny-listed token.\n"
    },
    "499": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request is cancelled by the user.\n"
    },
    "500": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when an uncategorised internal server error occurs.\n"
    },
    "501": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the requested feature is not implemented.\n"
    },
    "503": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the service is unavailable. This could be due to:\n  - Too many users trying to access the service at the same time\n"
    },
    "504": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request to the server times out. This could be due to:\n  - An internal services taking too long to respond\n"
    }
  },
  "summary": "Create an Embed Job",
  "tags": [
    "/embed-jobs"
  ]
}
