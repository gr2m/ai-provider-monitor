{
  "description": "This endpoint takes in a query and a list of texts and produces an ordered array with each text assigned a relevance score.",
  "operationId": "rerankv2",
  "parameters": [
    {
      "description": "The name of the project that is making the request.\n",
      "example": "my-cool-project",
      "in": "header",
      "name": "X-Client-Name",
      "required": false,
      "schema": {
        "type": "string"
      }
    }
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "documents": {
              "description": "A list of texts that will be compared to the `query`.\nFor optimal performance we recommend against sending more than 1,000 documents in a single request.\n\n**Note**: long documents will automatically be truncated to the value of `max_tokens_per_doc`.\n\n**Note**: structured data should be formatted as YAML strings for best performance.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "max_tokens_per_doc": {
              "description": "Defaults to `4096`. Long documents will be automatically truncated to the specified number of tokens.",
              "type": "integer"
            },
            "model": {
              "description": "The identifier of the model to use, eg `rerank-v3.5`.",
              "type": "string"
            },
            "query": {
              "description": "The search query",
              "type": "string"
            },
            "top_n": {
              "description": "Limits the number of returned rerank results to the specified value. If not passed, all the rerank results will be returned.",
              "minimum": 1,
              "type": "integer"
            }
          },
          "required": [
            "query",
            "documents",
            "model"
          ],
          "type": "object"
        }
      }
    },
    "description": ""
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "meta": {
                "properties": {
                  "api_version": {
                    "properties": {
                      "is_deprecated": {
                        "type": "boolean"
                      },
                      "is_experimental": {
                        "type": "boolean"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "version"
                    ],
                    "type": "object"
                  },
                  "billed_units": {
                    "properties": {
                      "classifications": {
                        "description": "The number of billed classifications units.\n",
                        "type": "number"
                      },
                      "images": {
                        "description": "The number of billed images.\n",
                        "type": "number"
                      },
                      "input_tokens": {
                        "description": "The number of billed input tokens.\n",
                        "type": "number"
                      },
                      "output_tokens": {
                        "description": "The number of billed output tokens.\n",
                        "type": "number"
                      },
                      "search_units": {
                        "description": "The number of billed search units.\n",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "tokens": {
                    "properties": {
                      "input_tokens": {
                        "description": "The number of tokens used as input to the model.\n",
                        "type": "number"
                      },
                      "output_tokens": {
                        "description": "The number of tokens produced by the model.\n",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "warnings": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "results": {
                "description": "An ordered list of ranked documents",
                "items": {
                  "properties": {
                    "index": {
                      "description": "Corresponds to the index in the original list of documents to which the ranked document belongs. (i.e. if the first value in the `results` object has an `index` value of 3, it means in the list of documents passed in, the document at `index=3` had the highest relevance)",
                      "type": "integer"
                    },
                    "relevance_score": {
                      "description": "Relevance scores are normalized to be in the range `[0, 1]`. Scores close to `1` indicate a high relevance to the query, and scores closer to `0` indicate low relevance. It is not accurate to assume a score of 0.9 means the document is 2x more relevant than a document with a score of 0.45",
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "required": [
                    "index",
                    "relevance_score"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "results"
            ],
            "type": "object"
          }
        }
      },
      "description": "OK"
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "403": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error indicates that the operation attempted to be performed is not allowed. This could be because:\n  - The api token is invalid\n  - The user does not have the necessary permissions\n"
    },
    "404": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a resource is not found. This could be because:\n  - The endpoint does not exist\n  - The resource does not exist eg model id, dataset id\n"
    },
    "422": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the request is not well formed. This could be because:\n  - JSON is invalid\n  - The request is missing required fields\n  - The request contains an invalid combination of fields\n"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "Too many requests"
    },
    "498": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request or response contains a deny-listed token.\n"
    },
    "499": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request is cancelled by the user.\n"
    },
    "500": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when an uncategorised internal server error occurs.\n"
    },
    "501": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the requested feature is not implemented.\n"
    },
    "503": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when the service is unavailable. This could be due to:\n  - Too many users trying to access the service at the same time\n"
    },
    "504": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      },
      "description": "This error is returned when a request to the server times out. This could be due to:\n  - An internal services taking too long to respond\n"
    }
  },
  "summary": "Rerank API (v2)"
}
