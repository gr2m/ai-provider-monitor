{
  "description": "List available models.\n\nThe Models API response can be used to determine which models are available for use in the API. More recently released models are listed first.",
  "operationId": "models_list",
  "parameters": [
    {
      "description": "ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately before this object.",
      "in": "query",
      "name": "before_id",
      "required": false,
      "schema": {
        "description": "ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately before this object.",
        "title": "Before Id",
        "type": "string"
      }
    },
    {
      "description": "ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.",
      "in": "query",
      "name": "after_id",
      "required": false,
      "schema": {
        "description": "ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.",
        "title": "After Id",
        "type": "string"
      }
    },
    {
      "description": "Number of items to return per page.\n\nDefaults to `20`. Ranges from `1` to `1000`.",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "default": 20,
        "description": "Number of items to return per page.\n\nDefaults to `20`. Ranges from `1` to `1000`.",
        "maximum": 1000,
        "minimum": 1,
        "title": "Limit",
        "type": "integer"
      }
    },
    {
      "description": "The version of the Anthropic API you want to use.\n\nRead more about versioning and our version history [here](https://docs.anthropic.com/en/api/versioning).",
      "in": "header",
      "name": "anthropic-version",
      "required": false,
      "schema": {
        "description": "The version of the Anthropic API you want to use.\n\nRead more about versioning and our version history [here](https://docs.anthropic.com/en/api/versioning).",
        "title": "Anthropic-Version",
        "type": "string"
      }
    },
    {
      "description": "Your unique API key for authentication.\n\nThis key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.",
      "in": "header",
      "name": "x-api-key",
      "required": false,
      "schema": {
        "description": "Your unique API key for authentication.\n\nThis key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.",
        "title": "X-Api-Key",
        "type": "string"
      }
    },
    {
      "description": "Optional header to specify the beta version(s) you want to use.\n\nTo use multiple betas, use a comma separated list like `beta1,beta2` or specify the header multiple times for each beta.",
      "in": "header",
      "name": "anthropic-beta",
      "required": false,
      "schema": {
        "description": "Optional header to specify the beta version(s) you want to use.\n\nTo use multiple betas, use a comma separated list like `beta1,beta2` or specify the header multiple times for each beta.",
        "items": {
          "type": "string"
        },
        "title": "Anthropic-Beta",
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "data": {
                "items": {
                  "properties": {
                    "created_at": {
                      "description": "RFC 3339 datetime string representing the time at which the model was released. May be set to an epoch value if the release date is unknown.",
                      "examples": [
                        "2025-02-19T00:00:00Z"
                      ],
                      "format": "date-time",
                      "title": "Created At",
                      "type": "string"
                    },
                    "display_name": {
                      "description": "A human-readable name for the model.",
                      "examples": [
                        "Claude Sonnet 4"
                      ],
                      "title": "Display Name",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique model identifier.",
                      "examples": [
                        "claude-sonnet-4-20250514"
                      ],
                      "title": "Id",
                      "type": "string"
                    },
                    "type": {
                      "const": "model",
                      "default": "model",
                      "description": "Object type.\n\nFor Models, this is always `\"model\"`.",
                      "enum": [
                        "model"
                      ],
                      "title": "Type",
                      "type": "string"
                    }
                  },
                  "required": [
                    "created_at",
                    "display_name",
                    "id",
                    "type"
                  ],
                  "title": "ModelInfo",
                  "type": "object"
                },
                "title": "Data",
                "type": "array"
              },
              "first_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "First ID in the `data` list. Can be used as the `before_id` for the previous page.",
                "title": "First Id"
              },
              "has_more": {
                "description": "Indicates if there are more results in the requested page direction.",
                "title": "Has More",
                "type": "boolean"
              },
              "last_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Last ID in the `data` list. Can be used as the `after_id` for the next page.",
                "title": "Last Id"
              }
            },
            "required": [
              "data",
              "first_id",
              "has_more",
              "last_id"
            ],
            "title": "ListResponse[ModelInfo]",
            "type": "object"
          }
        }
      },
      "description": "Successful Response"
    },
    "4XX": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "discriminator": {
                  "mapping": {
                    "api_error": "#/components/schemas/APIError",
                    "authentication_error": "#/components/schemas/AuthenticationError",
                    "billing_error": "#/components/schemas/BillingError",
                    "invalid_request_error": "#/components/schemas/InvalidRequestError",
                    "not_found_error": "#/components/schemas/NotFoundError",
                    "overloaded_error": "#/components/schemas/OverloadedError",
                    "permission_error": "#/components/schemas/PermissionError",
                    "rate_limit_error": "#/components/schemas/RateLimitError",
                    "timeout_error": "#/components/schemas/GatewayTimeoutError"
                  },
                  "propertyName": "type"
                },
                "oneOf": [
                  {
                    "properties": {
                      "message": {
                        "default": "Invalid request",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "invalid_request_error",
                        "default": "invalid_request_error",
                        "enum": [
                          "invalid_request_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "InvalidRequestError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Authentication error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "authentication_error",
                        "default": "authentication_error",
                        "enum": [
                          "authentication_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "AuthenticationError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Billing error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "billing_error",
                        "default": "billing_error",
                        "enum": [
                          "billing_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "BillingError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Permission denied",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "permission_error",
                        "default": "permission_error",
                        "enum": [
                          "permission_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "PermissionError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Not found",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "not_found_error",
                        "default": "not_found_error",
                        "enum": [
                          "not_found_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "NotFoundError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Rate limited",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "rate_limit_error",
                        "default": "rate_limit_error",
                        "enum": [
                          "rate_limit_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "RateLimitError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Request timeout",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "timeout_error",
                        "default": "timeout_error",
                        "enum": [
                          "timeout_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "GatewayTimeoutError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Internal server error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "api_error",
                        "default": "api_error",
                        "enum": [
                          "api_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "APIError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Overloaded",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "overloaded_error",
                        "default": "overloaded_error",
                        "enum": [
                          "overloaded_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "OverloadedError",
                    "type": "object"
                  }
                ],
                "title": "Error"
              },
              "request_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Request Id"
              },
              "type": {
                "const": "error",
                "default": "error",
                "enum": [
                  "error"
                ],
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "error",
              "request_id",
              "type"
            ],
            "title": "ErrorResponse",
            "type": "object"
          }
        }
      },
      "description": "Error response.\n\nSee our [errors documentation](https://docs.anthropic.com/en/api/errors) for more details."
    }
  },
  "summary": "List Models"
}
