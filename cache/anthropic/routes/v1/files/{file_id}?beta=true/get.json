{
  "operationId": "beta_get_file_metadata_v1_files__file_id__get",
  "parameters": [
    {
      "description": "ID of the File.",
      "in": "path",
      "name": "file_id",
      "required": true,
      "schema": {
        "description": "ID of the File.",
        "title": "File Id",
        "type": "string"
      }
    },
    {
      "description": "Optional header to specify the beta version(s) you want to use.\n\nTo use multiple betas, use a comma separated list like `beta1,beta2` or specify the header multiple times for each beta.",
      "in": "header",
      "name": "anthropic-beta",
      "required": false,
      "schema": {
        "description": "Optional header to specify the beta version(s) you want to use.\n\nTo use multiple betas, use a comma separated list like `beta1,beta2` or specify the header multiple times for each beta.",
        "items": {
          "type": "string"
        },
        "title": "Anthropic-Beta",
        "type": "string"
      }
    },
    {
      "description": "The version of the Claude API you want to use.\n\nRead more about versioning and our version history [here](https://docs.claude.com/en/api/versioning).",
      "in": "header",
      "name": "anthropic-version",
      "required": false,
      "schema": {
        "description": "The version of the Claude API you want to use.\n\nRead more about versioning and our version history [here](https://docs.claude.com/en/api/versioning).",
        "title": "Anthropic-Version",
        "type": "string"
      }
    },
    {
      "description": "Your unique API key for authentication.\n\nThis key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.",
      "in": "header",
      "name": "x-api-key",
      "required": false,
      "schema": {
        "description": "Your unique API key for authentication.\n\nThis key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.",
        "title": "X-Api-Key",
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "created_at": {
                "description": "RFC 3339 datetime string representing when the file was created.",
                "format": "date-time",
                "title": "Created At",
                "type": "string"
              },
              "downloadable": {
                "default": false,
                "description": "Whether the file can be downloaded.",
                "title": "Downloadable",
                "type": "boolean"
              },
              "filename": {
                "description": "Original filename of the uploaded file.",
                "maxLength": 500,
                "minLength": 1,
                "title": "Filename",
                "type": "string"
              },
              "id": {
                "description": "Unique object identifier.\n\nThe format and length of IDs may change over time.",
                "title": "Id",
                "type": "string"
              },
              "mime_type": {
                "description": "MIME type of the file.",
                "maxLength": 255,
                "minLength": 1,
                "title": "Mime Type",
                "type": "string"
              },
              "size_bytes": {
                "description": "Size of the file in bytes.",
                "minimum": 0,
                "title": "Size Bytes",
                "type": "integer"
              },
              "type": {
                "const": "file",
                "description": "Object type.\n\nFor files, this is always `\"file\"`.",
                "enum": [
                  "file"
                ],
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "created_at",
              "filename",
              "id",
              "mime_type",
              "size_bytes",
              "type"
            ],
            "title": "FileMetadataSchema",
            "type": "object"
          }
        }
      },
      "description": "Successful Response"
    },
    "4XX": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "discriminator": {
                  "mapping": {
                    "api_error": "#/components/schemas/BetaAPIError",
                    "authentication_error": "#/components/schemas/BetaAuthenticationError",
                    "billing_error": "#/components/schemas/BetaBillingError",
                    "invalid_request_error": "#/components/schemas/BetaInvalidRequestError",
                    "not_found_error": "#/components/schemas/BetaNotFoundError",
                    "overloaded_error": "#/components/schemas/BetaOverloadedError",
                    "permission_error": "#/components/schemas/BetaPermissionError",
                    "rate_limit_error": "#/components/schemas/BetaRateLimitError",
                    "timeout_error": "#/components/schemas/BetaGatewayTimeoutError"
                  },
                  "propertyName": "type"
                },
                "oneOf": [
                  {
                    "properties": {
                      "message": {
                        "default": "Invalid request",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "invalid_request_error",
                        "default": "invalid_request_error",
                        "enum": [
                          "invalid_request_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "InvalidRequestError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Authentication error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "authentication_error",
                        "default": "authentication_error",
                        "enum": [
                          "authentication_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "AuthenticationError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Billing error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "billing_error",
                        "default": "billing_error",
                        "enum": [
                          "billing_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "BillingError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Permission denied",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "permission_error",
                        "default": "permission_error",
                        "enum": [
                          "permission_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "PermissionError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Not found",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "not_found_error",
                        "default": "not_found_error",
                        "enum": [
                          "not_found_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "NotFoundError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Rate limited",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "rate_limit_error",
                        "default": "rate_limit_error",
                        "enum": [
                          "rate_limit_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "RateLimitError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Request timeout",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "timeout_error",
                        "default": "timeout_error",
                        "enum": [
                          "timeout_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "GatewayTimeoutError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Internal server error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "api_error",
                        "default": "api_error",
                        "enum": [
                          "api_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "APIError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Overloaded",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "overloaded_error",
                        "default": "overloaded_error",
                        "enum": [
                          "overloaded_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "OverloadedError",
                    "type": "object"
                  }
                ],
                "title": "Error"
              },
              "request_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Request Id"
              },
              "type": {
                "const": "error",
                "default": "error",
                "enum": [
                  "error"
                ],
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "error",
              "request_id",
              "type"
            ],
            "title": "ErrorResponse",
            "type": "object"
          }
        }
      },
      "description": "Error response.\n\nSee our [errors documentation](https://docs.claude.com/en/api/errors) for more details."
    }
  },
  "summary": "Get File Metadata"
}
