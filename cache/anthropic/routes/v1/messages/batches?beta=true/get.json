{
  "description": "List all Message Batches within a Workspace. Most recently created batches are returned first.\n\nLearn more about the Message Batches API in our [user guide](/en/docs/build-with-claude/batch-processing)",
  "operationId": "beta_message_batches_list",
  "parameters": [
    {
      "description": "ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately before this object.",
      "in": "query",
      "name": "before_id",
      "required": false,
      "schema": {
        "description": "ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately before this object.",
        "title": "Before Id",
        "type": "string"
      }
    },
    {
      "description": "ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.",
      "in": "query",
      "name": "after_id",
      "required": false,
      "schema": {
        "description": "ID of the object to use as a cursor for pagination. When provided, returns the page of results immediately after this object.",
        "title": "After Id",
        "type": "string"
      }
    },
    {
      "description": "Number of items to return per page.\n\nDefaults to `20`. Ranges from `1` to `1000`.",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "default": 20,
        "description": "Number of items to return per page.\n\nDefaults to `20`. Ranges from `1` to `1000`.",
        "maximum": 1000,
        "minimum": 1,
        "title": "Limit",
        "type": "integer"
      }
    },
    {
      "description": "Optional header to specify the beta version(s) you want to use.\n\nTo use multiple betas, use a comma separated list like `beta1,beta2` or specify the header multiple times for each beta.",
      "in": "header",
      "name": "anthropic-beta",
      "required": false,
      "schema": {
        "description": "Optional header to specify the beta version(s) you want to use.\n\nTo use multiple betas, use a comma separated list like `beta1,beta2` or specify the header multiple times for each beta.",
        "items": {
          "type": "string"
        },
        "title": "Anthropic-Beta",
        "type": "string"
      }
    },
    {
      "description": "The version of the Anthropic API you want to use.\n\nRead more about versioning and our version history [here](https://docs.anthropic.com/en/api/versioning).",
      "in": "header",
      "name": "anthropic-version",
      "required": false,
      "schema": {
        "description": "The version of the Anthropic API you want to use.\n\nRead more about versioning and our version history [here](https://docs.anthropic.com/en/api/versioning).",
        "title": "Anthropic-Version",
        "type": "string"
      }
    },
    {
      "description": "Your unique API key for authentication.\n\nThis key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.",
      "in": "header",
      "name": "x-api-key",
      "required": false,
      "schema": {
        "description": "Your unique API key for authentication.\n\nThis key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.",
        "title": "X-Api-Key",
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "data": {
                "items": {
                  "properties": {
                    "archived_at": {
                      "anyOf": [
                        {
                          "format": "date-time",
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "RFC 3339 datetime string representing the time at which the Message Batch was archived and its results became unavailable.",
                      "examples": [
                        "2024-08-20T18:37:24.100435Z"
                      ],
                      "title": "Archived At"
                    },
                    "cancel_initiated_at": {
                      "anyOf": [
                        {
                          "format": "date-time",
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "RFC 3339 datetime string representing the time at which cancellation was initiated for the Message Batch. Specified only if cancellation was initiated.",
                      "examples": [
                        "2024-08-20T18:37:24.100435Z"
                      ],
                      "title": "Cancel Initiated At"
                    },
                    "created_at": {
                      "description": "RFC 3339 datetime string representing the time at which the Message Batch was created.",
                      "examples": [
                        "2024-08-20T18:37:24.100435Z"
                      ],
                      "format": "date-time",
                      "title": "Created At",
                      "type": "string"
                    },
                    "ended_at": {
                      "anyOf": [
                        {
                          "format": "date-time",
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "RFC 3339 datetime string representing the time at which processing for the Message Batch ended. Specified only once processing ends.\n\nProcessing ends when every request in a Message Batch has either succeeded, errored, canceled, or expired.",
                      "examples": [
                        "2024-08-20T18:37:24.100435Z"
                      ],
                      "title": "Ended At"
                    },
                    "expires_at": {
                      "description": "RFC 3339 datetime string representing the time at which the Message Batch will expire and end processing, which is 24 hours after creation.",
                      "examples": [
                        "2024-08-20T18:37:24.100435Z"
                      ],
                      "format": "date-time",
                      "title": "Expires At",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique object identifier.\n\nThe format and length of IDs may change over time.",
                      "examples": [
                        "msgbatch_013Zva2CMHLNnXjNJJKqJ2EF"
                      ],
                      "title": "Id",
                      "type": "string"
                    },
                    "processing_status": {
                      "description": "Processing status of the Message Batch.",
                      "enum": [
                        "in_progress",
                        "canceling",
                        "ended"
                      ],
                      "title": "Processing Status",
                      "type": "string"
                    },
                    "request_counts": {
                      "description": "Tallies requests within the Message Batch, categorized by their status.\n\nRequests start as `processing` and move to one of the other statuses only once processing of the entire batch ends. The sum of all values always matches the total number of requests in the batch.",
                      "properties": {
                        "canceled": {
                          "default": 0,
                          "description": "Number of requests in the Message Batch that have been canceled.\n\nThis is zero until processing of the entire Message Batch has ended.",
                          "examples": [
                            10
                          ],
                          "title": "Canceled",
                          "type": "integer"
                        },
                        "errored": {
                          "default": 0,
                          "description": "Number of requests in the Message Batch that encountered an error.\n\nThis is zero until processing of the entire Message Batch has ended.",
                          "examples": [
                            30
                          ],
                          "title": "Errored",
                          "type": "integer"
                        },
                        "expired": {
                          "default": 0,
                          "description": "Number of requests in the Message Batch that have expired.\n\nThis is zero until processing of the entire Message Batch has ended.",
                          "examples": [
                            10
                          ],
                          "title": "Expired",
                          "type": "integer"
                        },
                        "processing": {
                          "default": 0,
                          "description": "Number of requests in the Message Batch that are processing.",
                          "examples": [
                            100
                          ],
                          "title": "Processing",
                          "type": "integer"
                        },
                        "succeeded": {
                          "default": 0,
                          "description": "Number of requests in the Message Batch that have completed successfully.\n\nThis is zero until processing of the entire Message Batch has ended.",
                          "examples": [
                            50
                          ],
                          "title": "Succeeded",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "canceled",
                        "errored",
                        "expired",
                        "processing",
                        "succeeded"
                      ],
                      "title": "RequestCounts",
                      "type": "object"
                    },
                    "results_url": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "URL to a `.jsonl` file containing the results of the Message Batch requests. Specified only once processing ends.\n\nResults in the file are not guaranteed to be in the same order as requests. Use the `custom_id` field to match results to requests.",
                      "examples": [
                        "https://api.anthropic.com/v1/messages/batches/msgbatch_013Zva2CMHLNnXjNJJKqJ2EF/results"
                      ],
                      "title": "Results Url"
                    },
                    "type": {
                      "const": "message_batch",
                      "default": "message_batch",
                      "description": "Object type.\n\nFor Message Batches, this is always `\"message_batch\"`.",
                      "enum": [
                        "message_batch"
                      ],
                      "title": "Type",
                      "type": "string"
                    }
                  },
                  "required": [
                    "archived_at",
                    "cancel_initiated_at",
                    "created_at",
                    "ended_at",
                    "expires_at",
                    "id",
                    "processing_status",
                    "request_counts",
                    "results_url",
                    "type"
                  ],
                  "title": "MessageBatch",
                  "type": "object"
                },
                "title": "Data",
                "type": "array"
              },
              "first_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "First ID in the `data` list. Can be used as the `before_id` for the previous page.",
                "title": "First Id"
              },
              "has_more": {
                "description": "Indicates if there are more results in the requested page direction.",
                "title": "Has More",
                "type": "boolean"
              },
              "last_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Last ID in the `data` list. Can be used as the `after_id` for the next page.",
                "title": "Last Id"
              }
            },
            "required": [
              "data",
              "first_id",
              "has_more",
              "last_id"
            ],
            "title": "ListResponse[MessageBatch]",
            "type": "object"
          }
        }
      },
      "description": "Successful Response"
    },
    "4XX": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "discriminator": {
                  "mapping": {
                    "api_error": "#/components/schemas/BetaAPIError",
                    "authentication_error": "#/components/schemas/BetaAuthenticationError",
                    "billing_error": "#/components/schemas/BetaBillingError",
                    "invalid_request_error": "#/components/schemas/BetaInvalidRequestError",
                    "not_found_error": "#/components/schemas/BetaNotFoundError",
                    "overloaded_error": "#/components/schemas/BetaOverloadedError",
                    "permission_error": "#/components/schemas/BetaPermissionError",
                    "rate_limit_error": "#/components/schemas/BetaRateLimitError",
                    "timeout_error": "#/components/schemas/BetaGatewayTimeoutError"
                  },
                  "propertyName": "type"
                },
                "oneOf": [
                  {
                    "properties": {
                      "message": {
                        "default": "Invalid request",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "invalid_request_error",
                        "default": "invalid_request_error",
                        "enum": [
                          "invalid_request_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "InvalidRequestError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Authentication error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "authentication_error",
                        "default": "authentication_error",
                        "enum": [
                          "authentication_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "AuthenticationError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Billing error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "billing_error",
                        "default": "billing_error",
                        "enum": [
                          "billing_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "BillingError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Permission denied",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "permission_error",
                        "default": "permission_error",
                        "enum": [
                          "permission_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "PermissionError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Not found",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "not_found_error",
                        "default": "not_found_error",
                        "enum": [
                          "not_found_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "NotFoundError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Rate limited",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "rate_limit_error",
                        "default": "rate_limit_error",
                        "enum": [
                          "rate_limit_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "RateLimitError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Request timeout",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "timeout_error",
                        "default": "timeout_error",
                        "enum": [
                          "timeout_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "GatewayTimeoutError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Internal server error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "api_error",
                        "default": "api_error",
                        "enum": [
                          "api_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "APIError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Overloaded",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "overloaded_error",
                        "default": "overloaded_error",
                        "enum": [
                          "overloaded_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "OverloadedError",
                    "type": "object"
                  }
                ],
                "title": "Error"
              },
              "request_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Request Id"
              },
              "type": {
                "const": "error",
                "default": "error",
                "enum": [
                  "error"
                ],
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "error",
              "request_id",
              "type"
            ],
            "title": "ErrorResponse",
            "type": "object"
          }
        }
      },
      "description": "Error response.\n\nSee our [errors documentation](https://docs.anthropic.com/en/api/errors) for more details."
    }
  },
  "summary": "List Message Batches"
}
