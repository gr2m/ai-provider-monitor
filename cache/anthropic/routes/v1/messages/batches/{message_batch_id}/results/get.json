{
  "description": "Streams the results of a Message Batch as a `.jsonl` file.\n\nEach line in the file is a JSON object containing the result of a single request in the Message Batch. Results are not guaranteed to be in the same order as requests. Use the `custom_id` field to match results to requests.\n\nLearn more about the Message Batches API in our [user guide](/en/docs/build-with-claude/batch-processing)",
  "operationId": "message_batches_results",
  "parameters": [
    {
      "description": "ID of the Message Batch.",
      "in": "path",
      "name": "message_batch_id",
      "required": true,
      "schema": {
        "description": "ID of the Message Batch.",
        "title": "Message Batch Id",
        "type": "string"
      }
    },
    {
      "description": "The version of the Claude API you want to use.\n\nRead more about versioning and our version history [here](https://docs.claude.com/en/api/versioning).",
      "in": "header",
      "name": "anthropic-version",
      "required": false,
      "schema": {
        "description": "The version of the Claude API you want to use.\n\nRead more about versioning and our version history [here](https://docs.claude.com/en/api/versioning).",
        "title": "Anthropic-Version",
        "type": "string"
      }
    },
    {
      "description": "Your unique API key for authentication.\n\nThis key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.",
      "in": "header",
      "name": "x-api-key",
      "required": false,
      "schema": {
        "description": "Your unique API key for authentication.\n\nThis key is required in the header of all API requests, to authenticate your account and access Anthropic's services. Get your API key through the [Console](https://console.anthropic.com/settings/keys). Each key is scoped to a Workspace.",
        "title": "X-Api-Key",
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/x-jsonl": {
          "schema": {
            "description": "This is a single line in the response `.jsonl` file and does not represent the response as a whole.",
            "properties": {
              "custom_id": {
                "description": "Developer-provided ID created for each request in a Message Batch. Useful for matching results to requests, as results may be given out of request order.\n\nMust be unique for each request within the Message Batch.",
                "examples": [
                  "my-custom-id-1"
                ],
                "title": "Custom Id",
                "type": "string"
              },
              "result": {
                "description": "Processing result for this request.\n\nContains a Message output if processing was successful, an error response if processing failed, or the reason why processing was not attempted, such as cancellation or expiration.",
                "discriminator": {
                  "mapping": {
                    "canceled": "#/components/schemas/CanceledResult",
                    "errored": "#/components/schemas/ErroredResult",
                    "expired": "#/components/schemas/ExpiredResult",
                    "succeeded": "#/components/schemas/SucceededResult"
                  },
                  "propertyName": "type"
                },
                "oneOf": [
                  {
                    "properties": {
                      "message": {
                        "examples": [
                          {
                            "content": [
                              {
                                "citations": null,
                                "text": "Hi! My name is Claude.",
                                "type": "text"
                              }
                            ],
                            "id": "msg_013Zva2CMHLNnXjNJJKqJ2EF",
                            "model": "claude-sonnet-4-5-20250929",
                            "role": "assistant",
                            "stop_reason": "end_turn",
                            "stop_sequence": null,
                            "type": "message",
                            "usage": {
                              "input_tokens": 2095,
                              "output_tokens": 503
                            }
                          }
                        ],
                        "properties": {
                          "content": {
                            "description": "Content generated by the model.\n\nThis is an array of content blocks, each of which has a `type` that determines its shape.\n\nExample:\n\n```json\n[{\"type\": \"text\", \"text\": \"Hi, I'm Claude.\"}]\n```\n\nIf the request input `messages` ended with an `assistant` turn, then the response `content` will continue directly from that last turn. You can use this to constrain the model's output.\n\nFor example, if the input `messages` were:\n```json\n[\n  {\"role\": \"user\", \"content\": \"What's the Greek name for Sun? (A) Sol (B) Helios (C) Sun\"},\n  {\"role\": \"assistant\", \"content\": \"The best answer is (\"}\n]\n```\n\nThen the response `content` might be:\n\n```json\n[{\"type\": \"text\", \"text\": \"B)\"}]\n```",
                            "examples": [
                              [
                                {
                                  "citations": null,
                                  "text": "Hi! My name is Claude.",
                                  "type": "text"
                                }
                              ]
                            ],
                            "items": {
                              "discriminator": {
                                "mapping": {
                                  "redacted_thinking": "#/components/schemas/ResponseRedactedThinkingBlock",
                                  "server_tool_use": "#/components/schemas/ResponseServerToolUseBlock",
                                  "text": "#/components/schemas/ResponseTextBlock",
                                  "thinking": "#/components/schemas/ResponseThinkingBlock",
                                  "tool_use": "#/components/schemas/ResponseToolUseBlock",
                                  "web_search_tool_result": "#/components/schemas/ResponseWebSearchToolResultBlock"
                                },
                                "propertyName": "type"
                              },
                              "oneOf": [
                                {
                                  "properties": {
                                    "citations": {
                                      "anyOf": [
                                        {
                                          "items": {
                                            "discriminator": {
                                              "mapping": {
                                                "char_location": "#/components/schemas/ResponseCharLocationCitation",
                                                "content_block_location": "#/components/schemas/ResponseContentBlockLocationCitation",
                                                "page_location": "#/components/schemas/ResponsePageLocationCitation",
                                                "search_result_location": "#/components/schemas/ResponseSearchResultLocationCitation",
                                                "web_search_result_location": "#/components/schemas/ResponseWebSearchResultLocationCitation"
                                              },
                                              "propertyName": "type"
                                            },
                                            "oneOf": [
                                              {
                                                "properties": {
                                                  "cited_text": {
                                                    "title": "Cited Text",
                                                    "type": "string"
                                                  },
                                                  "document_index": {
                                                    "minimum": 0,
                                                    "title": "Document Index",
                                                    "type": "integer"
                                                  },
                                                  "document_title": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "title": "Document Title"
                                                  },
                                                  "end_char_index": {
                                                    "title": "End Char Index",
                                                    "type": "integer"
                                                  },
                                                  "file_id": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "default": null,
                                                    "title": "File Id"
                                                  },
                                                  "start_char_index": {
                                                    "minimum": 0,
                                                    "title": "Start Char Index",
                                                    "type": "integer"
                                                  },
                                                  "type": {
                                                    "const": "char_location",
                                                    "default": "char_location",
                                                    "enum": [
                                                      "char_location"
                                                    ],
                                                    "title": "Type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "cited_text",
                                                  "document_index",
                                                  "document_title",
                                                  "end_char_index",
                                                  "file_id",
                                                  "start_char_index",
                                                  "type"
                                                ],
                                                "title": "ResponseCharLocationCitation",
                                                "type": "object"
                                              },
                                              {
                                                "properties": {
                                                  "cited_text": {
                                                    "title": "Cited Text",
                                                    "type": "string"
                                                  },
                                                  "document_index": {
                                                    "minimum": 0,
                                                    "title": "Document Index",
                                                    "type": "integer"
                                                  },
                                                  "document_title": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "title": "Document Title"
                                                  },
                                                  "end_page_number": {
                                                    "title": "End Page Number",
                                                    "type": "integer"
                                                  },
                                                  "file_id": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "default": null,
                                                    "title": "File Id"
                                                  },
                                                  "start_page_number": {
                                                    "minimum": 1,
                                                    "title": "Start Page Number",
                                                    "type": "integer"
                                                  },
                                                  "type": {
                                                    "const": "page_location",
                                                    "default": "page_location",
                                                    "enum": [
                                                      "page_location"
                                                    ],
                                                    "title": "Type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "cited_text",
                                                  "document_index",
                                                  "document_title",
                                                  "end_page_number",
                                                  "file_id",
                                                  "start_page_number",
                                                  "type"
                                                ],
                                                "title": "ResponsePageLocationCitation",
                                                "type": "object"
                                              },
                                              {
                                                "properties": {
                                                  "cited_text": {
                                                    "title": "Cited Text",
                                                    "type": "string"
                                                  },
                                                  "document_index": {
                                                    "minimum": 0,
                                                    "title": "Document Index",
                                                    "type": "integer"
                                                  },
                                                  "document_title": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "title": "Document Title"
                                                  },
                                                  "end_block_index": {
                                                    "title": "End Block Index",
                                                    "type": "integer"
                                                  },
                                                  "file_id": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "default": null,
                                                    "title": "File Id"
                                                  },
                                                  "start_block_index": {
                                                    "minimum": 0,
                                                    "title": "Start Block Index",
                                                    "type": "integer"
                                                  },
                                                  "type": {
                                                    "const": "content_block_location",
                                                    "default": "content_block_location",
                                                    "enum": [
                                                      "content_block_location"
                                                    ],
                                                    "title": "Type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "cited_text",
                                                  "document_index",
                                                  "document_title",
                                                  "end_block_index",
                                                  "file_id",
                                                  "start_block_index",
                                                  "type"
                                                ],
                                                "title": "ResponseContentBlockLocationCitation",
                                                "type": "object"
                                              },
                                              {
                                                "properties": {
                                                  "cited_text": {
                                                    "title": "Cited Text",
                                                    "type": "string"
                                                  },
                                                  "encrypted_index": {
                                                    "title": "Encrypted Index",
                                                    "type": "string"
                                                  },
                                                  "title": {
                                                    "anyOf": [
                                                      {
                                                        "maxLength": 512,
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "title": "Title"
                                                  },
                                                  "type": {
                                                    "const": "web_search_result_location",
                                                    "default": "web_search_result_location",
                                                    "enum": [
                                                      "web_search_result_location"
                                                    ],
                                                    "title": "Type",
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "title": "Url",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "cited_text",
                                                  "encrypted_index",
                                                  "title",
                                                  "type",
                                                  "url"
                                                ],
                                                "title": "ResponseWebSearchResultLocationCitation",
                                                "type": "object"
                                              },
                                              {
                                                "properties": {
                                                  "cited_text": {
                                                    "title": "Cited Text",
                                                    "type": "string"
                                                  },
                                                  "end_block_index": {
                                                    "title": "End Block Index",
                                                    "type": "integer"
                                                  },
                                                  "search_result_index": {
                                                    "minimum": 0,
                                                    "title": "Search Result Index",
                                                    "type": "integer"
                                                  },
                                                  "source": {
                                                    "title": "Source",
                                                    "type": "string"
                                                  },
                                                  "start_block_index": {
                                                    "minimum": 0,
                                                    "title": "Start Block Index",
                                                    "type": "integer"
                                                  },
                                                  "title": {
                                                    "anyOf": [
                                                      {
                                                        "type": "string"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ],
                                                    "title": "Title"
                                                  },
                                                  "type": {
                                                    "const": "search_result_location",
                                                    "default": "search_result_location",
                                                    "enum": [
                                                      "search_result_location"
                                                    ],
                                                    "title": "Type",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "cited_text",
                                                  "end_block_index",
                                                  "search_result_index",
                                                  "source",
                                                  "start_block_index",
                                                  "title",
                                                  "type"
                                                ],
                                                "title": "ResponseSearchResultLocationCitation",
                                                "type": "object"
                                              }
                                            ]
                                          },
                                          "type": "array"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ],
                                      "default": null,
                                      "description": "Citations supporting the text block.\n\nThe type of citation returned will depend on the type of document being cited. Citing a PDF results in `page_location`, plain text results in `char_location`, and content document results in `content_block_location`.",
                                      "title": "Citations"
                                    },
                                    "text": {
                                      "maxLength": 5000000,
                                      "minLength": 0,
                                      "title": "Text",
                                      "type": "string"
                                    },
                                    "type": {
                                      "const": "text",
                                      "default": "text",
                                      "enum": [
                                        "text"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "citations",
                                    "text",
                                    "type"
                                  ],
                                  "title": "ResponseTextBlock",
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "signature": {
                                      "title": "Signature",
                                      "type": "string"
                                    },
                                    "thinking": {
                                      "title": "Thinking",
                                      "type": "string"
                                    },
                                    "type": {
                                      "const": "thinking",
                                      "default": "thinking",
                                      "enum": [
                                        "thinking"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "signature",
                                    "thinking",
                                    "type"
                                  ],
                                  "title": "ResponseThinkingBlock",
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "data": {
                                      "title": "Data",
                                      "type": "string"
                                    },
                                    "type": {
                                      "const": "redacted_thinking",
                                      "default": "redacted_thinking",
                                      "enum": [
                                        "redacted_thinking"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "data",
                                    "type"
                                  ],
                                  "title": "ResponseRedactedThinkingBlock",
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "id": {
                                      "pattern": "^[a-zA-Z0-9_-]+$",
                                      "title": "Id",
                                      "type": "string"
                                    },
                                    "input": {
                                      "title": "Input",
                                      "type": "object"
                                    },
                                    "name": {
                                      "minLength": 1,
                                      "title": "Name",
                                      "type": "string"
                                    },
                                    "type": {
                                      "const": "tool_use",
                                      "default": "tool_use",
                                      "enum": [
                                        "tool_use"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "input",
                                    "name",
                                    "type"
                                  ],
                                  "title": "ResponseToolUseBlock",
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "id": {
                                      "pattern": "^srvtoolu_[a-zA-Z0-9_]+$",
                                      "title": "Id",
                                      "type": "string"
                                    },
                                    "input": {
                                      "title": "Input",
                                      "type": "object"
                                    },
                                    "name": {
                                      "const": "web_search",
                                      "enum": [
                                        "web_search"
                                      ],
                                      "title": "Name",
                                      "type": "string"
                                    },
                                    "type": {
                                      "const": "server_tool_use",
                                      "default": "server_tool_use",
                                      "enum": [
                                        "server_tool_use"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "input",
                                    "name",
                                    "type"
                                  ],
                                  "title": "ResponseServerToolUseBlock",
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "content": {
                                      "anyOf": [
                                        {
                                          "properties": {
                                            "error_code": {
                                              "enum": [
                                                "invalid_tool_input",
                                                "unavailable",
                                                "max_uses_exceeded",
                                                "too_many_requests",
                                                "query_too_long"
                                              ],
                                              "title": "WebSearchToolResultErrorCode",
                                              "type": "string"
                                            },
                                            "type": {
                                              "const": "web_search_tool_result_error",
                                              "default": "web_search_tool_result_error",
                                              "enum": [
                                                "web_search_tool_result_error"
                                              ],
                                              "title": "Type",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "error_code",
                                            "type"
                                          ],
                                          "title": "ResponseWebSearchToolResultError",
                                          "type": "object"
                                        },
                                        {
                                          "items": {
                                            "properties": {
                                              "encrypted_content": {
                                                "title": "Encrypted Content",
                                                "type": "string"
                                              },
                                              "page_age": {
                                                "anyOf": [
                                                  {
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "null"
                                                  }
                                                ],
                                                "default": null,
                                                "title": "Page Age"
                                              },
                                              "title": {
                                                "title": "Title",
                                                "type": "string"
                                              },
                                              "type": {
                                                "const": "web_search_result",
                                                "default": "web_search_result",
                                                "enum": [
                                                  "web_search_result"
                                                ],
                                                "title": "Type",
                                                "type": "string"
                                              },
                                              "url": {
                                                "title": "Url",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "encrypted_content",
                                              "page_age",
                                              "title",
                                              "type",
                                              "url"
                                            ],
                                            "title": "ResponseWebSearchResultBlock",
                                            "type": "object"
                                          },
                                          "type": "array"
                                        }
                                      ],
                                      "title": "Content"
                                    },
                                    "tool_use_id": {
                                      "pattern": "^srvtoolu_[a-zA-Z0-9_]+$",
                                      "title": "Tool Use Id",
                                      "type": "string"
                                    },
                                    "type": {
                                      "const": "web_search_tool_result",
                                      "default": "web_search_tool_result",
                                      "enum": [
                                        "web_search_tool_result"
                                      ],
                                      "title": "Type",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "content",
                                    "tool_use_id",
                                    "type"
                                  ],
                                  "title": "ResponseWebSearchToolResultBlock",
                                  "type": "object"
                                }
                              ]
                            },
                            "title": "Content",
                            "type": "array"
                          },
                          "id": {
                            "description": "Unique object identifier.\n\nThe format and length of IDs may change over time.",
                            "examples": [
                              "msg_013Zva2CMHLNnXjNJJKqJ2EF"
                            ],
                            "title": "Id",
                            "type": "string"
                          },
                          "model": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "const": "claude-3-7-sonnet-latest",
                                "description": "High-performance model with early extended thinking"
                              },
                              {
                                "const": "claude-3-7-sonnet-20250219",
                                "description": "High-performance model with early extended thinking"
                              },
                              {
                                "const": "claude-3-5-haiku-latest",
                                "description": "Fastest and most compact model for near-instant responsiveness"
                              },
                              {
                                "const": "claude-3-5-haiku-20241022",
                                "description": "Our fastest model"
                              },
                              {
                                "const": "claude-haiku-4-5",
                                "description": "Hybrid model, capable of near-instant responses and extended thinking"
                              },
                              {
                                "const": "claude-haiku-4-5-20251001",
                                "description": "Hybrid model, capable of near-instant responses and extended thinking"
                              },
                              {
                                "const": "claude-sonnet-4-20250514",
                                "description": "High-performance model with extended thinking"
                              },
                              {
                                "const": "claude-sonnet-4-0",
                                "description": "High-performance model with extended thinking"
                              },
                              {
                                "const": "claude-4-sonnet-20250514",
                                "description": "High-performance model with extended thinking"
                              },
                              {
                                "const": "claude-sonnet-4-5",
                                "description": "Our best model for real-world agents and coding"
                              },
                              {
                                "const": "claude-sonnet-4-5-20250929",
                                "description": "Our best model for real-world agents and coding"
                              },
                              {
                                "const": "claude-3-5-sonnet-latest",
                                "description": "Our previous most intelligent model"
                              },
                              {
                                "const": "claude-3-5-sonnet-20241022",
                                "description": "Our previous most intelligent model"
                              },
                              {
                                "const": "claude-3-5-sonnet-20240620"
                              },
                              {
                                "const": "claude-opus-4-0",
                                "description": "Our most capable model"
                              },
                              {
                                "const": "claude-opus-4-20250514",
                                "description": "Our most capable model"
                              },
                              {
                                "const": "claude-4-opus-20250514",
                                "description": "Our most capable model"
                              },
                              {
                                "const": "claude-opus-4-1-20250805",
                                "description": "Our most capable model"
                              },
                              {
                                "const": "claude-3-opus-latest",
                                "deprecated": true,
                                "description": "Excels at writing and complex tasks"
                              },
                              {
                                "const": "claude-3-opus-20240229",
                                "deprecated": true,
                                "description": "Excels at writing and complex tasks"
                              },
                              {
                                "const": "claude-3-haiku-20240307",
                                "description": "Our previous most fast and cost-effective"
                              }
                            ],
                            "description": "The model that will complete your prompt.\\n\\nSee [models](https://docs.anthropic.com/en/docs/models-overview) for additional details and options.",
                            "title": "Model"
                          },
                          "role": {
                            "const": "assistant",
                            "default": "assistant",
                            "description": "Conversational role of the generated message.\n\nThis will always be `\"assistant\"`.",
                            "enum": [
                              "assistant"
                            ],
                            "title": "Role",
                            "type": "string"
                          },
                          "stop_reason": {
                            "anyOf": [
                              {
                                "enum": [
                                  "end_turn",
                                  "max_tokens",
                                  "stop_sequence",
                                  "tool_use",
                                  "pause_turn",
                                  "refusal"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "The reason that we stopped.\n\nThis may be one the following values:\n* `\"end_turn\"`: the model reached a natural stopping point\n* `\"max_tokens\"`: we exceeded the requested `max_tokens` or the model's maximum\n* `\"stop_sequence\"`: one of your provided custom `stop_sequences` was generated\n* `\"tool_use\"`: the model invoked one or more tools\n* `\"pause_turn\"`: we paused a long-running turn. You may provide the response back as-is in a subsequent request to let the model continue.\n* `\"refusal\"`: when streaming classifiers intervene to handle potential policy violations\n\nIn non-streaming mode this value is always non-null. In streaming mode, it is null in the `message_start` event and non-null otherwise.",
                            "title": "Stop Reason"
                          },
                          "stop_sequence": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "default": null,
                            "description": "Which custom stop sequence was generated, if any.\n\nThis value will be a non-null string if one of your custom stop sequences was generated.",
                            "title": "Stop Sequence"
                          },
                          "type": {
                            "const": "message",
                            "default": "message",
                            "description": "Object type.\n\nFor Messages, this is always `\"message\"`.",
                            "enum": [
                              "message"
                            ],
                            "title": "Type",
                            "type": "string"
                          },
                          "usage": {
                            "description": "Billing and rate-limit usage.\n\nAnthropic's API bills and rate-limits by token counts, as tokens represent the underlying cost to our systems.\n\nUnder the hood, the API transforms requests into a format suitable for the model. The model's output then goes through a parsing stage before becoming an API response. As a result, the token counts in `usage` will not match one-to-one with the exact visible content of an API request or response.\n\nFor example, `output_tokens` will be non-zero, even for an empty string response from Claude.\n\nTotal input tokens in a request is the summation of `input_tokens`, `cache_creation_input_tokens`, and `cache_read_input_tokens`.",
                            "examples": [
                              {
                                "input_tokens": 2095,
                                "output_tokens": 503
                              }
                            ],
                            "properties": {
                              "cache_creation": {
                                "anyOf": [
                                  {
                                    "properties": {
                                      "ephemeral_1h_input_tokens": {
                                        "default": 0,
                                        "description": "The number of input tokens used to create the 1 hour cache entry.",
                                        "minimum": 0,
                                        "title": "Ephemeral 1H Input Tokens",
                                        "type": "integer"
                                      },
                                      "ephemeral_5m_input_tokens": {
                                        "default": 0,
                                        "description": "The number of input tokens used to create the 5 minute cache entry.",
                                        "minimum": 0,
                                        "title": "Ephemeral 5M Input Tokens",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "ephemeral_1h_input_tokens",
                                      "ephemeral_5m_input_tokens"
                                    ],
                                    "title": "CacheCreation",
                                    "type": "object"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "default": null,
                                "description": "Breakdown of cached tokens by TTL"
                              },
                              "cache_creation_input_tokens": {
                                "anyOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "default": null,
                                "description": "The number of input tokens used to create the cache entry.",
                                "examples": [
                                  2051
                                ],
                                "title": "Cache Creation Input Tokens"
                              },
                              "cache_read_input_tokens": {
                                "anyOf": [
                                  {
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "default": null,
                                "description": "The number of input tokens read from the cache.",
                                "examples": [
                                  2051
                                ],
                                "title": "Cache Read Input Tokens"
                              },
                              "input_tokens": {
                                "description": "The number of input tokens which were used.",
                                "examples": [
                                  2095
                                ],
                                "minimum": 0,
                                "title": "Input Tokens",
                                "type": "integer"
                              },
                              "output_tokens": {
                                "description": "The number of output tokens which were used.",
                                "examples": [
                                  503
                                ],
                                "minimum": 0,
                                "title": "Output Tokens",
                                "type": "integer"
                              },
                              "server_tool_use": {
                                "anyOf": [
                                  {
                                    "properties": {
                                      "web_search_requests": {
                                        "default": 0,
                                        "description": "The number of web search tool requests.",
                                        "examples": [
                                          0
                                        ],
                                        "minimum": 0,
                                        "title": "Web Search Requests",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "web_search_requests"
                                    ],
                                    "title": "ServerToolUsage",
                                    "type": "object"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "default": null,
                                "description": "The number of server tool requests."
                              },
                              "service_tier": {
                                "anyOf": [
                                  {
                                    "enum": [
                                      "standard",
                                      "priority",
                                      "batch"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ],
                                "default": null,
                                "description": "If the request used the priority, standard, or batch tier.",
                                "title": "Service Tier"
                              }
                            },
                            "required": [
                              "cache_creation",
                              "cache_creation_input_tokens",
                              "cache_read_input_tokens",
                              "input_tokens",
                              "output_tokens",
                              "server_tool_use",
                              "service_tier"
                            ],
                            "title": "Usage",
                            "type": "object"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "role",
                          "content",
                          "model",
                          "stop_reason",
                          "stop_sequence",
                          "usage"
                        ],
                        "title": "Message",
                        "type": "object"
                      },
                      "type": {
                        "const": "succeeded",
                        "default": "succeeded",
                        "enum": [
                          "succeeded"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "SucceededResult",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "error": {
                        "properties": {
                          "error": {
                            "discriminator": {
                              "mapping": {
                                "api_error": "#/components/schemas/APIError",
                                "authentication_error": "#/components/schemas/AuthenticationError",
                                "billing_error": "#/components/schemas/BillingError",
                                "invalid_request_error": "#/components/schemas/InvalidRequestError",
                                "not_found_error": "#/components/schemas/NotFoundError",
                                "overloaded_error": "#/components/schemas/OverloadedError",
                                "permission_error": "#/components/schemas/PermissionError",
                                "rate_limit_error": "#/components/schemas/RateLimitError",
                                "timeout_error": "#/components/schemas/GatewayTimeoutError"
                              },
                              "propertyName": "type"
                            },
                            "oneOf": [
                              {
                                "properties": {
                                  "message": {
                                    "default": "Invalid request",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "invalid_request_error",
                                    "default": "invalid_request_error",
                                    "enum": [
                                      "invalid_request_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "InvalidRequestError",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "message": {
                                    "default": "Authentication error",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "authentication_error",
                                    "default": "authentication_error",
                                    "enum": [
                                      "authentication_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "AuthenticationError",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "message": {
                                    "default": "Billing error",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "billing_error",
                                    "default": "billing_error",
                                    "enum": [
                                      "billing_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "BillingError",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "message": {
                                    "default": "Permission denied",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "permission_error",
                                    "default": "permission_error",
                                    "enum": [
                                      "permission_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "PermissionError",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "message": {
                                    "default": "Not found",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "not_found_error",
                                    "default": "not_found_error",
                                    "enum": [
                                      "not_found_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "NotFoundError",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "message": {
                                    "default": "Rate limited",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "rate_limit_error",
                                    "default": "rate_limit_error",
                                    "enum": [
                                      "rate_limit_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "RateLimitError",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "message": {
                                    "default": "Request timeout",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "timeout_error",
                                    "default": "timeout_error",
                                    "enum": [
                                      "timeout_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "GatewayTimeoutError",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "message": {
                                    "default": "Internal server error",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "api_error",
                                    "default": "api_error",
                                    "enum": [
                                      "api_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "APIError",
                                "type": "object"
                              },
                              {
                                "properties": {
                                  "message": {
                                    "default": "Overloaded",
                                    "title": "Message",
                                    "type": "string"
                                  },
                                  "type": {
                                    "const": "overloaded_error",
                                    "default": "overloaded_error",
                                    "enum": [
                                      "overloaded_error"
                                    ],
                                    "title": "Type",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "message",
                                  "type"
                                ],
                                "title": "OverloadedError",
                                "type": "object"
                              }
                            ],
                            "title": "Error"
                          },
                          "request_id": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "default": null,
                            "title": "Request Id"
                          },
                          "type": {
                            "const": "error",
                            "default": "error",
                            "enum": [
                              "error"
                            ],
                            "title": "Type",
                            "type": "string"
                          }
                        },
                        "required": [
                          "error",
                          "request_id",
                          "type"
                        ],
                        "title": "ErrorResponse",
                        "type": "object"
                      },
                      "type": {
                        "const": "errored",
                        "default": "errored",
                        "enum": [
                          "errored"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "error",
                      "type"
                    ],
                    "title": "ErroredResult",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "type": {
                        "const": "canceled",
                        "default": "canceled",
                        "enum": [
                          "canceled"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "CanceledResult",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "type": {
                        "const": "expired",
                        "default": "expired",
                        "enum": [
                          "expired"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "ExpiredResult",
                    "type": "object"
                  }
                ],
                "title": "Result"
              }
            },
            "required": [
              "custom_id",
              "result"
            ],
            "title": "MessageBatchIndividualResponse",
            "type": "object"
          }
        }
      },
      "description": "Successful Response"
    },
    "4XX": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "discriminator": {
                  "mapping": {
                    "api_error": "#/components/schemas/APIError",
                    "authentication_error": "#/components/schemas/AuthenticationError",
                    "billing_error": "#/components/schemas/BillingError",
                    "invalid_request_error": "#/components/schemas/InvalidRequestError",
                    "not_found_error": "#/components/schemas/NotFoundError",
                    "overloaded_error": "#/components/schemas/OverloadedError",
                    "permission_error": "#/components/schemas/PermissionError",
                    "rate_limit_error": "#/components/schemas/RateLimitError",
                    "timeout_error": "#/components/schemas/GatewayTimeoutError"
                  },
                  "propertyName": "type"
                },
                "oneOf": [
                  {
                    "properties": {
                      "message": {
                        "default": "Invalid request",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "invalid_request_error",
                        "default": "invalid_request_error",
                        "enum": [
                          "invalid_request_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "InvalidRequestError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Authentication error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "authentication_error",
                        "default": "authentication_error",
                        "enum": [
                          "authentication_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "AuthenticationError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Billing error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "billing_error",
                        "default": "billing_error",
                        "enum": [
                          "billing_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "BillingError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Permission denied",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "permission_error",
                        "default": "permission_error",
                        "enum": [
                          "permission_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "PermissionError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Not found",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "not_found_error",
                        "default": "not_found_error",
                        "enum": [
                          "not_found_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "NotFoundError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Rate limited",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "rate_limit_error",
                        "default": "rate_limit_error",
                        "enum": [
                          "rate_limit_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "RateLimitError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Request timeout",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "timeout_error",
                        "default": "timeout_error",
                        "enum": [
                          "timeout_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "GatewayTimeoutError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Internal server error",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "api_error",
                        "default": "api_error",
                        "enum": [
                          "api_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "APIError",
                    "type": "object"
                  },
                  {
                    "properties": {
                      "message": {
                        "default": "Overloaded",
                        "title": "Message",
                        "type": "string"
                      },
                      "type": {
                        "const": "overloaded_error",
                        "default": "overloaded_error",
                        "enum": [
                          "overloaded_error"
                        ],
                        "title": "Type",
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "type"
                    ],
                    "title": "OverloadedError",
                    "type": "object"
                  }
                ],
                "title": "Error"
              },
              "request_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Request Id"
              },
              "type": {
                "const": "error",
                "default": "error",
                "enum": [
                  "error"
                ],
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "error",
              "request_id",
              "type"
            ],
            "title": "ErrorResponse",
            "type": "object"
          }
        }
      },
      "description": "Error response.\n\nSee our [errors documentation](https://docs.claude.com/en/api/errors) for more details."
    }
  },
  "summary": "Retrieve Message Batch results"
}
