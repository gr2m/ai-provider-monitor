{
  "description": "<Note>To retrieve your transcriptions on our EU server, replace `api.assemblyai.com` with `api.eu.assemblyai.com`.</Note>\nGet the transcript split by sentences. The API will attempt to semantically segment the transcript into sentences to create more reader-friendly transcripts.\n",
  "operationId": "getTranscriptSentences",
  "parameters": [
    {
      "description": "ID of the transcript",
      "in": "path",
      "name": "transcript_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "additionalProperties": false,
            "example": {
              "audio_duration": 281,
              "confidence": 0.9579390654205628,
              "id": "d5a3d302-066e-43fb-b63b-8f57baf185db",
              "sentences": [
                {
                  "confidence": 0.72412,
                  "end": 6350,
                  "speaker": null,
                  "start": 250,
                  "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.",
                  "words": [
                    {
                      "confidence": 0.72412,
                      "end": 650,
                      "speaker": null,
                      "start": 250,
                      "text": "Smoke"
                    },
                    {
                      "confidence": 0.99996,
                      "end": 1022,
                      "speaker": null,
                      "start": 730,
                      "text": "from"
                    },
                    {
                      "confidence": 0.99992,
                      "end": 1466,
                      "speaker": null,
                      "start": 1076,
                      "text": "hundreds"
                    },
                    {
                      "confidence": 1,
                      "end": 1646,
                      "speaker": null,
                      "start": 1498,
                      "text": "of"
                    }
                  ]
                },
                {
                  "confidence": 0.99819,
                  "end": 11050,
                  "speaker": null,
                  "start": 6500,
                  "text": "Skylines from Maine to Maryland to Minnesota are gray and smoggy.",
                  "words": [
                    {
                      "confidence": 0.99819,
                      "end": 7306,
                      "speaker": null,
                      "start": 6500,
                      "text": "Skylines"
                    },
                    {
                      "confidence": 0.99987,
                      "end": 7534,
                      "speaker": null,
                      "start": 7338,
                      "text": "from"
                    },
                    {
                      "confidence": 0.9972,
                      "end": 7962,
                      "speaker": null,
                      "start": 7572,
                      "text": "Maine"
                    },
                    {
                      "confidence": 1,
                      "end": 8206,
                      "speaker": null,
                      "start": 8026,
                      "text": "to"
                    },
                    {
                      "confidence": 0.5192,
                      "end": 8650,
                      "speaker": null,
                      "start": 8228,
                      "text": "Maryland"
                    },
                    {
                      "confidence": 1,
                      "end": 8926,
                      "speaker": null,
                      "start": 8730,
                      "text": "to"
                    }
                  ]
                }
              ]
            },
            "properties": {
              "audio_duration": {
                "description": "The duration of the audio file in seconds",
                "type": "number"
              },
              "confidence": {
                "description": "The confidence score for the transcript",
                "format": "double",
                "maximum": 1,
                "minimum": 0,
                "type": "number"
              },
              "id": {
                "description": "The unique identifier for the transcript",
                "format": "uuid",
                "type": "string"
              },
              "sentences": {
                "description": "An array of sentences in the transcript",
                "items": {
                  "additionalProperties": false,
                  "example": {
                    "confidence": 0.72412,
                    "end": 6350,
                    "speaker": null,
                    "start": 250,
                    "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.",
                    "words": [
                      {
                        "confidence": 0.72412,
                        "end": 650,
                        "speaker": null,
                        "start": 250,
                        "text": "Smoke"
                      },
                      {
                        "confidence": 0.99996,
                        "end": 1022,
                        "speaker": null,
                        "start": 730,
                        "text": "from"
                      },
                      {
                        "confidence": 0.99992,
                        "end": 1466,
                        "speaker": null,
                        "start": 1076,
                        "text": "hundreds"
                      },
                      {
                        "confidence": 1,
                        "end": 1646,
                        "speaker": null,
                        "start": 1498,
                        "text": "of"
                      }
                    ]
                  },
                  "properties": {
                    "channel": {
                      "description": "The channel of the sentence. The left and right channels are channels 1 and 2. Additional channels increment the channel number sequentially.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "confidence": {
                      "description": "The confidence score for the transcript of this sentence",
                      "format": "double",
                      "maximum": 1,
                      "minimum": 0,
                      "type": "number"
                    },
                    "end": {
                      "description": "The ending time, in milliseconds, for the sentence",
                      "type": "integer"
                    },
                    "speaker": {
                      "description": "The speaker of the sentence if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "start": {
                      "description": "The starting time, in milliseconds, for the sentence",
                      "type": "integer"
                    },
                    "text": {
                      "description": "The transcript of the sentence",
                      "type": "string"
                    },
                    "words": {
                      "description": "An array of words in the sentence",
                      "items": {
                        "additionalProperties": false,
                        "example": {
                          "channel": null,
                          "confidence": 0.97465,
                          "end": 650,
                          "speaker": null,
                          "start": 250,
                          "text": "Smoke"
                        },
                        "properties": {
                          "channel": {
                            "description": "The channel of the word. The left and right channels are channels 1 and 2. Additional channels increment the channel number sequentially.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "confidence": {
                            "description": "The confidence score for the transcript of this word",
                            "format": "double",
                            "maximum": 1,
                            "minimum": 0,
                            "type": "number"
                          },
                          "end": {
                            "description": "The ending time, in milliseconds, for the word",
                            "type": "integer"
                          },
                          "speaker": {
                            "description": "The speaker of the word if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "start": {
                            "description": "The starting time, in milliseconds, for the word",
                            "type": "integer"
                          },
                          "text": {
                            "description": "The text of the word",
                            "type": "string"
                          }
                        },
                        "required": [
                          "confidence",
                          "start",
                          "end",
                          "text",
                          "speaker"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "text",
                    "start",
                    "end",
                    "confidence",
                    "words",
                    "speaker"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "id",
              "confidence",
              "audio_duration",
              "sentences"
            ],
            "type": "object"
          }
        }
      },
      "description": "Exported sentences"
    },
    "400": {
      "content": {
        "application/json": {
          "example": {
            "error": "This is a sample error message"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Bad request"
    },
    "401": {
      "content": {
        "application/json": {
          "example": {
            "error": "Authentication error, API token missing/invalid"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Unauthorized"
    },
    "404": {
      "content": {
        "application/json": {
          "example": {
            "error": "Not found"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Not found"
    },
    "429": {
      "content": {
        "application/json": {
          "example": {
            "error": "Too Many Requests"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Too many requests",
      "headers": {
        "Retry-After": {
          "description": "The number of seconds to wait before retrying the request",
          "schema": {
            "type": "integer"
          }
        }
      }
    },
    "500": {
      "content": {
        "application/json": {
          "example": {
            "error": "Internal Server Error"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "An error occurred while processing the request"
    },
    "503": {
      "description": "Service unavailable"
    },
    "504": {
      "description": "Gateway timeout"
    }
  },
  "summary": "Get sentences in transcript",
  "tags": [
    "transcript"
  ]
}
