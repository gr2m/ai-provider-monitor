{
  "callbacks": {
    "redactedAudioWebhook": {
      "{$request.body#/webhook_url}": {
        "post": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "allOf": [
                    {
                      "additionalProperties": false,
                      "example": {
                        "redacted_audio_url": "https://s3.us-west-2.amazonaws.com/api.assembly.ai.usw2/redacted-audio/785efd9e-0e20-45e1-967b-3db17770ed9f.wav?AWSAccessKeyId=aws-access-key0id&Signature=signature&x-amz-security-token=security-token&Expires=1698966551",
                        "status": "redacted_audio_ready"
                      },
                      "properties": {
                        "redacted_audio_url": {
                          "description": "The URL of the redacted audio file",
                          "format": "url",
                          "type": "string"
                        },
                        "status": {
                          "description": "The status of the redacted audio",
                          "enum": [
                            "redacted_audio_ready"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "status",
                        "redacted_audio_url"
                      ],
                      "type": "object"
                    }
                  ],
                  "description": "The notification when the redacted audio is ready.",
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "2XX": {
              "description": "Successfully received the notification"
            },
            "4XX": {
              "description": "Invalid request"
            },
            "5XX": {
              "description": "Unexpected error"
            }
          }
        }
      }
    },
    "transcriptReadyWebhook": {
      "{$request.body#/webhook_url}": {
        "post": {
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "description": "The notification when the transcript status is completed or error.",
                  "example": {
                    "status": "completed",
                    "transcript_id": "9ea68fd3-f953-42c1-9742-976c447fb463"
                  },
                  "properties": {
                    "status": {
                      "description": "The status of the transcript. Either completed or error.",
                      "enum": [
                        "completed",
                        "error"
                      ],
                      "type": "string"
                    },
                    "transcript_id": {
                      "description": "The ID of the transcript",
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "required": [
                    "transcript_id",
                    "status"
                  ],
                  "type": "object"
                }
              }
            },
            "required": true
          },
          "responses": {
            "2XX": {
              "description": "Successfully received the notification"
            },
            "4XX": {
              "description": "Invalid request"
            },
            "5XX": {
              "description": "Unexpected error"
            }
          }
        }
      }
    }
  },
  "description": "<Note>To use our EU server for transcription, replace `api.assemblyai.com` with `api.eu.assemblyai.com`.</Note>\nCreate a transcript from a media file that is accessible via a URL.\n",
  "operationId": "createTranscript",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "additionalProperties": false,
          "allOf": [
            {
              "additionalProperties": false,
              "properties": {
                "audio_url": {
                  "description": "The URL of the audio or video file to transcribe.",
                  "format": "url",
                  "type": "string"
                }
              },
              "required": [
                "audio_url"
              ],
              "type": "object"
            },
            {
              "additionalProperties": false,
              "description": "The parameters for creating a transcript",
              "example": {
                "audio_end_at": 280,
                "audio_start_from": 10,
                "auto_chapters": true,
                "auto_highlights": true,
                "content_safety": true,
                "custom_spelling": [],
                "custom_topics": true,
                "disfluencies": false,
                "dual_channel": false,
                "entity_detection": true,
                "filter_profanity": true,
                "format_text": true,
                "iab_categories": true,
                "language_code": "en_us",
                "language_confidence_threshold": 0.7,
                "language_detection": true,
                "multichannel": true,
                "punctuate": true,
                "redact_pii": true,
                "redact_pii_audio": true,
                "redact_pii_audio_quality": "mp3",
                "redact_pii_policies": [
                  "us_social_security_number",
                  "credit_card_number"
                ],
                "redact_pii_sub": "hash",
                "sentiment_analysis": true,
                "speaker_labels": true,
                "speakers_expected": 2,
                "speech_model": null,
                "speech_threshold": 0.5,
                "speech_understanding": {
                  "request": {
                    "translation": {
                      "formal": true,
                      "target_languages": [
                        "es",
                        "de"
                      ]
                    }
                  }
                },
                "summarization": true,
                "summary_model": "informative",
                "summary_type": "bullets",
                "topics": [],
                "webhook_auth_header_name": "webhook-secret",
                "webhook_auth_header_value": "webhook-secret-value",
                "webhook_url": "https://your-webhook-url.tld/path"
              },
              "properties": {
                "audio_end_at": {
                  "description": "The point in time, in milliseconds, to stop transcribing in your media file",
                  "type": "integer"
                },
                "audio_start_from": {
                  "description": "The point in time, in milliseconds, to begin transcribing in your media file",
                  "type": "integer"
                },
                "auto_chapters": {
                  "default": false,
                  "description": "Enable [Auto Chapters](https://www.assemblyai.com/docs/models/auto-chapters), can be true or false",
                  "type": "boolean"
                },
                "auto_highlights": {
                  "default": false,
                  "description": "Enable Key Phrases, either true or false",
                  "type": "boolean"
                },
                "content_safety": {
                  "default": false,
                  "description": "Enable [Content Moderation](https://www.assemblyai.com/docs/models/content-moderation), can be true or false",
                  "type": "boolean"
                },
                "content_safety_confidence": {
                  "default": 50,
                  "description": "The confidence threshold for the Content Moderation model. Values must be between 25 and 100.",
                  "maximum": 100,
                  "minimum": 25,
                  "type": "integer"
                },
                "custom_spelling": {
                  "description": "Customize how words are spelled and formatted using to and from values",
                  "items": {
                    "additionalProperties": false,
                    "description": "Object containing words or phrases to replace, and the word or phrase to replace with",
                    "example": {
                      "from": [
                        "dicarlo"
                      ],
                      "to": "Decarlo"
                    },
                    "properties": {
                      "from": {
                        "description": "Words or phrases to replace",
                        "items": {
                          "description": "Word or phrase to replace",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "to": {
                        "description": "Word to replace with",
                        "type": "string"
                      }
                    },
                    "required": [
                      "from",
                      "to"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "custom_topics": {
                  "default": false,
                  "deprecated": true,
                  "description": "Enable custom topics, either true or false",
                  "type": "boolean"
                },
                "disfluencies": {
                  "default": false,
                  "description": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false",
                  "type": "boolean"
                },
                "dual_channel": {
                  "default": false,
                  "deprecated": true,
                  "description": "Enable [Dual Channel](https://www.assemblyai.com/docs/models/speech-recognition#dual-channel-transcription) transcription, can be true or false.",
                  "type": "boolean"
                },
                "entity_detection": {
                  "default": false,
                  "description": "Enable [Entity Detection](https://www.assemblyai.com/docs/models/entity-detection), can be true or false",
                  "type": "boolean"
                },
                "filter_profanity": {
                  "default": false,
                  "description": "Filter profanity from the transcribed text, can be true or false",
                  "type": "boolean"
                },
                "format_text": {
                  "default": true,
                  "description": "Enable Text Formatting, can be true or false",
                  "type": "boolean"
                },
                "iab_categories": {
                  "default": false,
                  "description": "Enable [Topic Detection](https://www.assemblyai.com/docs/models/topic-detection), can be true or false",
                  "type": "boolean"
                },
                "keyterms_prompt": {
                  "description": "Improve accuracy with up to 200 (for Universal) or 1000 (for Slam-1) domain-specific words or phrases (maximum 6 words per phrase).\n",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "language_code": {
                  "default": "en_us",
                  "description": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).\nThe default value is 'en_us'.\n",
                  "oneOf": [
                    {
                      "anyOf": [
                        {
                          "description": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).\nThe default value is 'en_us'.\n",
                          "enum": [
                            "en",
                            "en_au",
                            "en_uk",
                            "en_us",
                            "es",
                            "fr",
                            "de",
                            "it",
                            "pt",
                            "nl",
                            "af",
                            "sq",
                            "am",
                            "ar",
                            "hy",
                            "as",
                            "az",
                            "ba",
                            "eu",
                            "be",
                            "bn",
                            "bs",
                            "br",
                            "bg",
                            "my",
                            "ca",
                            "zh",
                            "hr",
                            "cs",
                            "da",
                            "et",
                            "fo",
                            "fi",
                            "gl",
                            "ka",
                            "el",
                            "gu",
                            "ht",
                            "ha",
                            "haw",
                            "he",
                            "hi",
                            "hu",
                            "is",
                            "id",
                            "ja",
                            "jw",
                            "kn",
                            "kk",
                            "km",
                            "ko",
                            "lo",
                            "la",
                            "lv",
                            "ln",
                            "lt",
                            "lb",
                            "mk",
                            "mg",
                            "ms",
                            "ml",
                            "mt",
                            "mi",
                            "mr",
                            "mn",
                            "ne",
                            "no",
                            "nn",
                            "oc",
                            "pa",
                            "ps",
                            "fa",
                            "pl",
                            "ro",
                            "ru",
                            "sa",
                            "sr",
                            "sn",
                            "sd",
                            "si",
                            "sk",
                            "sl",
                            "so",
                            "su",
                            "sw",
                            "sv",
                            "tl",
                            "tg",
                            "ta",
                            "tt",
                            "te",
                            "th",
                            "bo",
                            "tr",
                            "tk",
                            "uk",
                            "ur",
                            "uz",
                            "vi",
                            "cy",
                            "yi",
                            "yo"
                          ],
                          "type": "string"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "language_codes": {
                  "description": "The language codes of your audio file. Used for [Code switching](/docs/speech-to-text/pre-recorded-audio/code-switching)\nOne of the values specified must be `en`.\n",
                  "items": {
                    "description": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).\nThe default value is 'en_us'.\n",
                    "enum": [
                      "en",
                      "en_au",
                      "en_uk",
                      "en_us",
                      "es",
                      "fr",
                      "de",
                      "it",
                      "pt",
                      "nl",
                      "af",
                      "sq",
                      "am",
                      "ar",
                      "hy",
                      "as",
                      "az",
                      "ba",
                      "eu",
                      "be",
                      "bn",
                      "bs",
                      "br",
                      "bg",
                      "my",
                      "ca",
                      "zh",
                      "hr",
                      "cs",
                      "da",
                      "et",
                      "fo",
                      "fi",
                      "gl",
                      "ka",
                      "el",
                      "gu",
                      "ht",
                      "ha",
                      "haw",
                      "he",
                      "hi",
                      "hu",
                      "is",
                      "id",
                      "ja",
                      "jw",
                      "kn",
                      "kk",
                      "km",
                      "ko",
                      "lo",
                      "la",
                      "lv",
                      "ln",
                      "lt",
                      "lb",
                      "mk",
                      "mg",
                      "ms",
                      "ml",
                      "mt",
                      "mi",
                      "mr",
                      "mn",
                      "ne",
                      "no",
                      "nn",
                      "oc",
                      "pa",
                      "ps",
                      "fa",
                      "pl",
                      "ro",
                      "ru",
                      "sa",
                      "sr",
                      "sn",
                      "sd",
                      "si",
                      "sk",
                      "sl",
                      "so",
                      "su",
                      "sw",
                      "sv",
                      "tl",
                      "tg",
                      "ta",
                      "tt",
                      "te",
                      "th",
                      "bo",
                      "tr",
                      "tk",
                      "uk",
                      "ur",
                      "uz",
                      "vi",
                      "cy",
                      "yi",
                      "yo"
                    ],
                    "type": "string"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                },
                "language_confidence_threshold": {
                  "default": 0,
                  "description": "The confidence threshold for the automatically detected language.\nAn error will be returned if the language confidence is below this threshold.\nDefaults to 0.\n",
                  "format": "float",
                  "maximum": 1,
                  "minimum": 0,
                  "type": "number"
                },
                "language_detection": {
                  "default": false,
                  "description": "Enable [Automatic language detection](https://www.assemblyai.com/docs/models/speech-recognition#automatic-language-detection), either true or false.",
                  "type": "boolean"
                },
                "language_detection_options": {
                  "additionalProperties": false,
                  "description": "Specify options for Automatic Language Detection.",
                  "properties": {
                    "code_switching": {
                      "default": "false",
                      "description": "Whether code switching should be detected.\n",
                      "type": "boolean"
                    },
                    "code_switching_confidence_threshold": {
                      "default": 0.3,
                      "description": "The confidence threshold for code switching detection. If the code switching confidence is below this threshold, the transcript will be processed in the language with the highest `language_detection_confidence` score.\n",
                      "maximum": 1,
                      "minimum": 0,
                      "type": "float"
                    },
                    "expected_languages": {
                      "description": "List of languages expected in the audio file. Defaults to `[\"all\"]` when unspecified.",
                      "objects": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "fallback_language": {
                      "default": "auto",
                      "description": "If the detected language of the audio file is not in the list of expected languages, the `fallback_language` is used. Specify `[\"auto\"]` to let our model choose the fallback language from `expected_languages` with the highest confidence score.\n",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "multichannel": {
                  "default": false,
                  "description": "Enable [Multichannel](https://www.assemblyai.com/docs/models/speech-recognition#multichannel-transcription) transcription, can be true or false.",
                  "type": "boolean"
                },
                "prompt": {
                  "deprecated": true,
                  "description": "This parameter does not currently have any functionality attached to it.",
                  "type": "string"
                },
                "punctuate": {
                  "default": true,
                  "description": "Enable Automatic Punctuation, can be true or false",
                  "type": "boolean"
                },
                "redact_pii": {
                  "default": false,
                  "description": "Redact PII from the transcribed text using the Redact PII model, can be true or false",
                  "type": "boolean"
                },
                "redact_pii_audio": {
                  "default": false,
                  "description": "Generate a copy of the original media file with spoken PII \"beeped\" out, can be true or false. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.",
                  "type": "boolean"
                },
                "redact_pii_audio_options": {
                  "additionalProperties": false,
                  "description": "Specify options for PII redacted audio files.",
                  "properties": {
                    "return_redacted_no_speech_audio": {
                      "default": false,
                      "description": "By default, audio redaction provides redacted audio URLs only when speech is detected. However, if your use-case specifically requires redacted audio files even for silent audio files without any dialogue, you can opt to receive these URLs by setting this parameter to `true`.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                "redact_pii_audio_quality": {
                  "description": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.",
                  "enum": [
                    "mp3",
                    "wav"
                  ],
                  "example": "mp3",
                  "type": "string",
                  "default": "mp3"
                },
                "redact_pii_policies": {
                  "description": "The list of PII Redaction policies to enable. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.",
                  "items": {
                    "description": "The type of PII to redact",
                    "enum": [
                      "account_number",
                      "banking_information",
                      "blood_type",
                      "credit_card_cvv",
                      "credit_card_expiration",
                      "credit_card_number",
                      "date",
                      "date_interval",
                      "date_of_birth",
                      "drivers_license",
                      "drug",
                      "duration",
                      "email_address",
                      "event",
                      "filename",
                      "gender_sexuality",
                      "healthcare_number",
                      "injury",
                      "ip_address",
                      "language",
                      "location",
                      "marital_status",
                      "medical_condition",
                      "medical_process",
                      "money_amount",
                      "nationality",
                      "number_sequence",
                      "occupation",
                      "organization",
                      "passport_number",
                      "password",
                      "person_age",
                      "person_name",
                      "phone_number",
                      "physical_attribute",
                      "political_affiliation",
                      "religion",
                      "statistics",
                      "time",
                      "url",
                      "us_social_security_number",
                      "username",
                      "vehicle_id",
                      "zodiac_sign"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "redact_pii_sub": {
                  "default": "hash",
                  "description": "The replacement logic for detected PII, can be `entity_type` or `hash`. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.",
                  "oneOf": [
                    {
                      "description": "The replacement logic for detected PII, can be `entity_name` or `hash`. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.",
                      "enum": [
                        "entity_name",
                        "hash"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "sentiment_analysis": {
                  "default": false,
                  "description": "Enable [Sentiment Analysis](https://www.assemblyai.com/docs/models/sentiment-analysis), can be true or false",
                  "type": "boolean"
                },
                "speaker_labels": {
                  "default": false,
                  "description": "Enable [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization), can be true or false",
                  "type": "boolean"
                },
                "speaker_options": {
                  "additionalProperties": false,
                  "description": "Specify options for speaker diarization.",
                  "properties": {
                    "max_speakers_expected": {
                      "default": 10,
                      "description": "<Warning>Setting this parameter too high may hurt model accuracy</Warning>\nThe maximum number of speakers expected in the audio file.\n",
                      "type": "integer"
                    },
                    "min_speakers_expected": {
                      "default": 1,
                      "description": "The minimum number of speakers expected in the audio file.",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "speakers_expected": {
                  "default": null,
                  "description": "Tells the speaker label model how many speakers it should attempt to identify. See [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization) for more details.",
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "speech_model": {
                  "default": "universal",
                  "deprecated": true,
                  "description": "The speech model to use for the transcription. When `null`, the `universal` model is used.",
                  "oneOf": [
                    {
                      "description": "The speech model to use for the transcription.",
                      "enum": [
                        "best",
                        "slam-1",
                        "universal"
                      ],
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "speech_models": {
                  "description": "List multiple speech models in priority order, allowing our system to automatically route your audio to the best available option.\n",
                  "items": {
                    "description": "The speech model to use for the transcription.",
                    "enum": [
                      "best",
                      "slam-1",
                      "universal"
                    ],
                    "type": "string"
                  },
                  "type": [
                    "array",
                    "null"
                  ]
                },
                "speech_threshold": {
                  "default": 0,
                  "description": "Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.\n",
                  "format": "float",
                  "maximum": 1,
                  "minimum": 0,
                  "type": [
                    "number",
                    "null"
                  ]
                },
                "speech_understanding": {
                  "description": "Enable speech understanding tasks like translation, speaker identification, and custom formatting",
                  "properties": {
                    "request": {
                      "oneOf": [
                        {
                          "properties": {
                            "translation": {
                              "properties": {
                                "formal": {
                                  "default": true,
                                  "description": "Use formal language style",
                                  "type": "boolean"
                                },
                                "target_languages": {
                                  "description": "List of target language codes (e.g., `[\"es\", \"de\"]`)",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "target_languages"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "translation"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "speaker_identification": {
                              "properties": {
                                "known_values": {
                                  "description": "Required if speaker_type is \"role\"",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "speaker_type": {
                                  "description": "Type of speaker identification",
                                  "enum": [
                                    "role",
                                    "name"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "speaker_type"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "speaker_identification"
                          ],
                          "type": "object"
                        },
                        {
                          "properties": {
                            "custom_formatting": {
                              "properties": {
                                "date": {
                                  "description": "Date format pattern (e.g., `\"mm/dd/yyyy\"`)",
                                  "type": "string"
                                },
                                "email": {
                                  "description": "Email format pattern (e.g., `\"username@domain.com\"`)",
                                  "type": "string"
                                },
                                "format_utterances": {
                                  "default": true,
                                  "description": "Whether to format utterances",
                                  "type": "boolean"
                                },
                                "phone_number": {
                                  "description": "Phone number format pattern (e.g., `\"(xxx)xxx-xxxx\"`)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "required": [
                            "custom_formatting"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "required": [
                    "request"
                  ],
                  "type": "object"
                },
                "summarization": {
                  "default": false,
                  "description": "Enable [Summarization](https://www.assemblyai.com/docs/models/summarization), can be true or false",
                  "type": "boolean"
                },
                "summary_model": {
                  "default": "informative",
                  "description": "The model to summarize the transcript",
                  "enum": [
                    "informative",
                    "conversational",
                    "catchy"
                  ],
                  "type": "string"
                },
                "summary_type": {
                  "default": "bullets",
                  "description": "The type of summary",
                  "enum": [
                    "bullets",
                    "bullets_verbose",
                    "gist",
                    "headline",
                    "paragraph"
                  ],
                  "type": "string"
                },
                "topics": {
                  "deprecated": true,
                  "description": "The list of custom topics",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "webhook_auth_header_name": {
                  "default": null,
                  "description": "The header name to be sent with the transcript completed or failed webhook requests",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "webhook_auth_header_value": {
                  "default": null,
                  "description": "The header value to send back with the transcript completed or failed webhook requests for added security",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "webhook_url": {
                  "description": "The URL to which we send webhook requests.\nWe sends two different types of webhook requests.\nOne request when a transcript is completed or failed, and one request when the redacted audio is ready if redact_pii_audio is enabled.\n",
                  "format": "url",
                  "type": "string"
                }
              },
              "type": "object"
            }
          ],
          "description": "The parameters for creating a transcript",
          "example": {
            "audio_end_at": 280,
            "audio_start_from": 10,
            "audio_url": "https://assembly.ai/wildfires.mp3",
            "auto_chapters": true,
            "auto_highlights": true,
            "content_safety": true,
            "custom_spelling": [],
            "custom_topics": true,
            "disfluencies": false,
            "dual_channel": false,
            "entity_detection": true,
            "filter_profanity": true,
            "format_text": true,
            "iab_categories": true,
            "language_code": "en_us",
            "language_confidence_threshold": 0.7,
            "language_detection": true,
            "multichannel": true,
            "punctuate": true,
            "redact_pii": true,
            "redact_pii_audio": true,
            "redact_pii_audio_quality": "mp3",
            "redact_pii_policies": [
              "us_social_security_number",
              "credit_card_number"
            ],
            "redact_pii_sub": "hash",
            "sentiment_analysis": true,
            "speaker_labels": true,
            "speakers_expected": 2,
            "speech_model": null,
            "speech_threshold": 0.5,
            "speech_understanding": {
              "request": {
                "translation": {
                  "formal": true,
                  "target_languages": [
                    "es",
                    "de"
                  ]
                }
              }
            },
            "summarization": true,
            "summary_model": "informative",
            "summary_type": "bullets",
            "topics": [],
            "webhook_auth_header_name": "webhook-secret",
            "webhook_auth_header_value": "webhook-secret-value",
            "webhook_url": "https://your-webhook-url/path"
          },
          "type": "object"
        }
      }
    },
    "description": "Params to create a transcript",
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "additionalProperties": false,
            "description": "A transcript object",
            "example": {
              "acoustic_model": "assemblyai_default",
              "audio_duration": 281,
              "audio_end_at": 280,
              "audio_start_from": 10,
              "audio_url": "https://assembly.ai/wildfires.mp3",
              "auto_chapters": true,
              "auto_highlights": true,
              "auto_highlights_result": {
                "results": [
                  {
                    "count": 1,
                    "rank": 0.08,
                    "text": "air quality alerts",
                    "timestamps": [
                      {
                        "end": 5114,
                        "start": 3978
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.08,
                    "text": "wide ranging air quality consequences",
                    "timestamps": [
                      {
                        "end": 238694,
                        "start": 235388
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.07,
                    "text": "more wildfires",
                    "timestamps": [
                      {
                        "end": 232354,
                        "start": 230972
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.07,
                    "text": "air pollution",
                    "timestamps": [
                      {
                        "end": 156910,
                        "start": 156004
                      }
                    ]
                  },
                  {
                    "count": 3,
                    "rank": 0.07,
                    "text": "weather systems",
                    "timestamps": [
                      {
                        "end": 47958,
                        "start": 47344
                      },
                      {
                        "end": 205818,
                        "start": 205268
                      },
                      {
                        "end": 213434,
                        "start": 211588
                      }
                    ]
                  },
                  {
                    "count": 2,
                    "rank": 0.06,
                    "text": "high levels",
                    "timestamps": [
                      {
                        "end": 121646,
                        "start": 121128
                      },
                      {
                        "end": 155866,
                        "start": 155412
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.06,
                    "text": "health conditions",
                    "timestamps": [
                      {
                        "end": 152666,
                        "start": 152138
                      }
                    ]
                  },
                  {
                    "count": 2,
                    "rank": 0.06,
                    "text": "Peter de Carlo",
                    "timestamps": [
                      {
                        "end": 19930,
                        "start": 18948
                      },
                      {
                        "end": 269194,
                        "start": 268298
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.06,
                    "text": "New York City",
                    "timestamps": [
                      {
                        "end": 126274,
                        "start": 125768
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.05,
                    "text": "respiratory conditions",
                    "timestamps": [
                      {
                        "end": 153786,
                        "start": 152964
                      }
                    ]
                  },
                  {
                    "count": 3,
                    "rank": 0.05,
                    "text": "New York",
                    "timestamps": [
                      {
                        "end": 126034,
                        "start": 125768
                      },
                      {
                        "end": 171938,
                        "start": 171448
                      },
                      {
                        "end": 176322,
                        "start": 176008
                      }
                    ]
                  },
                  {
                    "count": 3,
                    "rank": 0.05,
                    "text": "climate change",
                    "timestamps": [
                      {
                        "end": 230230,
                        "start": 229548
                      },
                      {
                        "end": 245162,
                        "start": 244576
                      },
                      {
                        "end": 263950,
                        "start": 263348
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.05,
                    "text": "Johns Hopkins University Varsity",
                    "timestamps": [
                      {
                        "end": 25490,
                        "start": 23972
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.05,
                    "text": "heart conditions",
                    "timestamps": [
                      {
                        "end": 154506,
                        "start": 153988
                      }
                    ]
                  },
                  {
                    "count": 1,
                    "rank": 0.05,
                    "text": "air quality warnings",
                    "timestamps": [
                      {
                        "end": 13434,
                        "start": 12308
                      }
                    ]
                  }
                ],
                "status": "success"
              },
              "chapters": [
                {
                  "end": 28840,
                  "gist": "Smoggy air quality alerts across US",
                  "headline": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts across US",
                  "start": 250,
                  "summary": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside."
                },
                {
                  "end": 280340,
                  "gist": "What is it about the conditions right now that have caused this round",
                  "headline": "High particulate matter in wildfire smoke can lead to serious health problems",
                  "start": 29610,
                  "summary": "Air pollution levels in Baltimore are considered unhealthy. Exposure to high levels can lead to a host of health problems. With climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences?"
                }
              ],
              "confidence": 0.9404651451800253,
              "content_safety": true,
              "content_safety_labels": {
                "results": [
                  {
                    "labels": [
                      {
                        "confidence": 0.8142836093902588,
                        "label": "disasters",
                        "severity": 0.4093044400215149
                      }
                    ],
                    "sentences_idx_end": 5,
                    "sentences_idx_start": 0,
                    "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                    "timestamp": {
                      "end": 28840,
                      "start": 250
                    }
                  }
                ],
                "severity_score_summary": {
                  "disasters": {
                    "high": 0,
                    "low": 0.5733263024656846,
                    "medium": 0.42667369753431533
                  },
                  "health_issues": {
                    "high": 0.32122030095136983,
                    "low": 0.22863814977924785,
                    "medium": 0.45014154926938227
                  }
                },
                "status": "success",
                "summary": {
                  "disasters": 0.9940800441842205,
                  "health_issues": 0.9216489289040967
                }
              },
              "custom_spelling": null,
              "custom_topics": true,
              "disfluencies": false,
              "dual_channel": false,
              "entities": [
                {
                  "end": 3130,
                  "entity_type": "location",
                  "start": 2548,
                  "text": "Canada"
                },
                {
                  "end": 6382,
                  "entity_type": "location",
                  "start": 5498,
                  "text": "the US"
                },
                {
                  "end": 7914,
                  "entity_type": "location",
                  "start": 7492,
                  "text": "Maine"
                },
                {
                  "end": 8634,
                  "entity_type": "location",
                  "start": 8212,
                  "text": "Maryland"
                },
                {
                  "end": 9578,
                  "entity_type": "location",
                  "start": 8932,
                  "text": "Minnesota"
                },
                {
                  "end": 19930,
                  "entity_type": "person_name",
                  "start": 18948,
                  "text": "Peter de Carlo"
                },
                {
                  "end": 21194,
                  "entity_type": "occupation",
                  "start": 20292,
                  "text": "associate professor"
                },
                {
                  "end": 23706,
                  "entity_type": "organization",
                  "start": 21508,
                  "text": "Department of Environmental Health and Engineering"
                },
                {
                  "end": 25490,
                  "entity_type": "organization",
                  "start": 23972,
                  "text": "Johns Hopkins University Varsity"
                },
                {
                  "end": 26950,
                  "entity_type": "occupation",
                  "start": 26076,
                  "text": "professor"
                },
                {
                  "end": 45898,
                  "entity_type": "location",
                  "start": 45184,
                  "text": "the US"
                },
                {
                  "end": 50086,
                  "entity_type": "nationality",
                  "start": 49728,
                  "text": "Canadian"
                }
              ],
              "entity_detection": true,
              "filter_profanity": true,
              "format_text": true,
              "iab_categories": true,
              "iab_categories_result": {
                "results": [
                  {
                    "labels": [
                      {
                        "label": "Home&Garden>IndoorEnvironmentalQuality",
                        "relevance": 0.988274097442627
                      },
                      {
                        "label": "NewsAndPolitics>Weather",
                        "relevance": 0.5821335911750793
                      },
                      {
                        "label": "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth",
                        "relevance": 0.0042327106930315495
                      },
                      {
                        "label": "NewsAndPolitics>Disasters",
                        "relevance": 0.0033971222583204508
                      },
                      {
                        "label": "BusinessAndFinance>Business>GreenSolutions",
                        "relevance": 0.002469958271831274
                      },
                      {
                        "label": "MedicalHealth>DiseasesAndConditions>Cancer",
                        "relevance": 0.0014376690378412604
                      },
                      {
                        "label": "Science>Environment",
                        "relevance": 0.0014294233405962586
                      },
                      {
                        "label": "Travel>TravelLocations>PolarTravel",
                        "relevance": 0.001234519761055708
                      },
                      {
                        "label": "MedicalHealth>DiseasesAndConditions>ColdAndFlu",
                        "relevance": 0.0010231725173071027
                      },
                      {
                        "label": "BusinessAndFinance>Industries>PowerAndEnergyIndustry",
                        "relevance": 0.0007445293595083058
                      }
                    ],
                    "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                    "timestamp": {
                      "end": 28840,
                      "start": 250
                    }
                  }
                ],
                "status": "success",
                "summary": {
                  "BusinessAndFinance>Business>GreenSolutions": 0.06348437070846558,
                  "BusinessAndFinance>Industries>EnvironmentalServicesIndustry": 0.14393523335456848,
                  "BusinessAndFinance>Industries>PowerAndEnergyIndustry": 0.0012570273829624057,
                  "HealthyLiving": 0.008222488686442375,
                  "HealthyLiving>Wellness>SmokingCessation": 0.001540527562610805,
                  "Home&Garden>IndoorEnvironmentalQuality": 0.9043831825256348,
                  "MedicalHealth>DiseasesAndConditions>Allergies": 0.0010148967849090695,
                  "MedicalHealth>DiseasesAndConditions>Cancer": 0.001097781932912767,
                  "MedicalHealth>DiseasesAndConditions>ColdAndFlu": 0.0022315620444715023,
                  "MedicalHealth>DiseasesAndConditions>HeartAndCardiovascularDiseases": 0.00213034451007843,
                  "MedicalHealth>DiseasesAndConditions>Injuries": 0.0013950627762824297,
                  "MedicalHealth>DiseasesAndConditions>Injuries>FirstAid": 0.0004885646631009877,
                  "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth": 0.11401086300611496,
                  "MedicalHealth>DiseasesAndConditions>MentalHealth": 0.000717321818228811,
                  "NewsAndPolitics>Disasters": 0.05041387677192688,
                  "NewsAndPolitics>Weather": 1,
                  "Science>Environment": 0.16117265820503235,
                  "Style&Fashion>PersonalCare>DeodorantAndAntiperspirant": 0.0006022014422342181,
                  "Technology&Computing>Computing>ComputerNetworking": 0.0005461975233629346,
                  "Travel>TravelLocations>PolarTravel": 0.01308488193899393
                }
              },
              "id": "9ea68fd3-f953-42c1-9742-976c447fb463",
              "language_code": "en_us",
              "language_confidence": 0.9959,
              "language_confidence_threshold": 0.7,
              "language_detection": true,
              "language_model": "assemblyai_default",
              "multichannel": false,
              "punctuate": true,
              "redact_pii": true,
              "redact_pii_audio": true,
              "redact_pii_audio_quality": "mp3",
              "redact_pii_policies": [
                "us_social_security_number",
                "credit_card_number"
              ],
              "redact_pii_sub": "hash",
              "sentiment_analysis": true,
              "sentiment_analysis_results": null,
              "speaker_labels": true,
              "speakers_expected": 2,
              "speech_model": null,
              "speech_threshold": 0.5,
              "status": "completed",
              "summarization": true,
              "summary": "- Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside.\\n- Air pollution levels in Baltimore are considered unhealthy. Exposure to high levels can lead to a host of health problems. With climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences?",
              "summary_model": "informative",
              "summary_type": "bullets",
              "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning. What is it about the conditions right now that have caused this round of wildfires to affect so many people so far away? Well, there's a couple of things. The season has been pretty dry already. And then the fact that we're getting hit in the US. Is because there's a couple of weather systems that are essentially channeling the smoke from those Canadian wildfires through Pennsylvania into the Mid Atlantic and the Northeast and kind of just dropping the smoke there. So what is it in this haze that makes it harmful? And I'm assuming it is harmful. It is. The levels outside right now in Baltimore are considered unhealthy. And most of that is due to what's called particulate matter, which are tiny particles, microscopic smaller than the width of your hair that can get into your lungs and impact your respiratory system, your cardiovascular system, and even your neurological your brain. What makes this particularly harmful? Is it the volume of particulant? Is it something in particular? What is it exactly? Can you just drill down on that a little bit more? Yeah. So the concentration of particulate matter I was looking at some of the monitors that we have was reaching levels of what are, in science, big 150 micrograms per meter cubed, which is more than ten times what the annual average should be and about four times higher than what you're supposed to have on a 24 hours average. And so the concentrations of these particles in the air are just much, much higher than we typically see. And exposure to those high levels can lead to a host of health problems. And who is most vulnerable? I noticed that in New York City, for example, they're canceling outdoor activities. And so here it is in the early days of summer, and they have to keep all the kids inside. So who tends to be vulnerable in a situation like this? It's the youngest. So children, obviously, whose bodies are still developing. The elderly, who are their bodies are more in decline and they're more susceptible to the health impacts of breathing, the poor air quality. And then people who have preexisting health conditions, people with respiratory conditions or heart conditions can be triggered by high levels of air pollution. Could this get worse? That's a good question. In some areas, it's much worse than others. And it just depends on kind of where the smoke is concentrated. I think New York has some of the higher concentrations right now, but that's going to change as that air moves away from the New York area. But over the course of the next few days, we will see different areas being hit at different times with the highest concentrations. I was going to ask you about more fires start burning. I don't expect the concentrations to go up too much higher. I was going to ask you how and you started to answer this, but how much longer could this last? Or forgive me if I'm asking you to speculate, but what do you think? Well, I think the fires are going to burn for a little bit longer, but the key for us in the US. Is the weather system changing. And so right now, it's kind of the weather systems that are pulling that air into our mid Atlantic and Northeast region. As those weather systems change and shift, we'll see that smoke going elsewhere and not impact us in this region as much. And so I think that's going to be the defining factor. And I think the next couple of days we're going to see a shift in that weather pattern and start to push the smoke away from where we are. And finally, with the impacts of climate change, we are seeing more wildfires. Will we be seeing more of these kinds of wide ranging air quality consequences or circumstances? I mean, that is one of the predictions for climate change. Looking into the future, the fire season is starting earlier and lasting longer, and we're seeing more frequent fires. So, yeah, this is probably something that we'll be seeing more frequently. This tends to be much more of an issue in the Western US. So the eastern US. Getting hit right now is a little bit new. But yeah, I think with climate change moving forward, this is something that is going to happen more frequently. That's Peter De Carlo, associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University. Sergeant Carlo, thanks so much for joining us and sharing this expertise with us. Thank you for having me.",
              "throttled": null,
              "topics": [],
              "utterances": [
                {
                  "confidence": 0.9359033333333334,
                  "end": 26950,
                  "speaker": "A",
                  "start": 250,
                  "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor.",
                  "words": [
                    {
                      "confidence": 0.97503,
                      "end": 650,
                      "speaker": "A",
                      "start": 250,
                      "text": "Smoke"
                    },
                    {
                      "confidence": 0.99999,
                      "end": 1022,
                      "speaker": "A",
                      "start": 730,
                      "text": "from"
                    },
                    {
                      "confidence": 0.99843,
                      "end": 1418,
                      "speaker": "A",
                      "start": 1076,
                      "text": "hundreds"
                    },
                    {
                      "confidence": 0.85,
                      "end": 1614,
                      "speaker": "A",
                      "start": 1434,
                      "text": "of"
                    },
                    {
                      "confidence": 0.89657,
                      "end": 2346,
                      "speaker": "A",
                      "start": 1652,
                      "text": "wildfires"
                    },
                    {
                      "confidence": 0.99994,
                      "end": 2526,
                      "speaker": "A",
                      "start": 2378,
                      "text": "in"
                    },
                    {
                      "confidence": 0.93864,
                      "end": 3130,
                      "speaker": "A",
                      "start": 2548,
                      "text": "Canada"
                    },
                    {
                      "confidence": 0.999,
                      "end": 3454,
                      "speaker": "A",
                      "start": 3210,
                      "text": "is"
                    },
                    {
                      "confidence": 0.75366,
                      "end": 3946,
                      "speaker": "A",
                      "start": 3492,
                      "text": "triggering"
                    },
                    {
                      "confidence": 1,
                      "end": 4174,
                      "speaker": "A",
                      "start": 3978,
                      "text": "air"
                    },
                    {
                      "confidence": 0.87745,
                      "end": 4558,
                      "speaker": "A",
                      "start": 4212,
                      "text": "quality"
                    },
                    {
                      "confidence": 0.94739,
                      "end": 5114,
                      "speaker": "A",
                      "start": 4644,
                      "text": "alerts"
                    },
                    {
                      "confidence": 0.99726,
                      "end": 5466,
                      "speaker": "A",
                      "start": 5162,
                      "text": "throughout"
                    },
                    {
                      "confidence": 0.79,
                      "end": 5694,
                      "speaker": "A",
                      "start": 5498,
                      "text": "the"
                    },
                    {
                      "confidence": 0.88,
                      "end": 6382,
                      "speaker": "A",
                      "start": 5732,
                      "text": "US."
                    }
                  ]
                }
              ],
              "webhook_auth": true,
              "webhook_auth_header_name": "webhook-secret",
              "webhook_status_code": 200,
              "webhook_url": "https://your-webhook-url.tld/path",
              "words": [
                {
                  "confidence": 0.97465,
                  "end": 650,
                  "speaker": null,
                  "start": 250,
                  "text": "Smoke"
                },
                {
                  "confidence": 0.99999,
                  "end": 1022,
                  "speaker": null,
                  "start": 730,
                  "text": "from"
                },
                {
                  "confidence": 0.99844,
                  "end": 1418,
                  "speaker": null,
                  "start": 1076,
                  "text": "hundreds"
                },
                {
                  "confidence": 0.84,
                  "end": 1614,
                  "speaker": null,
                  "start": 1434,
                  "text": "of"
                },
                {
                  "confidence": 0.89572,
                  "end": 2346,
                  "speaker": null,
                  "start": 1652,
                  "text": "wildfires"
                },
                {
                  "confidence": 0.99994,
                  "end": 2526,
                  "speaker": null,
                  "start": 2378,
                  "text": "in"
                },
                {
                  "confidence": 0.93953,
                  "end": 3130,
                  "speaker": null,
                  "start": 2548,
                  "text": "Canada"
                },
                {
                  "confidence": 0.999,
                  "end": 3454,
                  "speaker": null,
                  "start": 3210,
                  "text": "is"
                },
                {
                  "confidence": 0.74794,
                  "end": 3946,
                  "speaker": null,
                  "start": 3492,
                  "text": "triggering"
                },
                {
                  "confidence": 1,
                  "end": 4174,
                  "speaker": null,
                  "start": 3978,
                  "text": "air"
                },
                {
                  "confidence": 0.88077,
                  "end": 4558,
                  "speaker": null,
                  "start": 4212,
                  "text": "quality"
                },
                {
                  "confidence": 0.94814,
                  "end": 5114,
                  "speaker": null,
                  "start": 4644,
                  "text": "alerts"
                },
                {
                  "confidence": 0.99726,
                  "end": 5466,
                  "speaker": null,
                  "start": 5162,
                  "text": "throughout"
                },
                {
                  "confidence": 0.79,
                  "end": 5694,
                  "speaker": null,
                  "start": 5498,
                  "text": "the"
                },
                {
                  "confidence": 0.89,
                  "end": 6382,
                  "speaker": null,
                  "start": 5732,
                  "text": "US."
                }
              ]
            },
            "properties": {
              "acoustic_model": {
                "deprecated": true,
                "description": "The acoustic model that was used for the transcript",
                "type": "string"
              },
              "audio_channels": {
                "description": "The number of audio channels in the audio file. This is only present when multichannel is enabled.",
                "type": "integer"
              },
              "audio_duration": {
                "description": "The duration of this transcript object's media file, in seconds",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "audio_end_at": {
                "description": "The point in time, in milliseconds, in the file at which the transcription was terminated",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "audio_start_from": {
                "description": "The point in time, in milliseconds, in the file at which the transcription was started",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "audio_url": {
                "description": "The URL of the media that was transcribed",
                "format": "url",
                "type": "string"
              },
              "auto_chapters": {
                "description": "Whether [Auto Chapters](https://www.assemblyai.com/docs/models/auto-chapters) is enabled, can be true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "auto_highlights": {
                "description": "Whether Key Phrases is enabled, either true or false",
                "type": "boolean"
              },
              "auto_highlights_result": {
                "description": "An array of results for the Key Phrases model, if it is enabled.\nSee [Key Phrases](https://www.assemblyai.com/docs/models/key-phrases) for more information.\n",
                "oneOf": [
                  {
                    "description": "An array of results for the Key Phrases model, if it is enabled.\nSee [Key phrases](https://www.assemblyai.com/docs/models/key-phrases) for more information.\n",
                    "example": {
                      "results": [
                        {
                          "count": 1,
                          "rank": 0.08,
                          "text": "air quality alerts",
                          "timestamps": [
                            {
                              "end": 5114,
                              "start": 3978
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.08,
                          "text": "wide ranging air quality consequences",
                          "timestamps": [
                            {
                              "end": 238694,
                              "start": 235388
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.07,
                          "text": "more wildfires",
                          "timestamps": [
                            {
                              "end": 232354,
                              "start": 230972
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.07,
                          "text": "air pollution",
                          "timestamps": [
                            {
                              "end": 156910,
                              "start": 156004
                            }
                          ]
                        },
                        {
                          "count": 3,
                          "rank": 0.07,
                          "text": "weather systems",
                          "timestamps": [
                            {
                              "end": 47958,
                              "start": 47344
                            },
                            {
                              "end": 205818,
                              "start": 205268
                            },
                            {
                              "end": 213434,
                              "start": 211588
                            }
                          ]
                        },
                        {
                          "count": 2,
                          "rank": 0.06,
                          "text": "high levels",
                          "timestamps": [
                            {
                              "end": 121646,
                              "start": 121128
                            },
                            {
                              "end": 155866,
                              "start": 155412
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.06,
                          "text": "health conditions",
                          "timestamps": [
                            {
                              "end": 152666,
                              "start": 152138
                            }
                          ]
                        },
                        {
                          "count": 2,
                          "rank": 0.06,
                          "text": "Peter de Carlo",
                          "timestamps": [
                            {
                              "end": 19930,
                              "start": 18948
                            },
                            {
                              "end": 269194,
                              "start": 268298
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.06,
                          "text": "New York City",
                          "timestamps": [
                            {
                              "end": 126274,
                              "start": 125768
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.05,
                          "text": "respiratory conditions",
                          "timestamps": [
                            {
                              "end": 153786,
                              "start": 152964
                            }
                          ]
                        },
                        {
                          "count": 3,
                          "rank": 0.05,
                          "text": "New York",
                          "timestamps": [
                            {
                              "end": 126034,
                              "start": 125768
                            },
                            {
                              "end": 171938,
                              "start": 171448
                            },
                            {
                              "end": 176322,
                              "start": 176008
                            }
                          ]
                        },
                        {
                          "count": 3,
                          "rank": 0.05,
                          "text": "climate change",
                          "timestamps": [
                            {
                              "end": 230230,
                              "start": 229548
                            },
                            {
                              "end": 245162,
                              "start": 244576
                            },
                            {
                              "end": 263950,
                              "start": 263348
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.05,
                          "text": "Johns Hopkins University Varsity",
                          "timestamps": [
                            {
                              "end": 25490,
                              "start": 23972
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.05,
                          "text": "heart conditions",
                          "timestamps": [
                            {
                              "end": 154506,
                              "start": 153988
                            }
                          ]
                        },
                        {
                          "count": 1,
                          "rank": 0.05,
                          "text": "air quality warnings",
                          "timestamps": [
                            {
                              "end": 13434,
                              "start": 12308
                            }
                          ]
                        }
                      ],
                      "status": "success"
                    },
                    "properties": {
                      "results": {
                        "description": "A temporally-sequential array of Key Phrases",
                        "items": {
                          "additionalProperties": false,
                          "example": {
                            "count": 1,
                            "rank": 0.08,
                            "text": "air quality alerts",
                            "timestamps": [
                              {
                                "end": 5114,
                                "start": 3978
                              }
                            ]
                          },
                          "properties": {
                            "count": {
                              "description": "The total number of times the key phrase appears in the audio file",
                              "type": "integer"
                            },
                            "rank": {
                              "description": "The total relevancy to the overall audio file of this key phrase - a greater number means more relevant",
                              "format": "float",
                              "maximum": 1,
                              "minimum": 0,
                              "type": "number"
                            },
                            "text": {
                              "description": "The text itself of the key phrase",
                              "type": "string"
                            },
                            "timestamps": {
                              "description": "The timestamp of the of the key phrase",
                              "items": {
                                "additionalProperties": false,
                                "description": "Timestamp containing a start and end property in milliseconds",
                                "example": {
                                  "end": 5114,
                                  "start": 3978
                                },
                                "properties": {
                                  "end": {
                                    "description": "The end time in milliseconds",
                                    "type": "integer"
                                  },
                                  "start": {
                                    "description": "The start time in milliseconds",
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "start",
                                  "end"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "count",
                            "rank",
                            "text",
                            "timestamps"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of the Key Phrases model. Either success, or unavailable in the rare case that the model failed.",
                        "enum": [
                          "success",
                          "unavailable"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "results"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "chapters": {
                "description": "An array of temporally sequential chapters for the audio file",
                "items": {
                  "additionalProperties": false,
                  "description": "Chapter of the audio file",
                  "example": {
                    "end": 28840,
                    "gist": "Smoggy air quality alerts across US",
                    "headline": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts across US",
                    "start": 250,
                    "summary": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. In some places, the air quality warnings include the warning to stay inside."
                  },
                  "properties": {
                    "end": {
                      "description": "The starting time, in milliseconds, for the chapter",
                      "type": "integer"
                    },
                    "gist": {
                      "description": "An ultra-short summary (just a few words) of the content spoken in the chapter",
                      "type": "string"
                    },
                    "headline": {
                      "description": "A single sentence summary of the content spoken during the chapter",
                      "type": "string"
                    },
                    "start": {
                      "description": "The starting time, in milliseconds, for the chapter",
                      "type": "integer"
                    },
                    "summary": {
                      "description": "A one paragraph summary of the content spoken during the chapter",
                      "type": "string"
                    }
                  },
                  "required": [
                    "gist",
                    "headline",
                    "summary",
                    "start",
                    "end"
                  ],
                  "type": "object"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "confidence": {
                "description": "The confidence score for the transcript, between 0.0 (low confidence) and 1.0 (high confidence)",
                "format": "double",
                "maximum": 1,
                "minimum": 0,
                "type": [
                  "number",
                  "null"
                ]
              },
              "content_safety": {
                "description": "Whether [Content Moderation](https://www.assemblyai.com/docs/models/content-moderation) is enabled, can be true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "content_safety_labels": {
                "description": "An array of results for the Content Moderation model, if it is enabled.\nSee [Content moderation](https://www.assemblyai.com/docs/models/content-moderation) for more information.\n",
                "oneOf": [
                  {
                    "description": "An array of results for the Content Moderation model, if it is enabled.\nSee [Content moderation](https://www.assemblyai.com/docs/models/content-moderation) for more information.\n",
                    "example": {
                      "results": [
                        {
                          "labels": [
                            {
                              "confidence": 0.8142836093902588,
                              "label": "disasters",
                              "severity": 0.4093044400215149
                            }
                          ],
                          "sentences_idx_end": 5,
                          "sentences_idx_start": 0,
                          "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                          "timestamp": {
                            "end": 28840,
                            "start": 250
                          }
                        }
                      ],
                      "severity_score_summary": {
                        "disasters": {
                          "high": 0,
                          "low": 0.5733263024656846,
                          "medium": 0.42667369753431533
                        },
                        "health_issues": {
                          "high": 0.32122030095136983,
                          "low": 0.22863814977924785,
                          "medium": 0.45014154926938227
                        }
                      },
                      "status": "success",
                      "summary": {
                        "disasters": 0.9940800441842205,
                        "health_issues": 0.9216489289040967
                      }
                    },
                    "properties": {
                      "results": {
                        "description": "An array of results for the Content Moderation model",
                        "items": {
                          "additionalProperties": false,
                          "example": {
                            "labels": [
                              {
                                "confidence": 0.8142836093902588,
                                "label": "disasters",
                                "severity": 0.4093044400215149
                              }
                            ],
                            "sentences_idx_end": 5,
                            "sentences_idx_start": 0,
                            "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                            "timestamp": {
                              "end": 28840,
                              "start": 250
                            }
                          },
                          "properties": {
                            "labels": {
                              "description": "An array of safety labels, one per sensitive topic that was detected in the section",
                              "items": {
                                "additionalProperties": false,
                                "example": {
                                  "confidence": 0.8142836093902588,
                                  "label": "disasters",
                                  "severity": 0.4093044400215149
                                },
                                "properties": {
                                  "confidence": {
                                    "description": "The confidence score for the topic being discussed, from 0 to 1",
                                    "format": "double",
                                    "maximum": 1,
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "label": {
                                    "description": "The label of the sensitive topic",
                                    "type": "string"
                                  },
                                  "severity": {
                                    "description": "How severely the topic is discussed in the section, from 0 to 1",
                                    "format": "double",
                                    "maximum": 1,
                                    "minimum": 0,
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "label",
                                  "confidence",
                                  "severity"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "sentences_idx_end": {
                              "description": "The sentence index at which the section ends",
                              "type": "integer"
                            },
                            "sentences_idx_start": {
                              "description": "The sentence index at which the section begins",
                              "type": "integer"
                            },
                            "text": {
                              "description": "The transcript of the section flagged by the Content Moderation model",
                              "type": "string"
                            },
                            "timestamp": {
                              "additionalProperties": false,
                              "description": "Timestamp containing a start and end property in milliseconds",
                              "example": {
                                "end": 5114,
                                "start": 3978
                              },
                              "properties": {
                                "end": {
                                  "description": "The end time in milliseconds",
                                  "type": "integer"
                                },
                                "start": {
                                  "description": "The start time in milliseconds",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "text",
                            "labels",
                            "sentences_idx_start",
                            "sentences_idx_end",
                            "timestamp"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "severity_score_summary": {
                        "additionalProperties": {
                          "example": {
                            "high": 0,
                            "low": 0.5733263024656846,
                            "medium": 0.42667369753431533
                          },
                          "properties": {
                            "high": {
                              "format": "double",
                              "maximum": 1,
                              "minimum": 0,
                              "type": "number"
                            },
                            "low": {
                              "format": "double",
                              "maximum": 1,
                              "minimum": 0,
                              "type": "number"
                            },
                            "medium": {
                              "format": "double",
                              "maximum": 1,
                              "minimum": 0,
                              "type": "number"
                            }
                          },
                          "required": [
                            "low",
                            "medium",
                            "high"
                          ],
                          "type": "object"
                        },
                        "description": "A summary of the Content Moderation severity results for the entire audio file",
                        "type": "object"
                      },
                      "status": {
                        "description": "The status of the Content Moderation model. Either success, or unavailable in the rare case that the model failed.",
                        "enum": [
                          "success",
                          "unavailable"
                        ],
                        "type": "string"
                      },
                      "summary": {
                        "additionalProperties": {
                          "description": "A confidence score for the presence of the sensitive topic \"topic\" across the entire audio file",
                          "format": "double",
                          "maximum": 1,
                          "minimum": 0,
                          "type": "number"
                        },
                        "description": "A summary of the Content Moderation confidence results for the entire audio file",
                        "type": "object"
                      }
                    },
                    "required": [
                      "status",
                      "results",
                      "summary",
                      "severity_score_summary"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "custom_spelling": {
                "description": "Customize how words are spelled and formatted using to and from values",
                "items": {
                  "additionalProperties": false,
                  "description": "Object containing words or phrases to replace, and the word or phrase to replace with",
                  "example": {
                    "from": [
                      "dicarlo"
                    ],
                    "to": "Decarlo"
                  },
                  "properties": {
                    "from": {
                      "description": "Words or phrases to replace",
                      "items": {
                        "description": "Word or phrase to replace",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "to": {
                      "description": "Word to replace with",
                      "type": "string"
                    }
                  },
                  "required": [
                    "from",
                    "to"
                  ],
                  "type": "object"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "custom_topics": {
                "deprecated": true,
                "description": "Whether custom topics is enabled, either true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "disfluencies": {
                "description": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "dual_channel": {
                "deprecated": true,
                "description": "Whether [Dual channel transcription](https://www.assemblyai.com/docs/models/speech-recognition#dual-channel-transcription) was enabled in the transcription request, either true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "entities": {
                "description": "An array of results for the Entity Detection model, if it is enabled.\nSee [Entity detection](https://www.assemblyai.com/docs/models/entity-detection) for more information.\n",
                "items": {
                  "additionalProperties": false,
                  "description": "A detected entity",
                  "example": {
                    "end": 3130,
                    "entity_type": "location",
                    "start": 2548,
                    "text": "Canada"
                  },
                  "properties": {
                    "end": {
                      "description": "The ending time, in milliseconds, for the detected entity in the audio file",
                      "type": "integer"
                    },
                    "entity_type": {
                      "description": "The type of entity for the detected entity",
                      "enum": [
                        "account_number",
                        "banking_information",
                        "blood_type",
                        "credit_card_cvv",
                        "credit_card_expiration",
                        "credit_card_number",
                        "date",
                        "date_interval",
                        "date_of_birth",
                        "drivers_license",
                        "drug",
                        "duration",
                        "email_address",
                        "event",
                        "filename",
                        "gender_sexuality",
                        "healthcare_number",
                        "injury",
                        "ip_address",
                        "language",
                        "location",
                        "marital_status",
                        "medical_condition",
                        "medical_process",
                        "money_amount",
                        "nationality",
                        "number_sequence",
                        "occupation",
                        "organization",
                        "passport_number",
                        "password",
                        "person_age",
                        "person_name",
                        "phone_number",
                        "physical_attribute",
                        "political_affiliation",
                        "religion",
                        "statistics",
                        "time",
                        "url",
                        "us_social_security_number",
                        "username",
                        "vehicle_id",
                        "zodiac_sign"
                      ],
                      "type": "string"
                    },
                    "start": {
                      "description": "The starting time, in milliseconds, at which the detected entity appears in the audio file",
                      "type": "integer"
                    },
                    "text": {
                      "description": "The text for the detected entity",
                      "type": "string"
                    }
                  },
                  "required": [
                    "entity_type",
                    "text",
                    "start",
                    "end"
                  ],
                  "type": "object"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "entity_detection": {
                "description": "Whether [Entity Detection](https://www.assemblyai.com/docs/models/entity-detection) is enabled, can be true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "error": {
                "description": "Error message of why the transcript failed",
                "type": "string"
              },
              "filter_profanity": {
                "description": "Whether [Profanity Filtering](https://www.assemblyai.com/docs/models/speech-recognition#profanity-filtering) is enabled, either true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "format_text": {
                "description": "Whether Text Formatting is enabled, either true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "iab_categories": {
                "description": "Whether [Topic Detection](https://www.assemblyai.com/docs/models/topic-detection) is enabled, can be true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "iab_categories_result": {
                "description": "The result of the Topic Detection model, if it is enabled.\nSee [Topic Detection](https://www.assemblyai.com/docs/models/topic-detection) for more information.\n",
                "oneOf": [
                  {
                    "description": "The result of the Topic Detection model, if it is enabled.\nSee [Topic Detection](https://www.assemblyai.com/docs/models/topic-detection) for more information.\n",
                    "example": {
                      "results": [
                        {
                          "labels": [
                            {
                              "label": "Home&Garden>IndoorEnvironmentalQuality",
                              "relevance": 0.988274097442627
                            },
                            {
                              "label": "NewsAndPolitics>Weather",
                              "relevance": 0.5821335911750793
                            },
                            {
                              "label": "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth",
                              "relevance": 0.0042327106930315495
                            },
                            {
                              "label": "NewsAndPolitics>Disasters",
                              "relevance": 0.0033971222583204508
                            },
                            {
                              "label": "BusinessAndFinance>Business>GreenSolutions",
                              "relevance": 0.002469958271831274
                            },
                            {
                              "label": "MedicalHealth>DiseasesAndConditions>Cancer",
                              "relevance": 0.0014376690378412604
                            },
                            {
                              "label": "Science>Environment",
                              "relevance": 0.0014294233405962586
                            },
                            {
                              "label": "Travel>TravelLocations>PolarTravel",
                              "relevance": 0.001234519761055708
                            },
                            {
                              "label": "MedicalHealth>DiseasesAndConditions>ColdAndFlu",
                              "relevance": 0.0010231725173071027
                            },
                            {
                              "label": "BusinessAndFinance>Industries>PowerAndEnergyIndustry",
                              "relevance": 0.0007445293595083058
                            }
                          ],
                          "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                          "timestamp": {
                            "end": 28840,
                            "start": 250
                          }
                        }
                      ],
                      "status": "success",
                      "summary": {
                        "BusinessAndFinance>Business>GreenSolutions": 0.06348437070846558,
                        "BusinessAndFinance>Industries>EnvironmentalServicesIndustry": 0.14393523335456848,
                        "BusinessAndFinance>Industries>PowerAndEnergyIndustry": 0.0012570273829624057,
                        "HealthyLiving": 0.008222488686442375,
                        "HealthyLiving>Wellness>SmokingCessation": 0.001540527562610805,
                        "Home&Garden>IndoorEnvironmentalQuality": 0.9043831825256348,
                        "MedicalHealth>DiseasesAndConditions>Allergies": 0.0010148967849090695,
                        "MedicalHealth>DiseasesAndConditions>Cancer": 0.001097781932912767,
                        "MedicalHealth>DiseasesAndConditions>ColdAndFlu": 0.0022315620444715023,
                        "MedicalHealth>DiseasesAndConditions>HeartAndCardiovascularDiseases": 0.00213034451007843,
                        "MedicalHealth>DiseasesAndConditions>Injuries": 0.0013950627762824297,
                        "MedicalHealth>DiseasesAndConditions>Injuries>FirstAid": 0.0004885646631009877,
                        "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth": 0.11401086300611496,
                        "MedicalHealth>DiseasesAndConditions>MentalHealth": 0.000717321818228811,
                        "NewsAndPolitics>Disasters": 0.05041387677192688,
                        "NewsAndPolitics>Weather": 1,
                        "Science>Environment": 0.16117265820503235,
                        "Style&Fashion>PersonalCare>DeodorantAndAntiperspirant": 0.0006022014422342181,
                        "Technology&Computing>Computing>ComputerNetworking": 0.0005461975233629346,
                        "Travel>TravelLocations>PolarTravel": 0.01308488193899393
                      }
                    },
                    "properties": {
                      "results": {
                        "description": "An array of results for the Topic Detection model",
                        "items": {
                          "additionalProperties": false,
                          "description": "The result of the topic detection model",
                          "example": {
                            "labels": [
                              {
                                "label": "Home&Garden>IndoorEnvironmentalQuality",
                                "relevance": 0.988274097442627
                              },
                              {
                                "label": "NewsAndPolitics>Weather",
                                "relevance": 0.5821335911750793
                              },
                              {
                                "label": "MedicalHealth>DiseasesAndConditions>LungAndRespiratoryHealth",
                                "relevance": 0.0042327106930315495
                              },
                              {
                                "label": "NewsAndPolitics>Disasters",
                                "relevance": 0.0033971222583204508
                              },
                              {
                                "label": "BusinessAndFinance>Business>GreenSolutions",
                                "relevance": 0.002469958271831274
                              },
                              {
                                "label": "MedicalHealth>DiseasesAndConditions>Cancer",
                                "relevance": 0.0014376690378412604
                              },
                              {
                                "label": "Science>Environment",
                                "relevance": 0.0014294233405962586
                              },
                              {
                                "label": "Travel>TravelLocations>PolarTravel",
                                "relevance": 0.001234519761055708
                              },
                              {
                                "label": "MedicalHealth>DiseasesAndConditions>ColdAndFlu",
                                "relevance": 0.0010231725173071027
                              },
                              {
                                "label": "BusinessAndFinance>Industries>PowerAndEnergyIndustry",
                                "relevance": 0.0007445293595083058
                              }
                            ],
                            "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor. Good morning.",
                            "timestamp": {
                              "end": 28840,
                              "start": 250
                            }
                          },
                          "properties": {
                            "labels": {
                              "description": "An array of detected topics in the text",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "label": {
                                    "description": "The IAB taxonomical label for the label of the detected topic, where > denotes supertopic/subtopic relationship",
                                    "type": "string"
                                  },
                                  "relevance": {
                                    "description": "How relevant the detected topic is of a detected topic",
                                    "format": "double",
                                    "maximum": 1,
                                    "minimum": 0,
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "relevance",
                                  "label"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "text": {
                              "description": "The text in the transcript in which a detected topic occurs",
                              "type": "string"
                            },
                            "timestamp": {
                              "additionalProperties": false,
                              "description": "Timestamp containing a start and end property in milliseconds",
                              "example": {
                                "end": 5114,
                                "start": 3978
                              },
                              "properties": {
                                "end": {
                                  "description": "The end time in milliseconds",
                                  "type": "integer"
                                },
                                "start": {
                                  "description": "The start time in milliseconds",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "start",
                                "end"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "text"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "status": {
                        "description": "The status of the Topic Detection model. Either success, or unavailable in the rare case that the model failed.",
                        "enum": [
                          "success",
                          "unavailable"
                        ],
                        "type": "string"
                      },
                      "summary": {
                        "additionalProperties": {
                          "format": "double",
                          "maximum": 1,
                          "minimum": 0,
                          "type": "number"
                        },
                        "description": "The overall relevance of topic to the entire audio file",
                        "type": "object"
                      }
                    },
                    "required": [
                      "status",
                      "results",
                      "summary"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "id": {
                "description": "The unique identifier of your transcript",
                "format": "uuid",
                "type": "string"
              },
              "keyterms_prompt": {
                "description": "Improve accuracy with up to 200 (for Universal) or 1000 (for Slam-1) domain-specific words or phrases (maximum 6 words per phrase).\n",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "language_code": {
                "anyOf": [
                  {
                    "description": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).\nThe default value is 'en_us'.\n",
                    "enum": [
                      "en",
                      "en_au",
                      "en_uk",
                      "en_us",
                      "es",
                      "fr",
                      "de",
                      "it",
                      "pt",
                      "nl",
                      "af",
                      "sq",
                      "am",
                      "ar",
                      "hy",
                      "as",
                      "az",
                      "ba",
                      "eu",
                      "be",
                      "bn",
                      "bs",
                      "br",
                      "bg",
                      "my",
                      "ca",
                      "zh",
                      "hr",
                      "cs",
                      "da",
                      "et",
                      "fo",
                      "fi",
                      "gl",
                      "ka",
                      "el",
                      "gu",
                      "ht",
                      "ha",
                      "haw",
                      "he",
                      "hi",
                      "hu",
                      "is",
                      "id",
                      "ja",
                      "jw",
                      "kn",
                      "kk",
                      "km",
                      "ko",
                      "lo",
                      "la",
                      "lv",
                      "ln",
                      "lt",
                      "lb",
                      "mk",
                      "mg",
                      "ms",
                      "ml",
                      "mt",
                      "mi",
                      "mr",
                      "mn",
                      "ne",
                      "no",
                      "nn",
                      "oc",
                      "pa",
                      "ps",
                      "fa",
                      "pl",
                      "ro",
                      "ru",
                      "sa",
                      "sr",
                      "sn",
                      "sd",
                      "si",
                      "sk",
                      "sl",
                      "so",
                      "su",
                      "sw",
                      "sv",
                      "tl",
                      "tg",
                      "ta",
                      "tt",
                      "te",
                      "th",
                      "bo",
                      "tr",
                      "tk",
                      "uk",
                      "ur",
                      "uz",
                      "vi",
                      "cy",
                      "yi",
                      "yo"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "The language of your audio file.\nPossible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).\nThe default value is 'en_us'.\n"
              },
              "language_codes": {
                "description": "The language codes of your audio file. Used for [Code switching](/docs/speech-to-text/pre-recorded-audio/code-switching)\nOne of the values specified must be `en`.\n",
                "items": {
                  "description": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/concepts/supported-languages).\nThe default value is 'en_us'.\n",
                  "enum": [
                    "en",
                    "en_au",
                    "en_uk",
                    "en_us",
                    "es",
                    "fr",
                    "de",
                    "it",
                    "pt",
                    "nl",
                    "af",
                    "sq",
                    "am",
                    "ar",
                    "hy",
                    "as",
                    "az",
                    "ba",
                    "eu",
                    "be",
                    "bn",
                    "bs",
                    "br",
                    "bg",
                    "my",
                    "ca",
                    "zh",
                    "hr",
                    "cs",
                    "da",
                    "et",
                    "fo",
                    "fi",
                    "gl",
                    "ka",
                    "el",
                    "gu",
                    "ht",
                    "ha",
                    "haw",
                    "he",
                    "hi",
                    "hu",
                    "is",
                    "id",
                    "ja",
                    "jw",
                    "kn",
                    "kk",
                    "km",
                    "ko",
                    "lo",
                    "la",
                    "lv",
                    "ln",
                    "lt",
                    "lb",
                    "mk",
                    "mg",
                    "ms",
                    "ml",
                    "mt",
                    "mi",
                    "mr",
                    "mn",
                    "ne",
                    "no",
                    "nn",
                    "oc",
                    "pa",
                    "ps",
                    "fa",
                    "pl",
                    "ro",
                    "ru",
                    "sa",
                    "sr",
                    "sn",
                    "sd",
                    "si",
                    "sk",
                    "sl",
                    "so",
                    "su",
                    "sw",
                    "sv",
                    "tl",
                    "tg",
                    "ta",
                    "tt",
                    "te",
                    "th",
                    "bo",
                    "tr",
                    "tk",
                    "uk",
                    "ur",
                    "uz",
                    "vi",
                    "cy",
                    "yi",
                    "yo"
                  ],
                  "type": "string"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "language_confidence": {
                "description": "The confidence score for the detected language, between 0.0 (low confidence) and 1.0 (high confidence)",
                "format": "double",
                "maximum": 1,
                "minimum": 0,
                "type": [
                  "number",
                  "null"
                ]
              },
              "language_confidence_threshold": {
                "description": "The confidence threshold for the automatically detected language.\nAn error will be returned if the language confidence is below this threshold.\n",
                "format": "float",
                "maximum": 1,
                "minimum": 0,
                "type": [
                  "number",
                  "null"
                ]
              },
              "language_detection": {
                "description": "Whether [Automatic language detection](/docs/pre-recorded-audio/automatic-language-detection) is enabled, either true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "language_detection_options": {
                "additionalProperties": false,
                "description": "Specify options for Automatic Language Detection.",
                "properties": {
                  "code_switching": {
                    "default": "false",
                    "description": "Whether code switching should be detected.\n",
                    "type": "boolean"
                  },
                  "code_switching_confidence_threshold": {
                    "default": 0.3,
                    "description": "The confidence threshold for code switching detection. If the code switching confidence is below this threshold, the transcript will be processed in the language with the highest `language_detection_confidence` score.\n",
                    "maximum": 1,
                    "minimum": 0,
                    "type": "float"
                  },
                  "expected_languages": {
                    "description": "List of languages expected in the audio file. Defaults to `[\"all\"]` when unspecified.",
                    "objects": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "fallback_language": {
                    "default": "auto",
                    "description": "If the detected language of the audio file is not in the list of expected languages, the `fallback_language` is used. Specify `[\"auto\"]` to let our model choose the fallback language from `expected_languages` with the highest confidence score.\n",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "language_model": {
                "deprecated": true,
                "description": "The language model that was used for the transcript",
                "type": "string"
              },
              "multichannel": {
                "description": "Whether [Multichannel transcription](https://www.assemblyai.com/docs/models/speech-recognition#multichannel-transcription) was enabled in the transcription request, either true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "prompt": {
                "deprecated": true,
                "description": "This parameter does not currently have any functionality attached to it.",
                "type": "string"
              },
              "punctuate": {
                "description": "Whether Automatic Punctuation is enabled, either true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "redact_pii": {
                "description": "Whether [PII Redaction](https://www.assemblyai.com/docs/models/pii-redaction) is enabled, either true or false",
                "type": "boolean"
              },
              "redact_pii_audio": {
                "description": "Whether a redacted version of the audio file was generated,\neither true or false. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more information.\n",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "redact_pii_audio_quality": {
                "description": "The audio quality of the PII-redacted audio file, if redact_pii_audio is enabled.\nSee [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more information.\n",
                "oneOf": [
                  {
                    "description": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.",
                    "enum": [
                      "mp3",
                      "wav"
                    ],
                    "example": "mp3",
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "redact_pii_policies": {
                "description": "The list of PII Redaction policies that were enabled, if PII Redaction is enabled.\nSee [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more information.\n",
                "items": {
                  "description": "The type of PII to redact",
                  "enum": [
                    "account_number",
                    "banking_information",
                    "blood_type",
                    "credit_card_cvv",
                    "credit_card_expiration",
                    "credit_card_number",
                    "date",
                    "date_interval",
                    "date_of_birth",
                    "drivers_license",
                    "drug",
                    "duration",
                    "email_address",
                    "event",
                    "filename",
                    "gender_sexuality",
                    "healthcare_number",
                    "injury",
                    "ip_address",
                    "language",
                    "location",
                    "marital_status",
                    "medical_condition",
                    "medical_process",
                    "money_amount",
                    "nationality",
                    "number_sequence",
                    "occupation",
                    "organization",
                    "passport_number",
                    "password",
                    "person_age",
                    "person_name",
                    "phone_number",
                    "physical_attribute",
                    "political_affiliation",
                    "religion",
                    "statistics",
                    "time",
                    "url",
                    "us_social_security_number",
                    "username",
                    "vehicle_id",
                    "zodiac_sign"
                  ],
                  "type": "string"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "redact_pii_sub": {
                "description": "The replacement logic for detected PII, can be `entity_type` or `hash`. See [PII redaction](https://www.assemblyai.com/docs/models/pii-redaction) for more details.",
                "enum": [
                  "entity_name",
                  "hash"
                ],
                "type": "string"
              },
              "sentiment_analysis": {
                "description": "Whether [Sentiment Analysis](https://www.assemblyai.com/docs/models/sentiment-analysis) is enabled, can be true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "sentiment_analysis_results": {
                "description": "An array of results for the Sentiment Analysis model, if it is enabled.\nSee [Sentiment Analysis](https://www.assemblyai.com/docs/models/sentiment-analysis) for more information.\n",
                "items": {
                  "additionalProperties": false,
                  "description": "The result of the Sentiment Analysis model",
                  "example": {
                    "confidence": 0.8181032538414001,
                    "end": 6350,
                    "sentiment": "NEGATIVE",
                    "speaker": null,
                    "start": 250,
                    "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US."
                  },
                  "properties": {
                    "channel": {
                      "description": "The channel of this utterance. The left and right channels are channels 1 and 2. Additional channels increment the channel number sequentially.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "confidence": {
                      "description": "The confidence score for the detected sentiment of the sentence, from 0 to 1",
                      "format": "double",
                      "maximum": 1,
                      "minimum": 0,
                      "type": "number"
                    },
                    "end": {
                      "description": "The ending time, in milliseconds, of the sentence",
                      "type": "integer"
                    },
                    "sentiment": {
                      "description": "The detected sentiment for the sentence, one of POSITIVE, NEUTRAL, NEGATIVE",
                      "enum": [
                        "POSITIVE",
                        "NEUTRAL",
                        "NEGATIVE"
                      ]
                    },
                    "speaker": {
                      "description": "The speaker of the sentence if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "start": {
                      "description": "The starting time, in milliseconds, of the sentence",
                      "type": "integer"
                    },
                    "text": {
                      "description": "The transcript of the sentence",
                      "type": "string"
                    }
                  },
                  "required": [
                    "text",
                    "start",
                    "end",
                    "sentiment",
                    "confidence",
                    "speaker"
                  ],
                  "type": "object"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "speaker_labels": {
                "description": "Whether [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, can be true or false",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "speakers_expected": {
                "description": "Tell the speaker label model how many speakers it should attempt to identify. See [Speaker diarization](https://www.assemblyai.com/docs/models/speaker-diarization) for more details.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "speech_model": {
                "default": null,
                "deprecated": true,
                "description": "The speech model used for the transcription. When `null`, the `universal` model is used.",
                "oneOf": [
                  {
                    "description": "The speech model to use for the transcription.",
                    "enum": [
                      "best",
                      "slam-1",
                      "universal"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "speech_model_used": {
                "description": "The speech model to use for the transcription.",
                "enum": [
                  "best",
                  "slam-1",
                  "universal"
                ],
                "type": "string"
              },
              "speech_models": {
                "description": "List multiple speech models in priority order, allowing our system to automatically route your audio to the best available option.\n",
                "items": {
                  "description": "The speech model to use for the transcription.",
                  "enum": [
                    "best",
                    "slam-1",
                    "universal"
                  ],
                  "type": "string"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "speech_threshold": {
                "description": "Defaults to null. Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.\n",
                "format": "float",
                "maximum": 1,
                "minimum": 0,
                "type": [
                  "number",
                  "null"
                ]
              },
              "speech_understanding": {
                "description": "Enable speech understanding tasks like translation, speaker identification, and custom formatting",
                "properties": {
                  "request": {
                    "oneOf": [
                      {
                        "properties": {
                          "translation": {
                            "properties": {
                              "formal": {
                                "default": true,
                                "description": "Use formal language style",
                                "type": "boolean"
                              },
                              "target_languages": {
                                "description": "List of target language codes (e.g., `[\"es\", \"de\"]`)",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "target_languages"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "translation"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "speaker_identification": {
                            "properties": {
                              "known_values": {
                                "description": "Required if speaker_type is \"role\"",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "speaker_type": {
                                "description": "Type of speaker identification",
                                "enum": [
                                  "role",
                                  "name"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "speaker_type"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "speaker_identification"
                        ],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "custom_formatting": {
                            "properties": {
                              "date": {
                                "description": "Date format pattern (e.g., `\"mm/dd/yyyy\"`)",
                                "type": "string"
                              },
                              "email": {
                                "description": "Email format pattern (e.g., `\"username@domain.com\"`)",
                                "type": "string"
                              },
                              "format_utterances": {
                                "default": true,
                                "description": "Whether to format utterances",
                                "type": "boolean"
                              },
                              "phone_number": {
                                "description": "Phone number format pattern (e.g., `\"(xxx)xxx-xxxx\"`)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "required": [
                          "custom_formatting"
                        ],
                        "type": "object"
                      }
                    ]
                  },
                  "response": {
                    "oneOf": [
                      {
                        "properties": {
                          "translation": {
                            "properties": {
                              "status": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "speaker_identification": {
                            "properties": {
                              "status": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "custom_formatting": {
                            "properties": {
                              "formatted_text": {
                                "type": "string"
                              },
                              "mapping": {
                                "additionalProperties": {
                                  "type": "string"
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                },
                "required": [
                  "request"
                ],
                "type": "object"
              },
              "speed_boost": {
                "deprecated": true,
                "description": "Whether speed boost is enabled",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "status": {
                "description": "The status of your transcript. Possible values are queued, processing, completed, or error.",
                "enum": [
                  "queued",
                  "processing",
                  "completed",
                  "error"
                ],
                "type": "string"
              },
              "summarization": {
                "description": "Whether [Summarization](https://www.assemblyai.com/docs/models/summarization) is enabled, either true or false",
                "type": "boolean"
              },
              "summary": {
                "description": "The generated summary of the media file, if [Summarization](https://www.assemblyai.com/docs/models/summarization) is enabled",
                "type": [
                  "string",
                  "null"
                ]
              },
              "summary_model": {
                "description": "The Summarization model used to generate the summary,\nif [Summarization](https://www.assemblyai.com/docs/models/summarization) is enabled\n",
                "type": [
                  "string",
                  "null"
                ]
              },
              "summary_type": {
                "description": "The type of summary generated, if [Summarization](https://www.assemblyai.com/docs/models/summarization) is enabled",
                "type": [
                  "string",
                  "null"
                ]
              },
              "text": {
                "description": "The textual transcript of your media file",
                "type": [
                  "string",
                  "null"
                ]
              },
              "throttled": {
                "description": "True while a request is throttled and false when a request is no longer throttled",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "topics": {
                "deprecated": true,
                "description": "The list of custom topics provided if custom topics is enabled",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "translated_texts": {
                "description": "Translated text keyed by language code",
                "properties": {
                  "language_code": {
                    "description": "Translated text for this language code",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "utterances": {
                "description": "When multichannel or speaker_labels is enabled, a list of turn-by-turn utterance objects.\nSee [Speaker diarization](https://www.assemblyai.com/docs/speech-to-text/speaker-diarization) and [Multichannel transcription](https://www.assemblyai.com/docs/speech-to-text/speech-recognition#multichannel-transcription) for more information.\n",
                "items": {
                  "additionalProperties": false,
                  "example": {
                    "confidence": 0.9359033333333334,
                    "end": 26950,
                    "speaker": "A",
                    "start": 250,
                    "text": "Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US. Skylines from Maine to Maryland to Minnesota are gray and smoggy. And in some places, the air quality warnings include the warning to stay inside. We wanted to better understand what's happening here and why, so we called Peter de Carlo, an associate professor in the Department of Environmental Health and Engineering at Johns Hopkins University Varsity. Good morning, professor.",
                    "words": [
                      {
                        "confidence": 0.97503,
                        "end": 650,
                        "speaker": "A",
                        "start": 250,
                        "text": "Smoke"
                      },
                      {
                        "confidence": 0.99999,
                        "end": 1022,
                        "speaker": "A",
                        "start": 730,
                        "text": "from"
                      },
                      {
                        "confidence": 0.99843,
                        "end": 1418,
                        "speaker": "A",
                        "start": 1076,
                        "text": "hundreds"
                      },
                      {
                        "confidence": 0.85,
                        "end": 1614,
                        "speaker": "A",
                        "start": 1434,
                        "text": "of"
                      },
                      {
                        "confidence": 0.89657,
                        "end": 2346,
                        "speaker": "A",
                        "start": 1652,
                        "text": "wildfires"
                      },
                      {
                        "confidence": 0.99994,
                        "end": 2526,
                        "speaker": "A",
                        "start": 2378,
                        "text": "in"
                      },
                      {
                        "confidence": 0.93864,
                        "end": 3130,
                        "speaker": "A",
                        "start": 2548,
                        "text": "Canada"
                      },
                      {
                        "confidence": 0.999,
                        "end": 3454,
                        "speaker": "A",
                        "start": 3210,
                        "text": "is"
                      },
                      {
                        "confidence": 0.75366,
                        "end": 3946,
                        "speaker": "A",
                        "start": 3492,
                        "text": "triggering"
                      },
                      {
                        "confidence": 1,
                        "end": 4174,
                        "speaker": "A",
                        "start": 3978,
                        "text": "air"
                      },
                      {
                        "confidence": 0.87745,
                        "end": 4558,
                        "speaker": "A",
                        "start": 4212,
                        "text": "quality"
                      },
                      {
                        "confidence": 0.94739,
                        "end": 5114,
                        "speaker": "A",
                        "start": 4644,
                        "text": "alerts"
                      },
                      {
                        "confidence": 0.99726,
                        "end": 5466,
                        "speaker": "A",
                        "start": 5162,
                        "text": "throughout"
                      },
                      {
                        "confidence": 0.79,
                        "end": 5694,
                        "speaker": "A",
                        "start": 5498,
                        "text": "the"
                      },
                      {
                        "confidence": 0.88,
                        "end": 6382,
                        "speaker": "A",
                        "start": 5732,
                        "text": "US."
                      }
                    ]
                  },
                  "properties": {
                    "channel": {
                      "description": "The channel of this utterance. The left and right channels are channels 1 and 2. Additional channels increment the channel number sequentially.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "confidence": {
                      "description": "The confidence score for the transcript of this utterance",
                      "format": "double",
                      "maximum": 1,
                      "minimum": 0,
                      "type": "number"
                    },
                    "end": {
                      "description": "The ending time, in milliseconds, of the utterance in the audio file",
                      "type": "integer"
                    },
                    "speaker": {
                      "description": "The speaker of this utterance, where each speaker is assigned a sequential capital letter - e.g. \"A\" for Speaker A, \"B\" for Speaker B, etc.",
                      "type": "string"
                    },
                    "start": {
                      "description": "The starting time, in milliseconds, of the utterance in the audio file",
                      "type": "integer"
                    },
                    "text": {
                      "description": "The text for this utterance",
                      "type": "string"
                    },
                    "words": {
                      "description": "The words in the utterance.",
                      "items": {
                        "additionalProperties": false,
                        "example": {
                          "channel": null,
                          "confidence": 0.97465,
                          "end": 650,
                          "speaker": null,
                          "start": 250,
                          "text": "Smoke"
                        },
                        "properties": {
                          "channel": {
                            "description": "The channel of the word. The left and right channels are channels 1 and 2. Additional channels increment the channel number sequentially.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "confidence": {
                            "description": "The confidence score for the transcript of this word",
                            "format": "double",
                            "maximum": 1,
                            "minimum": 0,
                            "type": "number"
                          },
                          "end": {
                            "description": "The ending time, in milliseconds, for the word",
                            "type": "integer"
                          },
                          "speaker": {
                            "description": "The speaker of the word if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "start": {
                            "description": "The starting time, in milliseconds, for the word",
                            "type": "integer"
                          },
                          "text": {
                            "description": "The text of the word",
                            "type": "string"
                          }
                        },
                        "required": [
                          "confidence",
                          "start",
                          "end",
                          "text",
                          "speaker"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "confidence",
                    "start",
                    "end",
                    "text",
                    "words",
                    "speaker"
                  ],
                  "type": "object"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "webhook_auth": {
                "description": "Whether webhook authentication details were provided",
                "type": "boolean"
              },
              "webhook_auth_header_name": {
                "description": "The header name to be sent with the transcript completed or failed webhook requests",
                "type": [
                  "string",
                  "null"
                ]
              },
              "webhook_status_code": {
                "description": "The status code we received from your server when delivering the transcript completed or failed webhook request, if a webhook URL was provided",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "webhook_url": {
                "description": "The URL to which we send webhook requests.\nWe sends two different types of webhook requests.\nOne request when a transcript is completed or failed, and one request when the redacted audio is ready if redact_pii_audio is enabled.\n",
                "format": "url",
                "type": [
                  "string",
                  "null"
                ]
              },
              "words": {
                "description": "An array of temporally-sequential word objects, one for each word in the transcript.\nSee [Speech recognition](https://www.assemblyai.com/docs/models/speech-recognition) for more information.\n",
                "items": {
                  "additionalProperties": false,
                  "example": {
                    "channel": null,
                    "confidence": 0.97465,
                    "end": 650,
                    "speaker": null,
                    "start": 250,
                    "text": "Smoke"
                  },
                  "properties": {
                    "channel": {
                      "description": "The channel of the word. The left and right channels are channels 1 and 2. Additional channels increment the channel number sequentially.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "confidence": {
                      "description": "The confidence score for the transcript of this word",
                      "format": "double",
                      "maximum": 1,
                      "minimum": 0,
                      "type": "number"
                    },
                    "end": {
                      "description": "The ending time, in milliseconds, for the word",
                      "type": "integer"
                    },
                    "speaker": {
                      "description": "The speaker of the word if [Speaker Diarization](https://www.assemblyai.com/docs/models/speaker-diarization) is enabled, else null",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "start": {
                      "description": "The starting time, in milliseconds, for the word",
                      "type": "integer"
                    },
                    "text": {
                      "description": "The text of the word",
                      "type": "string"
                    }
                  },
                  "required": [
                    "confidence",
                    "start",
                    "end",
                    "text",
                    "speaker"
                  ],
                  "type": "object"
                },
                "type": [
                  "array",
                  "null"
                ]
              }
            },
            "required": [
              "id",
              "speech_model",
              "language_model",
              "acoustic_model",
              "status",
              "audio_url",
              "webhook_auth",
              "auto_highlights",
              "redact_pii",
              "summarization",
              "language_confidence_threshold",
              "language_confidence"
            ],
            "type": "object"
          }
        }
      },
      "description": "Transcript created and queued for processing",
      "links": {
        "DeleteTranscriptById": {
          "description": "The transcript ID can be used as the `transcript_id` parameter in `DELETE /v2/transcript/{transcript_id}`.",
          "operationId": "deleteTranscript",
          "parameters": {
            "transcript_id": "$response.body#/id"
          }
        },
        "GetTranscriptById": {
          "description": "The transcript ID can be used as the `transcript_id` parameter in `GET /v2/transcript/{transcript_id}`.",
          "operationId": "getTranscript",
          "parameters": {
            "transcript_id": "$response.body#/id"
          }
        },
        "GetTranscriptParagraphsById": {
          "description": "The transcript ID can be used as the `transcript_id` parameter in `GET /v2/transcript/{transcript_id}/paragraphs`.",
          "operationId": "getParagraphs",
          "parameters": {
            "transcript_id": "$response.body#/id"
          }
        },
        "GetTranscriptRedactedAudioById": {
          "description": "The transcript ID can be used as the `transcript_id` parameter in `GET /v2/transcript/{transcript_id}/redacted-audio`.",
          "operationId": "getRedactedAudio",
          "parameters": {
            "transcript_id": "$response.body#/id"
          }
        },
        "GetTranscriptSentencesById": {
          "description": "The transcript ID can be used as the `transcript_id` parameter in `GET /v2/transcript/{transcript_id}/sentences`.",
          "operationId": "getSentences",
          "parameters": {
            "transcript_id": "$response.body#/id"
          }
        },
        "GetTranscriptSubtitlesById": {
          "description": "The transcript ID can be used as the `transcript_id` parameter in `GET /v2/transcript/{transcript_id}/{subtitle_format}`.",
          "operationId": "getSubtitles",
          "parameters": {
            "transcript_id": "$response.body#/id"
          }
        },
        "WordSearchByTranscriptId": {
          "description": "The transcript ID can be used as the `transcript_id` parameter in `GET /v2/transcript/{transcript_id}/word-search`.",
          "operationId": "wordSearch",
          "parameters": {
            "transcript_id": "$response.body#/id"
          }
        }
      }
    },
    "400": {
      "content": {
        "application/json": {
          "example": {
            "error": "This is a sample error message"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Bad request"
    },
    "401": {
      "content": {
        "application/json": {
          "example": {
            "error": "Authentication error, API token missing/invalid"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Unauthorized"
    },
    "404": {
      "content": {
        "application/json": {
          "example": {
            "error": "Not found"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Not found"
    },
    "429": {
      "content": {
        "application/json": {
          "example": {
            "error": "Too Many Requests"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Too many requests",
      "headers": {
        "Retry-After": {
          "description": "The number of seconds to wait before retrying the request",
          "schema": {
            "type": "integer"
          }
        }
      }
    },
    "500": {
      "content": {
        "application/json": {
          "example": {
            "error": "Internal Server Error"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "An error occurred while processing the request"
    },
    "503": {
      "description": "Service unavailable"
    },
    "504": {
      "description": "Gateway timeout"
    }
  },
  "summary": "Transcribe audio",
  "tags": [
    "transcript"
  ]
}
