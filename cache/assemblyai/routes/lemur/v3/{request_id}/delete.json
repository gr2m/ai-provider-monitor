{
  "description": "<Note>To use our EU server with LeMUR, replace `api.assemblyai.com` with `api.eu.assemblyai.com`.</Note>\nDelete the data for a previously submitted LeMUR request.\nThe LLM response data, as well as any context provided in the original request will be removed.\n",
  "operationId": "purgeLemurRequestData",
  "parameters": [
    {
      "description": "The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request.",
      "in": "path",
      "name": "request_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "additionalProperties": false,
            "example": {
              "deleted": true,
              "request_id": "914fe7e4-f10a-4364-8946-34614c2873f6",
              "request_id_to_purge": "b7eb03ec-1650-4181-949b-75d9de317de1"
            },
            "properties": {
              "deleted": {
                "description": "Whether the request data was deleted",
                "type": "boolean"
              },
              "request_id": {
                "description": "The ID of the deletion request of the LeMUR request",
                "format": "uuid",
                "type": "string"
              },
              "request_id_to_purge": {
                "description": "The ID of the LeMUR request to purge the data for",
                "format": "uuid",
                "type": "string"
              }
            },
            "required": [
              "request_id",
              "request_id_to_purge",
              "deleted"
            ],
            "type": "object"
          }
        }
      },
      "description": "LeMUR request data deleted"
    },
    "400": {
      "content": {
        "application/json": {
          "example": {
            "error": "This is a sample error message"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Bad request"
    },
    "401": {
      "content": {
        "application/json": {
          "example": {
            "error": "Authentication error, API token missing/invalid"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Unauthorized"
    },
    "404": {
      "content": {
        "application/json": {
          "example": {
            "error": "Not found"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Not found"
    },
    "429": {
      "content": {
        "application/json": {
          "example": {
            "error": "Too Many Requests"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Too many requests",
      "headers": {
        "Retry-After": {
          "description": "The number of seconds to wait before retrying the request",
          "schema": {
            "type": "integer"
          }
        }
      }
    },
    "500": {
      "content": {
        "application/json": {
          "example": {
            "error": "Internal Server Error"
          },
          "schema": {
            "additionalProperties": true,
            "example": {
              "error": "format_text must be a Boolean"
            },
            "properties": {
              "error": {
                "description": "Error message",
                "type": "string"
              },
              "status": {
                "const": "error",
                "type": "string"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "An error occurred while processing the request"
    },
    "503": {
      "description": "Service unavailable"
    },
    "504": {
      "description": "Gateway timeout"
    }
  },
  "summary": "Purge LeMUR request data",
  "tags": [
    "LeMUR"
  ]
}
