{
  "description": "Cancel a currently running fine-tuning job. Returns a FinetuneResponseTruncated object.",
  "parameters": [
    {
      "description": "Fine-tune ID to cancel. A string that starts with `ft-`.",
      "in": "path",
      "name": "id",
      "required": true,
      "schema": {
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "A truncated version of the fine-tune response, used for POST /fine-tunes, GET /fine-tunes and POST /fine-tunes/{id}/cancel endpoints",
            "example": {
              "created_at": "2023-05-17T17:35:45.123Z",
              "events": [],
              "id": "ft-01234567890123456789",
              "model": "meta-llama/Llama-2-7b-hf",
              "model_output_name": "mynamespace/meta-llama/Llama-2-7b-hf-32162631",
              "n_epochs": 3,
              "owner_address": "user@example.com",
              "status": "completed",
              "token_count": 850000,
              "total_price": 1500,
              "training_file": "file-01234567890123456789",
              "updated_at": "2023-05-17T18:46:23.456Z",
              "user_id": "user_01234567890123456789",
              "wandb_project_name": "my-finetune-project"
            },
            "properties": {
              "batch_size": {
                "description": "Batch size used for training",
                "type": "integer"
              },
              "created_at": {
                "description": "Creation timestamp of the fine-tune job",
                "format": "date-time",
                "type": "string"
              },
              "events": {
                "description": "Events related to this fine-tune job",
                "items": {
                  "properties": {
                    "checkpoint_path": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "hash": {
                      "type": "string"
                    },
                    "level": {
                      "anyOf": [
                        {
                          "enum": [
                            null,
                            "info",
                            "warning",
                            "error",
                            "legacy_info",
                            "legacy_iwarning",
                            "legacy_ierror"
                          ],
                          "type": "string"
                        }
                      ]
                    },
                    "message": {
                      "type": "string"
                    },
                    "model_path": {
                      "type": "string"
                    },
                    "object": {
                      "enum": [
                        "fine-tune-event"
                      ],
                      "type": "string"
                    },
                    "param_count": {
                      "type": "integer"
                    },
                    "step": {
                      "type": "integer"
                    },
                    "token_count": {
                      "type": "integer"
                    },
                    "total_steps": {
                      "type": "integer"
                    },
                    "training_offset": {
                      "type": "integer"
                    },
                    "type": {
                      "enum": [
                        "job_pending",
                        "job_start",
                        "job_stopped",
                        "model_downloading",
                        "model_download_complete",
                        "training_data_downloading",
                        "training_data_download_complete",
                        "validation_data_downloading",
                        "validation_data_download_complete",
                        "wandb_init",
                        "training_start",
                        "checkpoint_save",
                        "billing_limit",
                        "epoch_complete",
                        "training_complete",
                        "model_compressing",
                        "model_compression_complete",
                        "model_uploading",
                        "model_upload_complete",
                        "job_complete",
                        "job_error",
                        "cancel_requested",
                        "job_restarted",
                        "refund",
                        "warning"
                      ],
                      "type": "string"
                    },
                    "wandb_url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "object",
                    "created_at",
                    "message",
                    "type",
                    "param_count",
                    "token_count",
                    "total_steps",
                    "wandb_url",
                    "step",
                    "checkpoint_path",
                    "model_path",
                    "training_offset",
                    "hash"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "from_checkpoint": {
                "description": "Checkpoint used to continue training",
                "type": "string"
              },
              "from_hf_model": {
                "description": "Hugging Face Hub repo to start training from",
                "type": "string"
              },
              "hf_model_revision": {
                "description": "The revision of the Hugging Face Hub model to continue training from",
                "type": "string"
              },
              "id": {
                "description": "Unique identifier for the fine-tune job",
                "type": "string"
              },
              "learning_rate": {
                "description": "Learning rate used for training",
                "format": "float",
                "type": "number"
              },
              "lr_scheduler": {
                "description": "Learning rate scheduler configuration",
                "properties": {
                  "lr_scheduler_args": {
                    "oneOf": [
                      {
                        "properties": {
                          "min_lr_ratio": {
                            "default": 0,
                            "description": "The ratio of the final learning rate to the peak learning rate",
                            "format": "float",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "min_lr_ratio": {
                            "default": 0,
                            "description": "The ratio of the final learning rate to the peak learning rate",
                            "format": "float",
                            "type": "number"
                          },
                          "num_cycles": {
                            "default": 0.5,
                            "description": "Number or fraction of cycles for the cosine learning rate scheduler",
                            "format": "float",
                            "type": "number"
                          }
                        },
                        "required": [
                          "min_lr_ratio",
                          "num_cycles"
                        ],
                        "type": "object"
                      }
                    ]
                  },
                  "lr_scheduler_type": {
                    "enum": [
                      "linear",
                      "cosine"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "lr_scheduler_type"
                ],
                "type": "object"
              },
              "max_grad_norm": {
                "description": "Maximum gradient norm for clipping",
                "format": "float",
                "type": "number"
              },
              "model": {
                "description": "Base model used for fine-tuning",
                "type": "string"
              },
              "model_output_name": {
                "type": "string"
              },
              "n_checkpoints": {
                "description": "Number of checkpoints saved during training",
                "type": "integer"
              },
              "n_epochs": {
                "description": "Number of training epochs",
                "type": "integer"
              },
              "n_evals": {
                "description": "Number of evaluations during training",
                "type": "integer"
              },
              "owner_address": {
                "description": "Owner address information",
                "type": "string"
              },
              "status": {
                "enum": [
                  "pending",
                  "queued",
                  "running",
                  "compressing",
                  "uploading",
                  "cancel_requested",
                  "cancelled",
                  "error",
                  "completed"
                ],
                "type": "string"
              },
              "suffix": {
                "description": "Suffix added to the fine-tuned model name",
                "type": "string"
              },
              "token_count": {
                "description": "Count of tokens processed",
                "type": "integer"
              },
              "total_price": {
                "description": "Total price for the fine-tuning job",
                "type": "integer"
              },
              "training_file": {
                "description": "File-ID of the training file",
                "type": "string"
              },
              "training_method": {
                "description": "Method of training used",
                "oneOf": [
                  {
                    "properties": {
                      "method": {
                        "enum": [
                          "sft"
                        ],
                        "type": "string"
                      },
                      "train_on_inputs": {
                        "default": "auto",
                        "description": "Whether to mask the user messages in conversational data or prompts in instruction data.",
                        "oneOf": [
                          {
                            "type": "boolean"
                          },
                          {
                            "enum": [
                              "auto"
                            ],
                            "type": "string"
                          }
                        ],
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "method",
                      "train_on_inputs"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "dpo_beta": {
                        "default": 0.1,
                        "format": "float",
                        "type": "number"
                      },
                      "dpo_normalize_logratios_by_length": {
                        "default": false,
                        "type": "boolean"
                      },
                      "dpo_reference_free": {
                        "default": false,
                        "type": "boolean"
                      },
                      "method": {
                        "enum": [
                          "dpo"
                        ],
                        "type": "string"
                      },
                      "rpo_alpha": {
                        "default": 0,
                        "format": "float",
                        "type": "number"
                      },
                      "simpo_gamma": {
                        "default": 0,
                        "format": "float",
                        "type": "number"
                      }
                    },
                    "required": [
                      "method"
                    ],
                    "type": "object"
                  }
                ]
              },
              "training_type": {
                "description": "Type of training used (full or LoRA)",
                "oneOf": [
                  {
                    "properties": {
                      "type": {
                        "enum": [
                          "Full"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "lora_alpha": {
                        "type": "integer"
                      },
                      "lora_dropout": {
                        "default": 0,
                        "format": "float",
                        "type": "number"
                      },
                      "lora_r": {
                        "type": "integer"
                      },
                      "lora_trainable_modules": {
                        "default": "all-linear",
                        "type": "string"
                      },
                      "type": {
                        "enum": [
                          "Lora"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "lora_r",
                      "lora_alpha"
                    ],
                    "type": "object"
                  }
                ]
              },
              "updated_at": {
                "description": "Last update timestamp of the fine-tune job",
                "format": "date-time",
                "type": "string"
              },
              "user_id": {
                "description": "Identifier for the user who created the job",
                "type": "string"
              },
              "validation_file": {
                "description": "File-ID of the validation file",
                "type": "string"
              },
              "wandb_name": {
                "description": "Weights & Biases run name",
                "type": "string"
              },
              "wandb_project_name": {
                "description": "Weights & Biases project name",
                "type": "string"
              },
              "warmup_ratio": {
                "description": "Ratio of warmup steps",
                "format": "float",
                "type": "number"
              },
              "weight_decay": {
                "description": "Weight decay value used",
                "format": "float",
                "type": "number"
              }
            },
            "required": [
              "id",
              "status",
              "created_at",
              "updated_at"
            ],
            "type": "object"
          }
        }
      },
      "description": "Successfully cancelled the fine-tuning job."
    },
    "400": {
      "description": "Invalid request parameters."
    },
    "404": {
      "description": "Fine-tune ID not found."
    }
  },
  "summary": "Cancel job",
  "tags": [
    "Fine-tuning"
  ]
}
