{
  "description": "Generate audio from input text",
  "operationId": "audio-speech",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "input": {
              "description": "Input text to generate the audio for",
              "type": "string"
            },
            "language": {
              "default": "en",
              "description": "Language of input text.",
              "enum": [
                "en",
                "de",
                "fr",
                "es",
                "hi",
                "it",
                "ja",
                "ko",
                "nl",
                "pl",
                "pt",
                "ru",
                "sv",
                "tr",
                "zh"
              ],
              "type": "string"
            },
            "model": {
              "anyOf": [
                {
                  "enum": [
                    "cartesia/sonic",
                    "hexgrad/Kokoro-82M",
                    "canopylabs/orpheus-3b-0.1-ft"
                  ],
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The name of the model to query.<br> <br> [See all of Together AI's chat models](https://docs.together.ai/docs/serverless-models#audio-models) The current supported tts models are: - cartesia/sonic - hexgrad/Kokoro-82M - canopylabs/orpheus-3b-0.1-ft\n",
              "example": "canopylabs/orpheus-3b-0.1-ft"
            },
            "response_encoding": {
              "default": "pcm_f32le",
              "description": "Audio encoding of response",
              "enum": [
                "pcm_f32le",
                "pcm_s16le",
                "pcm_mulaw",
                "pcm_alaw"
              ],
              "type": "string"
            },
            "response_format": {
              "default": "wav",
              "description": "The format of audio output. Supported formats are mp3, wav, raw if streaming is false. If streaming is true, the only supported format is raw.",
              "enum": [
                "mp3",
                "wav",
                "raw"
              ],
              "type": "string"
            },
            "sample_rate": {
              "default": 44100,
              "description": "Sampling rate to use for the output audio. The default sampling rate for canopylabs/orpheus-3b-0.1-ft and hexgrad/Kokoro-82M is 24000 and for cartesia/sonic is 44100.",
              "type": "number"
            },
            "stream": {
              "default": false,
              "description": "If true, output is streamed for several characters at a time instead of waiting for the full response. The stream terminates with `data: [DONE]`. If false, return the encoded audio as octet stream",
              "type": "boolean"
            },
            "voice": {
              "description": "The voice to use for generating the audio. The voices supported are different for each model. For eg - for canopylabs/orpheus-3b-0.1-ft, one of the voices supported is tara, for hexgrad/Kokoro-82M, one of the voices supported is af_alloy and for cartesia/sonic, one of the voices supported is \"friendly sidekick\". <br> <br> You can view the voices supported for each model using the /v1/voices endpoint sending the model name as the query parameter. [View all supported voices here](https://docs.together.ai/docs/text-to-speech#voices-available).\n",
              "type": "string"
            }
          },
          "required": [
            "model",
            "input",
            "voice"
          ],
          "type": "object"
        }
      }
    }
  },
  "responses": {
    "200": {
      "content": {
        "application/octet-stream": {
          "schema": {
            "format": "binary",
            "type": "string"
          }
        },
        "audio/mpeg": {
          "schema": {
            "format": "binary",
            "type": "string"
          }
        },
        "audio/wav": {
          "schema": {
            "format": "binary",
            "type": "string"
          }
        },
        "text/event-stream": {
          "schema": {
            "oneOf": [
              {
                "properties": {
                  "data": {
                    "properties": {
                      "b64": {
                        "description": "base64 encoded audio stream",
                        "type": "string"
                      },
                      "model": {
                        "example": "cartesia/sonic",
                        "type": "string"
                      },
                      "object": {
                        "enum": [
                          "audio.tts.chunk"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "object",
                      "model",
                      "b64"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "data": {
                    "enum": [
                      "[DONE]"
                    ],
                    "title": "stream_signal",
                    "type": "string"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            ]
          }
        }
      },
      "description": "OK"
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "BadRequest"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "RateLimit"
    }
  },
  "summary": "Create audio generation request",
  "tags": [
    "Audio"
  ]
}
