{
  "description": "Transcribes audio into text",
  "operationId": "audio-transcriptions",
  "requestBody": {
    "content": {
      "multipart/form-data": {
        "schema": {
          "properties": {
            "diarize": {
              "default": false,
              "description": "Whether to enable speaker diarization. When enabled, you will get the speaker id for each word in the transcription. In the response, in the words array, you will get the speaker id for each word. In addition, we also return the speaker_segments array which contains the speaker id for each speaker segment along with the start and end time of the segment along with all the words in the segment. <br> <br> For eg - ... \"speaker_segments\": [\n  \"speaker_id\": \"SPEAKER_00\",\n  \"start\": 0,\n  \"end\": 30.02,\n  \"words\": [\n    {\n      \"id\": 0,\n      \"word\": \"Tijana\",\n      \"start\": 0,\n      \"end\": 11.475,\n      \"speaker_id\": \"SPEAKER_00\"\n    },\n    ...\n",
              "type": "boolean"
            },
            "file": {
              "description": "Audio file upload or public HTTP/HTTPS URL. Supported formats .wav, .mp3, .m4a, .webm, .flac.",
              "oneOf": [
                {
                  "description": "Audio file to transcribe",
                  "format": "binary",
                  "type": "string"
                },
                {
                  "description": "Public HTTPS URL to audio file",
                  "format": "uri",
                  "type": "string"
                }
              ]
            },
            "language": {
              "default": "en",
              "description": "Optional ISO 639-1 language code. If `auto` is provided, language is auto-detected.",
              "example": "en",
              "type": "string"
            },
            "model": {
              "default": "openai/whisper-large-v3",
              "description": "Model to use for transcription",
              "enum": [
                "openai/whisper-large-v3"
              ],
              "type": "string"
            },
            "prompt": {
              "description": "Optional text to bias decoding.",
              "type": "string"
            },
            "response_format": {
              "default": "json",
              "description": "The format of the response",
              "enum": [
                "json",
                "verbose_json"
              ],
              "type": "string"
            },
            "temperature": {
              "default": 0,
              "description": "Sampling temperature between 0.0 and 1.0",
              "format": "float",
              "maximum": 1,
              "minimum": 0,
              "type": "number"
            },
            "timestamp_granularities": {
              "default": "segment",
              "description": "Controls level of timestamp detail in verbose_json. Only used when response_format is verbose_json. Can be a single granularity or an array to get multiple levels.",
              "example": [
                "word",
                "segment"
              ],
              "oneOf": [
                {
                  "enum": [
                    "segment",
                    "word"
                  ],
                  "type": "string"
                },
                {
                  "items": {
                    "enum": [
                      "segment",
                      "word"
                    ],
                    "type": "string"
                  },
                  "maxItems": 2,
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
                }
              ]
            }
          },
          "required": [
            "file"
          ],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "properties": {
                  "text": {
                    "description": "The transcribed text",
                    "example": "Hello, world!",
                    "type": "string"
                  }
                },
                "required": [
                  "text"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "duration": {
                    "description": "The duration of the audio in seconds",
                    "example": 3.5,
                    "format": "float",
                    "type": "number"
                  },
                  "language": {
                    "description": "The language of the audio",
                    "example": "english",
                    "type": "string"
                  },
                  "segments": {
                    "description": "Array of transcription segments",
                    "items": {
                      "properties": {
                        "end": {
                          "description": "End time of the segment in seconds",
                          "example": 3.5,
                          "format": "float",
                          "type": "number"
                        },
                        "id": {
                          "description": "Unique identifier for the segment",
                          "example": 0,
                          "type": "integer"
                        },
                        "start": {
                          "description": "Start time of the segment in seconds",
                          "example": 0,
                          "format": "float",
                          "type": "number"
                        },
                        "text": {
                          "description": "The text content of the segment",
                          "example": "Hello, world!",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "start",
                        "end",
                        "text"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "speaker_segments": {
                    "description": "Array of transcription speaker segments (only when diarize is enabled)",
                    "items": {
                      "properties": {
                        "end": {
                          "description": "End time of the speaker segment in seconds",
                          "example": 30.02,
                          "format": "float",
                          "type": "number"
                        },
                        "id": {
                          "description": "Unique identifier for the speaker segment",
                          "example": 1,
                          "type": "integer"
                        },
                        "speaker_id": {
                          "description": "The speaker identifier",
                          "example": "SPEAKER_00",
                          "type": "string"
                        },
                        "start": {
                          "description": "Start time of the speaker segment in seconds",
                          "example": 0,
                          "format": "float",
                          "type": "number"
                        },
                        "text": {
                          "description": "The full text spoken by this speaker in this segment",
                          "example": "Hello, how are you doing today?",
                          "type": "string"
                        },
                        "words": {
                          "description": "Array of words spoken by this speaker in this segment",
                          "items": {
                            "properties": {
                              "end": {
                                "description": "End time of the word in seconds",
                                "example": 0.5,
                                "format": "float",
                                "type": "number"
                              },
                              "speaker_id": {
                                "description": "The speaker id for the word (only when diarize is enabled)",
                                "example": "SPEAKER_00",
                                "type": "string"
                              },
                              "start": {
                                "description": "Start time of the word in seconds",
                                "example": 0,
                                "format": "float",
                                "type": "number"
                              },
                              "word": {
                                "description": "The word",
                                "example": "Hello",
                                "type": "string"
                              }
                            },
                            "required": [
                              "word",
                              "start",
                              "end"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "speaker_id",
                        "start",
                        "end",
                        "words",
                        "text",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "task": {
                    "description": "The task performed",
                    "enum": [
                      "transcribe",
                      "translate"
                    ],
                    "example": "transcribe",
                    "type": "string"
                  },
                  "text": {
                    "description": "The transcribed text",
                    "example": "Hello, world!",
                    "type": "string"
                  },
                  "words": {
                    "description": "Array of transcription words (only when timestamp_granularities includes 'word')",
                    "items": {
                      "properties": {
                        "end": {
                          "description": "End time of the word in seconds",
                          "example": 0.5,
                          "format": "float",
                          "type": "number"
                        },
                        "speaker_id": {
                          "description": "The speaker id for the word (only when diarize is enabled)",
                          "example": "SPEAKER_00",
                          "type": "string"
                        },
                        "start": {
                          "description": "Start time of the word in seconds",
                          "example": 0,
                          "format": "float",
                          "type": "number"
                        },
                        "word": {
                          "description": "The word",
                          "example": "Hello",
                          "type": "string"
                        }
                      },
                      "required": [
                        "word",
                        "start",
                        "end"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "task",
                  "language",
                  "duration",
                  "text",
                  "segments"
                ],
                "type": "object"
              }
            ]
          }
        }
      },
      "description": "OK"
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "BadRequest"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Unauthorized"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "RateLimit"
    }
  },
  "summary": "Create audio transcription request",
  "tags": [
    "Audio"
  ]
}
