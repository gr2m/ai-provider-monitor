{
  "description": "Translates audio into English",
  "operationId": "audio-translations",
  "requestBody": {
    "content": {
      "multipart/form-data": {
        "schema": {
          "properties": {
            "file": {
              "description": "Audio file upload or public HTTP/HTTPS URL. Supported formats .wav, .mp3, .m4a, .webm, .flac.",
              "oneOf": [
                {
                  "description": "Audio file to translate",
                  "format": "binary",
                  "type": "string"
                },
                {
                  "description": "Public HTTP/HTTPS URL to audio file",
                  "format": "uri",
                  "type": "string"
                }
              ]
            },
            "language": {
              "default": "en",
              "description": "Target output language. Optional ISO 639-1 language code. If omitted, language is set to English.",
              "example": "en",
              "type": "string"
            },
            "model": {
              "default": "openai/whisper-large-v3",
              "description": "Model to use for translation",
              "enum": [
                "openai/whisper-large-v3"
              ],
              "type": "string"
            },
            "prompt": {
              "description": "Optional text to bias decoding.",
              "type": "string"
            },
            "response_format": {
              "default": "json",
              "description": "The format of the response",
              "enum": [
                "json",
                "verbose_json"
              ],
              "type": "string"
            },
            "temperature": {
              "default": 0,
              "description": "Sampling temperature between 0.0 and 1.0",
              "format": "float",
              "maximum": 1,
              "minimum": 0,
              "type": "number"
            },
            "timestamp_granularities": {
              "default": "segment",
              "description": "Controls level of timestamp detail in verbose_json. Only used when response_format is verbose_json. Can be a single granularity or an array to get multiple levels.",
              "example": [
                "word",
                "segment"
              ],
              "oneOf": [
                {
                  "enum": [
                    "segment",
                    "word"
                  ],
                  "type": "string"
                },
                {
                  "items": {
                    "enum": [
                      "segment",
                      "word"
                    ],
                    "type": "string"
                  },
                  "maxItems": 2,
                  "minItems": 1,
                  "type": "array",
                  "uniqueItems": true
                }
              ]
            }
          },
          "required": [
            "file"
          ],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "oneOf": [
              {
                "properties": {
                  "text": {
                    "description": "The translated text",
                    "example": "Hello, world!",
                    "type": "string"
                  }
                },
                "required": [
                  "text"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "duration": {
                    "description": "The duration of the audio in seconds",
                    "example": 3.5,
                    "format": "float",
                    "type": "number"
                  },
                  "language": {
                    "description": "The target language of the translation",
                    "example": "english",
                    "type": "string"
                  },
                  "segments": {
                    "description": "Array of translation segments",
                    "items": {
                      "properties": {
                        "end": {
                          "description": "End time of the segment in seconds",
                          "example": 3.5,
                          "format": "float",
                          "type": "number"
                        },
                        "id": {
                          "description": "Unique identifier for the segment",
                          "example": 0,
                          "type": "integer"
                        },
                        "start": {
                          "description": "Start time of the segment in seconds",
                          "example": 0,
                          "format": "float",
                          "type": "number"
                        },
                        "text": {
                          "description": "The text content of the segment",
                          "example": "Hello, world!",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "start",
                        "end",
                        "text"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "task": {
                    "description": "The task performed",
                    "enum": [
                      "transcribe",
                      "translate"
                    ],
                    "example": "translate",
                    "type": "string"
                  },
                  "text": {
                    "description": "The translated text",
                    "example": "Hello, world!",
                    "type": "string"
                  },
                  "words": {
                    "description": "Array of translation words (only when timestamp_granularities includes 'word')",
                    "items": {
                      "properties": {
                        "end": {
                          "description": "End time of the word in seconds",
                          "example": 0.5,
                          "format": "float",
                          "type": "number"
                        },
                        "speaker_id": {
                          "description": "The speaker id for the word (only when diarize is enabled)",
                          "example": "SPEAKER_00",
                          "type": "string"
                        },
                        "start": {
                          "description": "Start time of the word in seconds",
                          "example": 0,
                          "format": "float",
                          "type": "number"
                        },
                        "word": {
                          "description": "The word",
                          "example": "Hello",
                          "type": "string"
                        }
                      },
                      "required": [
                        "word",
                        "start",
                        "end"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "task",
                  "language",
                  "duration",
                  "text",
                  "segments"
                ],
                "type": "object"
              }
            ]
          }
        }
      },
      "description": "OK"
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "BadRequest"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Unauthorized"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "RateLimit"
    }
  },
  "summary": "Create audio translation request",
  "tags": [
    "Audio"
  ]
}
