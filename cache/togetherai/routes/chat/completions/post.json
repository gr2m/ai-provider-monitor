{
  "deprecated": false,
  "description": "Query a chat model.",
  "operationId": "chat-completions",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "context_length_exceeded_behavior": {
              "default": "error",
              "description": "Defined the behavior of the API when max_tokens exceed the maximum context length of the model. When set to 'error', API will return 400 with appropriate error message. When set to 'truncate', override the max_tokens with maximum context length of the model.",
              "enum": [
                "truncate",
                "error"
              ],
              "type": "string"
            },
            "echo": {
              "description": "If true, the response will contain the prompt. Can be used with `logprobs` to return prompt logprobs.",
              "type": "boolean"
            },
            "frequency_penalty": {
              "description": "A number between -2.0 and 2.0 where a positive value decreases the likelihood of repeating tokens that have already been mentioned.",
              "format": "float",
              "type": "number"
            },
            "function_call": {
              "oneOf": [
                {
                  "enum": [
                    "none",
                    "auto"
                  ],
                  "type": "string"
                },
                {
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "type": "object"
                }
              ]
            },
            "logit_bias": {
              "additionalProperties": {
                "format": "float",
                "type": "number"
              },
              "description": "Adjusts the likelihood of specific tokens appearing in the generated output.",
              "example": {
                "105": 21.4,
                "1024": -10.5
              },
              "type": "object"
            },
            "logprobs": {
              "description": "An integer between 0 and 20 of the top k tokens to return log probabilities for at each generation step, instead of just the sampled token. Log probabilities help assess model confidence in token predictions.",
              "maximum": 20,
              "minimum": 0,
              "type": "integer"
            },
            "max_tokens": {
              "description": "The maximum number of tokens to generate.",
              "type": "integer"
            },
            "messages": {
              "description": "A list of messages comprising the conversation so far.",
              "items": {
                "oneOf": [
                  {
                    "properties": {
                      "content": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "role": {
                        "enum": [
                          "system"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "content",
                      "role"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "content": {
                        "description": "The content of the message, which can either be a simple string or a structured format.",
                        "oneOf": [
                          {
                            "description": "A plain text message.",
                            "type": "string"
                          },
                          {
                            "description": "A structured message with mixed content types.",
                            "items": {
                              "oneOf": [
                                {
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "enum": [
                                        "text"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "text"
                                  ],
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "image_url": {
                                      "properties": {
                                        "url": {
                                          "description": "The URL of the image",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "url"
                                      ],
                                      "type": "object"
                                    },
                                    "type": {
                                      "enum": [
                                        "image_url"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "video_url"
                                      ],
                                      "type": "string"
                                    },
                                    "video_url": {
                                      "properties": {
                                        "url": {
                                          "description": "The URL of the video",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "url"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "video_url"
                                  ],
                                  "title": "Video",
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "audio_url": {
                                      "properties": {
                                        "url": {
                                          "description": "The URL of the audio",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "url"
                                      ],
                                      "type": "object"
                                    },
                                    "type": {
                                      "enum": [
                                        "audio_url"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "audio_url"
                                  ],
                                  "title": "Audio",
                                  "type": "object"
                                },
                                {
                                  "properties": {
                                    "input_audio": {
                                      "properties": {
                                        "data": {
                                          "description": "The base64 encoded audio data",
                                          "type": "string"
                                        },
                                        "format": {
                                          "description": "The format of the audio data",
                                          "enum": [
                                            "wav"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "data",
                                        "format"
                                      ],
                                      "type": "object"
                                    },
                                    "type": {
                                      "enum": [
                                        "input_audio"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "input_audio"
                                  ],
                                  "title": "Input Audio",
                                  "type": "object"
                                }
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "name": {
                        "type": "string"
                      },
                      "role": {
                        "enum": [
                          "user"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "content",
                      "role"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "content": {
                        "nullable": true,
                        "type": "string"
                      },
                      "function_call": {
                        "deprecated": true,
                        "properties": {
                          "arguments": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "arguments",
                          "name"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "role": {
                        "enum": [
                          "assistant"
                        ],
                        "type": "string"
                      },
                      "tool_calls": {
                        "items": {
                          "properties": {
                            "function": {
                              "properties": {
                                "arguments": {
                                  "type": "string"
                                },
                                "name": {
                                  "example": "function_name",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "type": "object"
                            },
                            "id": {
                              "type": "string"
                            },
                            "index": {
                              "type": "number"
                            },
                            "type": {
                              "enum": [
                                "function"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function",
                            "index"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "role"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "content": {
                        "type": "string"
                      },
                      "role": {
                        "enum": [
                          "tool"
                        ],
                        "type": "string"
                      },
                      "tool_call_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "role",
                      "content",
                      "tool_call_id"
                    ],
                    "type": "object"
                  },
                  {
                    "deprecated": true,
                    "properties": {
                      "content": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "role": {
                        "enum": [
                          "function"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "content",
                      "role",
                      "name"
                    ],
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "min_p": {
              "description": "A number between 0 and 1 that can be used as an alternative to top_p and top-k.",
              "format": "float",
              "type": "number"
            },
            "model": {
              "anyOf": [
                {
                  "enum": [
                    "Qwen/Qwen2.5-72B-Instruct-Turbo",
                    "Qwen/Qwen2.5-7B-Instruct-Turbo",
                    "meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
                    "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo",
                    "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo"
                  ],
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "description": "The name of the model to query.<br> <br> [See all of Together AI's chat models](https://docs.together.ai/docs/serverless-models#chat-models)\n",
              "example": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo"
            },
            "n": {
              "description": "The number of completions to generate for each prompt.",
              "maximum": 128,
              "minimum": 1,
              "type": "integer"
            },
            "presence_penalty": {
              "description": "A number between -2.0 and 2.0 where a positive value increases the likelihood of a model talking about new topics.",
              "format": "float",
              "type": "number"
            },
            "reasoning_effort": {
              "description": "Controls the level of reasoning effort the model should apply when generating responses. Higher values may result in more thoughtful and detailed responses but may take longer to generate.",
              "enum": [
                "low",
                "medium",
                "high"
              ],
              "example": "medium",
              "type": "string"
            },
            "repetition_penalty": {
              "description": "A number that controls the diversity of generated text by reducing the likelihood of repeated sequences. Higher values decrease repetition.",
              "type": "number"
            },
            "response_format": {
              "description": "An object specifying the format that the model must output.",
              "properties": {
                "schema": {
                  "additionalProperties": true,
                  "description": "The schema of the response format.",
                  "type": "object"
                },
                "type": {
                  "description": "The type of the response format.",
                  "example": "json",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "safety_model": {
              "description": "The name of the moderation model used to validate tokens. Choose from the available moderation models found [here](https://docs.together.ai/docs/inference-models#moderation-models).",
              "example": "safety_model_name",
              "type": "string"
            },
            "seed": {
              "description": "Seed value for reproducibility.",
              "example": 42,
              "type": "integer"
            },
            "stop": {
              "description": "A list of string sequences that will truncate (stop) inference text output. For example, \"</s>\" will stop generation as soon as the model generates the given token.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "stream": {
              "description": "If true, stream tokens as Server-Sent Events as the model generates them instead of waiting for the full model response. The stream terminates with `data: [DONE]`. If false, return a single JSON object containing the results.",
              "type": "boolean"
            },
            "temperature": {
              "description": "A decimal number from 0-1 that determines the degree of randomness in the response. A temperature less than 1 favors more correctness and is appropriate for question answering or summarization. A value closer to 1 introduces more randomness in the output.",
              "format": "float",
              "type": "number"
            },
            "tool_choice": {
              "description": "Controls which (if any) function is called by the model. By default uses `auto`, which lets the model pick between generating a message or calling a function.",
              "oneOf": [
                {
                  "example": "tool_name",
                  "type": "string"
                },
                {
                  "properties": {
                    "function": {
                      "properties": {
                        "arguments": {
                          "type": "string"
                        },
                        "name": {
                          "example": "function_name",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "arguments"
                      ],
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "index": {
                      "type": "number"
                    },
                    "type": {
                      "enum": [
                        "function"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "function",
                    "index"
                  ],
                  "type": "object"
                }
              ]
            },
            "tools": {
              "description": "A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for.",
              "items": {
                "properties": {
                  "function": {
                    "properties": {
                      "description": {
                        "example": "A description of the function.",
                        "type": "string"
                      },
                      "name": {
                        "example": "function_name",
                        "type": "string"
                      },
                      "parameters": {
                        "additionalProperties": true,
                        "description": "A map of parameter names to their values.",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "example": "tool_type",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "top_k": {
              "description": "An integer that's used to limit the number of choices for the next predicted word or token. It specifies the maximum number of tokens to consider at each step, based on their probability of occurrence. This technique helps to speed up the generation process and can improve the quality of the generated text by focusing on the most likely options.",
              "format": "int32",
              "type": "integer"
            },
            "top_p": {
              "description": "A percentage (also called the nucleus parameter) that's used to dynamically adjust the number of choices for each predicted token based on the cumulative probabilities. It specifies a probability threshold below which all less likely tokens are filtered out. This technique helps maintain diversity and generate more fluent and natural-sounding text.",
              "format": "float",
              "type": "number"
            }
          },
          "required": [
            "model",
            "messages"
          ],
          "type": "object"
        }
      }
    }
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "choices": {
                "items": {
                  "properties": {
                    "finish_reason": {
                      "enum": [
                        "stop",
                        "eos",
                        "length",
                        "tool_calls",
                        "function_call"
                      ],
                      "type": "string"
                    },
                    "index": {
                      "type": "integer"
                    },
                    "logprobs": {
                      "allOf": [
                        {
                          "nullable": true
                        },
                        {
                          "properties": {
                            "token_ids": {
                              "description": "List of token IDs corresponding to the logprobs",
                              "items": {
                                "type": "number"
                              },
                              "type": "array"
                            },
                            "token_logprobs": {
                              "description": "List of token log probabilities",
                              "items": {
                                "type": "number"
                              },
                              "type": "array"
                            },
                            "tokens": {
                              "description": "List of token strings",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "message": {
                      "properties": {
                        "content": {
                          "nullable": true,
                          "type": "string"
                        },
                        "function_call": {
                          "deprecated": true,
                          "properties": {
                            "arguments": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "arguments",
                            "name"
                          ],
                          "type": "object"
                        },
                        "role": {
                          "enum": [
                            "assistant"
                          ],
                          "type": "string"
                        },
                        "tool_calls": {
                          "items": {
                            "properties": {
                              "function": {
                                "properties": {
                                  "arguments": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "example": "function_name",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "arguments"
                                ],
                                "type": "object"
                              },
                              "id": {
                                "type": "string"
                              },
                              "index": {
                                "type": "number"
                              },
                              "type": {
                                "enum": [
                                  "function"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "function",
                              "index"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "role",
                        "content"
                      ],
                      "type": "object"
                    },
                    "seed": {
                      "type": "integer"
                    },
                    "text": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "created": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "model": {
                "type": "string"
              },
              "object": {
                "enum": [
                  "chat.completion"
                ],
                "type": "string"
              },
              "usage": {
                "nullable": true,
                "properties": {
                  "completion_tokens": {
                    "type": "integer"
                  },
                  "prompt_tokens": {
                    "type": "integer"
                  },
                  "total_tokens": {
                    "type": "integer"
                  }
                },
                "required": [
                  "prompt_tokens",
                  "completion_tokens",
                  "total_tokens"
                ],
                "type": "object"
              },
              "warnings": {
                "items": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "choices",
              "id",
              "created",
              "model",
              "object"
            ],
            "type": "object"
          }
        },
        "text/event-stream": {
          "schema": {
            "oneOf": [
              {
                "properties": {
                  "data": {
                    "properties": {
                      "choices": {
                        "items": {
                          "properties": {
                            "delta": {
                              "properties": {
                                "content": {
                                  "nullable": true,
                                  "type": "string"
                                },
                                "function_call": {
                                  "deprecated": true,
                                  "nullable": true,
                                  "properties": {
                                    "arguments": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "arguments",
                                    "name"
                                  ],
                                  "type": "object"
                                },
                                "role": {
                                  "enum": [
                                    "system",
                                    "user",
                                    "assistant",
                                    "function",
                                    "tool"
                                  ],
                                  "type": "string"
                                },
                                "token_id": {
                                  "type": "integer"
                                },
                                "tool_calls": {
                                  "items": {
                                    "properties": {
                                      "function": {
                                        "properties": {
                                          "arguments": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "example": "function_name",
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "arguments"
                                        ],
                                        "type": "object"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "index": {
                                        "type": "number"
                                      },
                                      "type": {
                                        "enum": [
                                          "function"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "type",
                                      "function",
                                      "index"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "required": [
                                "role"
                              ],
                              "title": "ChatCompletionChoiceDelta",
                              "type": "object"
                            },
                            "finish_reason": {
                              "enum": [
                                "stop",
                                "eos",
                                "length",
                                "tool_calls",
                                "function_call"
                              ],
                              "type": "string",
                              "nullable": true
                            },
                            "index": {
                              "type": "integer"
                            },
                            "logprobs": {
                              "nullable": true,
                              "type": "number"
                            },
                            "seed": {
                              "nullable": true,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "index",
                            "delta",
                            "finish_reason"
                          ],
                          "type": "object"
                        },
                        "title": "ChatCompletionChoices",
                        "type": "array"
                      },
                      "created": {
                        "type": "integer"
                      },
                      "id": {
                        "type": "string"
                      },
                      "model": {
                        "example": "mistralai/Mixtral-8x7B-Instruct-v0.1",
                        "type": "string"
                      },
                      "object": {
                        "enum": [
                          "chat.completion.chunk"
                        ],
                        "type": "string"
                      },
                      "system_fingerprint": {
                        "type": "string"
                      },
                      "usage": {
                        "allOf": [
                          {
                            "nullable": true,
                            "properties": {
                              "completion_tokens": {
                                "type": "integer"
                              },
                              "prompt_tokens": {
                                "type": "integer"
                              },
                              "total_tokens": {
                                "type": "integer"
                              }
                            },
                            "required": [
                              "prompt_tokens",
                              "completion_tokens",
                              "total_tokens"
                            ],
                            "type": "object"
                          },
                          {
                            "nullable": true
                          }
                        ]
                      },
                      "warnings": {
                        "items": {
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "id",
                      "object",
                      "created",
                      "choices",
                      "model"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              },
              {
                "properties": {
                  "data": {
                    "enum": [
                      "[DONE]"
                    ],
                    "title": "stream_signal",
                    "type": "string"
                  }
                },
                "required": [
                  "data"
                ],
                "type": "object"
              }
            ]
          }
        }
      },
      "description": "200"
    },
    "400": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "BadRequest"
    },
    "401": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Unauthorized"
    },
    "404": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "NotFound"
    },
    "429": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "RateLimit"
    },
    "503": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Overloaded"
    },
    "504": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "error": {
                "properties": {
                  "code": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "message": {
                    "nullable": false,
                    "type": "string"
                  },
                  "param": {
                    "default": null,
                    "nullable": true,
                    "type": "string"
                  },
                  "type": {
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "message"
                ],
                "type": "object"
              }
            },
            "required": [
              "error"
            ],
            "type": "object"
          }
        }
      },
      "description": "Timeout"
    }
  },
  "summary": "Create chat completion",
  "tags": [
    "Chat"
  ]
}
