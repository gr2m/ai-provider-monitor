{
  "operationId": "handle_document_search_request_v2",
  "requestBody": {
    "content": {
      "application/json": {
        "example": {
          "query": "What is the revenue in the last quarter?",
          "source": {
            "collection_ids": [
              "collection_80100614-300c-4609-959b-a138fa90f542"
            ]
          }
        },
        "schema": {
          "description": "SearchRequest defines the request to search for documents.",
          "properties": {
            "instructions": {
              "description": "User-defined instructions to be included in the search query. Defaults to generic search instructions.",
              "type": [
                "string",
                "null"
              ]
            },
            "limit": {
              "description": "The number of chunks to return.\nWill always return the top matching chunks.\nOptional, defaults to 10",
              "format": "int32",
              "type": [
                "integer",
                "null"
              ]
            },
            "query": {
              "description": "The query to search for which will be embedded using the\nsame embedding model as the one used for the source to query.",
              "type": "string"
            },
            "ranking_metric": {
              "description": "The ranking metric to use for the search ('RANKING_METRIC_COSINE_SIMILARITY', 'RANKING_METRIC_L2_DISTANCE').\nDefaults to `RANKING_METRIC_L2_DISTANCE`.",
              "type": [
                "string",
                "null"
              ]
            },
            "source": {
              "description": "The source to query.",
              "properties": {
                "collection_ids": {
                  "description": "The collection IDs to search in.",
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "collection_ids"
              ],
              "type": "object"
            }
          },
          "required": [
            "query",
            "source"
          ],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "example": {
            "matches": [
              {
                "chunk_content": ", deferred revenue related to such customer payments amounted to $2.10 billion and $1.77 billion, respectively, mainly due to contractual payment terms. Revenue recognized from the deferred revenue balances as of December 31, 2024 and 2023 was $944 million and $873 million for the six months ended June 30, 2025 and 2024, respectively. We have elected the practical expedient to omit disclosure of the amount of the transaction price allocated to remaining performance obligations for contracts with an original expected contract length of one year or less. As of June 30, 2025, total transaction price allocated to performance obligations that were unsatisfied or partially unsatisfied for contracts with an original expected length of more than one year was $10.38 billion. Of this amount, we expect to recognize $5.47 billion in the next 12 months and the rest over the remaining performance obligation period. Changes in government and economic incentives or tariffs may impact the transaction price or our ability to e",
                "chunk_id": "0199717c-511b-7a80-bab3-dfe9a27f82ab",
                "collection_ids": [
                  "collection_80100614-300c-4609-959b-a138fa90f542"
                ],
                "file_id": "file_ac3c5728-7399-41fc-bd62-0fef0042de9c",
                "score": 1.1447691
              }
            ]
          },
          "schema": {
            "description": "SearchResponse defines the response to a search request.",
            "properties": {
              "matches": {
                "description": "The search matches.",
                "items": {
                  "description": "SearchMatch defines a single match from a search request.",
                  "properties": {
                    "chunk_content": {
                      "description": "The chunk content.",
                      "type": "string"
                    },
                    "chunk_id": {
                      "description": "The chunk ID.",
                      "type": "string"
                    },
                    "collection_ids": {
                      "description": "The collection ID(s).",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "file_id": {
                      "description": "The document ID.",
                      "type": "string"
                    },
                    "score": {
                      "description": "The relevance score.",
                      "format": "float",
                      "type": "number"
                    }
                  },
                  "required": [
                    "file_id",
                    "chunk_id",
                    "chunk_content",
                    "score",
                    "collection_ids"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "matches"
            ],
            "type": "object"
          }
        }
      },
      "description": "Success"
    },
    "400": {
      "description": "Bad request. The request is invalid or an invalid API key is provided."
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "summary": "Search for content related to the query within the given collections.",
  "tags": [
    "v1"
  ]
}
