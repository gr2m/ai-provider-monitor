{
  "operationId": "handle_generic_completion_request",
  "requestBody": {
    "content": {
      "application/json": {
        "example": {
          "messages": [
            {
              "content": "You are a helpful assistant that can answer questions and help with tasks.",
              "role": "system"
            },
            {
              "content": "What is 101*3?",
              "role": "user"
            }
          ],
          "model": "grok-4-0709"
        },
        "schema": {
          "description": "The chat request body for `/v1/chat/completions` endpoint.",
          "properties": {
            "deferred": {
              "default": false,
              "description": "If set to `true`, the request returns a `request_id`. You can then get the deferred response by GET `/v1/chat/deferred-completion/{request_id}`.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "frequency_penalty": {
              "default": 0,
              "description": "(Not supported by reasoning models) Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
              "format": "float",
              "maximum": 2,
              "minimum": -2,
              "type": [
                "number",
                "null"
              ]
            },
            "logit_bias": {
              "additionalProperties": {
                "format": "float",
                "type": "number"
              },
              "description": "(Unsupported) A JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.",
              "propertyNames": {
                "format": "int32",
                "type": "integer"
              },
              "type": [
                "object",
                "null"
              ]
            },
            "logprobs": {
              "default": false,
              "description": "Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "max_completion_tokens": {
              "description": "An upper bound for the number of tokens that can be generated for a completion, only applies to visible output tokens (i.e. does not apply to tokens used for reasoning or function calls). Defaults to None, meaning the model will generate as many tokens as needed up until the model's maximum context length.",
              "example": 8192,
              "format": "int32",
              "type": [
                "integer",
                "null"
              ]
            },
            "max_tokens": {
              "description": "\\[DEPRECATED\\] The maximum number of tokens that can be generated in the chat completion. Deprecated in favor of `max_completion_tokens`.",
              "example": 8192,
              "format": "int32",
              "type": [
                "integer",
                "null"
              ]
            },
            "messages": {
              "description": "A list of messages that make up the the chat conversation. Different models support different message types, such as image and text.",
              "items": {
                "description": "Chat message objects.",
                "oneOf": [
                  {
                    "description": "System message, usually instructions for the model to respond in a certain way.",
                    "properties": {
                      "content": {
                        "description": "System prompt content.",
                        "oneOf": [
                          {
                            "description": "Text prompt.",
                            "type": "string"
                          },
                          {
                            "description": "An array of content parts of different types, such as image, text or text file.",
                            "items": {
                              "properties": {
                                "detail": {
                                  "description": "Specifies the detail level of the image.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "image_url": {
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "description": "A public URL of image prompt, only available for vision models.",
                                      "properties": {
                                        "detail": {
                                          "description": "Specifies the detail level of the image.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "url": {
                                          "description": "URL of the image.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "url"
                                      ],
                                      "type": "object"
                                    }
                                  ]
                                },
                                "text": {
                                  "description": "Text prompt.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "text_file": {
                                  "description": "File path to a text file to be used as prompt.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "description": "The type of the content part.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "name": {
                        "description": "A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "role": {
                        "enum": [
                          "system"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "content",
                      "role"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "User message, typically request from user for the model to answer.",
                    "properties": {
                      "content": {
                        "description": "System prompt content.",
                        "oneOf": [
                          {
                            "description": "Text prompt.",
                            "type": "string"
                          },
                          {
                            "description": "An array of content parts of different types, such as image, text or text file.",
                            "items": {
                              "properties": {
                                "detail": {
                                  "description": "Specifies the detail level of the image.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "image_url": {
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "description": "A public URL of image prompt, only available for vision models.",
                                      "properties": {
                                        "detail": {
                                          "description": "Specifies the detail level of the image.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "url": {
                                          "description": "URL of the image.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "url"
                                      ],
                                      "type": "object"
                                    }
                                  ]
                                },
                                "text": {
                                  "description": "Text prompt.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "text_file": {
                                  "description": "File path to a text file to be used as prompt.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "description": "The type of the content part.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "name": {
                        "description": "A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "role": {
                        "enum": [
                          "user"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "content",
                      "role"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "Assistant role message, previous chat messages from the model.",
                    "properties": {
                      "content": {
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "description": "Assistant prompt content.",
                            "oneOf": [
                              {
                                "description": "Text prompt.",
                                "type": "string"
                              },
                              {
                                "description": "An array of content parts of different types, such as image, text or text file.",
                                "items": {
                                  "properties": {
                                    "detail": {
                                      "description": "Specifies the detail level of the image.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "image_url": {
                                      "oneOf": [
                                        {
                                          "type": "null"
                                        },
                                        {
                                          "description": "A public URL of image prompt, only available for vision models.",
                                          "properties": {
                                            "detail": {
                                              "description": "Specifies the detail level of the image.",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "url": {
                                              "description": "URL of the image.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "url"
                                          ],
                                          "type": "object"
                                        }
                                      ]
                                    },
                                    "text": {
                                      "description": "Text prompt.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "text_file": {
                                      "description": "File path to a text file to be used as prompt.",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "type": {
                                      "description": "The type of the content part.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            ]
                          }
                        ]
                      },
                      "name": {
                        "description": "A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "reasoning_content": {
                        "description": "Assistant reasoning content.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "role": {
                        "enum": [
                          "assistant"
                        ],
                        "type": "string"
                      },
                      "tool_calls": {
                        "description": "An array of tool calls available to the model on your machine.",
                        "items": {
                          "properties": {
                            "function": {
                              "description": "Function to call for the tool call.",
                              "properties": {
                                "arguments": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "type": "object"
                            },
                            "id": {
                              "description": "A unique ID of the tool call generated by xAI. After performing tool call's function, user provides this ID with tool call's result in the subsequent request to xAI. xAI can then match the tool call result sent with tool call request.",
                              "type": "string"
                            },
                            "index": {
                              "description": "Index of the tool call.",
                              "format": "int32",
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "type": {
                              "description": "Type of tool call, should be `\"function\"` or `\"web_search_call\"` or `\"x_search_call\"` or `\"code_interpreter_call\"` or `\"mcp_call\"`",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "function"
                          ],
                          "type": "object"
                        },
                        "type": [
                          "array",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "role"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "Tool call role message, used to return function call result to the model.",
                    "properties": {
                      "content": {
                        "description": "Content of the tool call result.",
                        "oneOf": [
                          {
                            "description": "Text prompt.",
                            "type": "string"
                          },
                          {
                            "description": "An array of content parts of different types, such as image, text or text file.",
                            "items": {
                              "properties": {
                                "detail": {
                                  "description": "Specifies the detail level of the image.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "image_url": {
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "description": "A public URL of image prompt, only available for vision models.",
                                      "properties": {
                                        "detail": {
                                          "description": "Specifies the detail level of the image.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "url": {
                                          "description": "URL of the image.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "url"
                                      ],
                                      "type": "object"
                                    }
                                  ]
                                },
                                "text": {
                                  "description": "Text prompt.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "text_file": {
                                  "description": "File path to a text file to be used as prompt.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "description": "The type of the content part.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "role": {
                        "enum": [
                          "tool"
                        ],
                        "type": "string"
                      },
                      "tool_call_id": {
                        "description": "The ID of the tool call received from assistant message response.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "content",
                      "role"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "Function call role message. Deprecated in favor of `{\"role\": \"tool\"}`.",
                    "properties": {
                      "content": {
                        "description": "Content of the tool call result.",
                        "oneOf": [
                          {
                            "description": "Text prompt.",
                            "type": "string"
                          },
                          {
                            "description": "An array of content parts of different types, such as image, text or text file.",
                            "items": {
                              "properties": {
                                "detail": {
                                  "description": "Specifies the detail level of the image.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "image_url": {
                                  "oneOf": [
                                    {
                                      "type": "null"
                                    },
                                    {
                                      "description": "A public URL of image prompt, only available for vision models.",
                                      "properties": {
                                        "detail": {
                                          "description": "Specifies the detail level of the image.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "url": {
                                          "description": "URL of the image.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "url"
                                      ],
                                      "type": "object"
                                    }
                                  ]
                                },
                                "text": {
                                  "description": "Text prompt.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "text_file": {
                                  "description": "File path to a text file to be used as prompt.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "description": "The type of the content part.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          }
                        ]
                      },
                      "name": {
                        "description": "A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "role": {
                        "enum": [
                          "function"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "content",
                      "role"
                    ],
                    "type": "object"
                  }
                ]
              },
              "type": "array"
            },
            "model": {
              "description": "Model name for the model to use. Obtainable from <https://console.x.ai/team/default/models> or <https://docs.x.ai/docs/models>.",
              "example": "grok-4-0709",
              "type": "string"
            },
            "n": {
              "default": 1,
              "description": "How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.",
              "example": 1,
              "format": "int32",
              "minimum": 1,
              "type": [
                "integer",
                "null"
              ]
            },
            "parallel_tool_calls": {
              "default": true,
              "description": "If set to false, the model can perform maximum one tool call.",
              "example": false,
              "type": [
                "boolean",
                "null"
              ]
            },
            "presence_penalty": {
              "default": 0,
              "description": "(Not supported by `grok-3` and reasoning models) Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
              "format": "float",
              "maximum": 2,
              "minimum": -2,
              "type": [
                "number",
                "null"
              ]
            },
            "reasoning_effort": {
              "description": "Constrains how hard a reasoning model thinks before responding. Not supported by `grok-4` and will result in error if used with `grok-4`. Possible values are `low` (uses fewer reasoning tokens) and `high` (uses more reasoning tokens).",
              "type": [
                "string",
                "null"
              ]
            },
            "response_format": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "An object specifying the format that the model must output. Specify `{ \"type\": \"json_object\" }` for JSON output, or `{ \"type\": \"json_schema\", \"json_schema\": {...} }` for structured outputs. If `{ \\\"type\\\": \\\"text\\\" }`, the model will return a text response.",
                  "oneOf": [
                    {
                      "description": "Specify text response format, always `\"text\"`.",
                      "properties": {
                        "type": {
                          "enum": [
                            "text"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Specify json_object response format, always `json_object`. Used for backward compatibility. Prefer to use `\"json_schema\"` instead of this.",
                      "properties": {
                        "type": {
                          "enum": [
                            "json_object"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Specify json_schema response format with a given schema. Type is always `\"json_schema\"`.",
                      "properties": {
                        "json_schema": {
                          "description": "A json schema representing the desired response schema. Includes the schema as a `\"schema\"` field."
                        },
                        "type": {
                          "enum": [
                            "json_schema"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "json_schema",
                        "type"
                      ],
                      "type": "object"
                    }
                  ]
                }
              ]
            },
            "search_parameters": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "Set the parameters to be used for searched data. If not set, no data will be acquired by the model.",
                  "properties": {
                    "from_date": {
                      "description": "Date from which to consider the results in ISO-8601 YYYY-MM-DD. See\n<https://en.wikipedia.org/wiki/ISO_8601>.",
                      "example": "2024-06-24",
                      "format": "date",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "max_search_results": {
                      "default": 15,
                      "description": "Maximum number of search results to use.",
                      "format": "int32",
                      "maximum": 30,
                      "minimum": 1,
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "mode": {
                      "default": "auto",
                      "description": "Choose the mode to query realtime data:\n* `off`: no search performed and no external will be considered.\n* `on` (default): the model will search in every sources for relevant data.\n* `auto`: the model choose whether to search data or not and where to search the data.",
                      "example": "auto",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "return_citations": {
                      "default": true,
                      "description": "Whether to return citations in the response or not.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "sources": {
                      "description": "List of sources to search in. If no sources specified, the model will look over the web and X by default.",
                      "items": {
                        "oneOf": [
                          {
                            "properties": {
                              "excluded_x_handles": {
                                "description": "List of X handles to exclude from the search results. X posts returned will not include\nany posts authored by these handles.",
                                "items": {
                                  "type": "string"
                                },
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "included_x_handles": {
                                "description": " NOTE: `included_x_handles` and `x_handles` are the same parameter.\n`included_x_handles` is the new name but we keep both for backward compatibility.\n\nX Handles of the users from whom to consider the posts. Only available if mode is `auto`, `on` or `x`.",
                                "items": {
                                  "type": "string"
                                },
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "post_favorite_count": {
                                "description": "The minimum favorite count of the X posts to consider.",
                                "format": "int32",
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "post_view_count": {
                                "description": "The minimum view count of the X posts to consider.",
                                "format": "int32",
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "type": {
                                "enum": [
                                  "x"
                                ],
                                "type": "string"
                              },
                              "x_handles": {
                                "deprecated": true,
                                "description": "DEPRECATED in favor of `included_x_handles`. Use `included_x_handles` instead.\nX Handles of the users from whom to consider the posts. Only available if mode is `auto`, `on` or `x`.",
                                "items": {
                                  "type": "string"
                                },
                                "type": [
                                  "array",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "allowed_websites": {
                                "description": "List of website to allow in the search results. This parameter act as a whitelist\nwhere only those websites can be selected. A maximum of 5 websites can be selected.\n\nNote 1: If no relevant information is found on those websites, the number of results\nreturned might be smaller than `max_search_results`.\n\nNote 2: This parameter cannot be set with `excluded_websites`.",
                                "example": [
                                  "wikipedia.com"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "maxItems": 5,
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "country": {
                                "description": "ISO alpha-2 code of the country. If the country is set, only data coming from this country\nwill be considered. See <https://en.wikipedia.org/wiki/ISO_3166-2>.",
                                "example": "BE",
                                "format": "iso3166-1-alpha-2",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "excluded_websites": {
                                "description": "List of website to exclude from the search results without protocol specification or\nsubdomains. A maximum of 5 websites can be excluded.\n\nNote 2: This parameter cannot be set with `allowed_websites`",
                                "example": [
                                  "wikipedia.com"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "maxItems": 5,
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "safe_search": {
                                "description": "If set to true, mature content won't be considered during the search. Default to `true`.",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "type": {
                                "enum": [
                                  "web"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "country": {
                                "description": "ISO alpha-2 code of the country. If the country is set, only data coming from this country\nwill be considered. See <https://en.wikipedia.org/wiki/ISO_3166-2>.",
                                "example": "BE",
                                "format": "iso3166-1-alpha-2",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "excluded_websites": {
                                "description": "List of website to exclude from the search results without protocol specification or\nsubdomains. A maximum of 5 websites can be excluded.",
                                "example": [
                                  "foxnews.com"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "maxItems": 5,
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "safe_search": {
                                "description": "If set to true, mature content won't be considered during the search. Default to `true`.",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "type": {
                                "enum": [
                                  "news"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "links": {
                                "description": "Links of the RSS feeds.",
                                "example": [
                                  "https://status.x.ai/feed.xml"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "array"
                              },
                              "type": {
                                "enum": [
                                  "rss"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "links",
                              "type"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": [
                        "array",
                        "null"
                      ]
                    },
                    "to_date": {
                      "description": "Date up to which to consider the results in ISO-8601 YYYY-MM-DD. See\n<https://en.wikipedia.org/wiki/ISO_8601>.",
                      "example": "2024-12-24",
                      "format": "date",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            },
            "seed": {
              "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result. Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.",
              "format": "int32",
              "type": [
                "integer",
                "null"
              ]
            },
            "stop": {
              "description": "(Not supported by reasoning models) Up to 4 sequences where the API will stop generating further tokens.",
              "items": {
                "type": "string"
              },
              "type": [
                "array",
                "null"
              ]
            },
            "stream": {
              "default": false,
              "description": "If set, partial message deltas will be sent. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a `data: [DONE]` message.",
              "example": true,
              "type": [
                "boolean",
                "null"
              ]
            },
            "stream_options": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "Options for streaming response. Only set this when you set `stream: true`.",
                  "properties": {
                    "include_usage": {
                      "description": "Set an additional chunk to be streamed before the `data: [DONE]` message. The other chunks will return `null` in `usage` field.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "include_usage"
                  ],
                  "type": "object"
                }
              ]
            },
            "temperature": {
              "default": 1,
              "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
              "example": 0.2,
              "format": "float",
              "maximum": 2,
              "minimum": 0,
              "type": [
                "number",
                "null"
              ]
            },
            "tool_choice": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "Controls which (if any) tool is called by the model. `none` means the model will not call any tool and instead generates a message. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools. Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to call that tool. `none` is the default when no tools are present. `auto` is the default if tools are present.",
                  "oneOf": [
                    {
                      "description": "Controls tool access by the model. `\"none\"` makes model ignore tools, `\"auto\"` let the model automatically decide whether to call a tool, `\"required\"` forces model to pick a tool to call.",
                      "type": "string"
                    },
                    {
                      "properties": {
                        "function": {
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "description": "Name of the function to use.",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            }
                          ]
                        },
                        "type": {
                          "description": "Type is always `\"function\"`.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  ]
                }
              ]
            },
            "tools": {
              "description": "A list of tools the model may call in JSON-schema. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported.",
              "items": {
                "description": "Definition of one tool that the model can call.",
                "oneOf": [
                  {
                    "properties": {
                      "function": {
                        "description": "Definition of tool call available to the model.",
                        "properties": {
                          "description": {
                            "description": "A description of the function to indicate to the model when to call it.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "The name of the function. If the model calls the function, this name is used in the\nresponse.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "A JSON schema describing the function parameters. The model _should_ follow the schema,\nhowever, this is not enforced at the moment."
                          },
                          "strict": {
                            "description": "Not supported. Only maintained for compatibility reasons.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "type": "object"
                      },
                      "type": {
                        "enum": [
                          "function"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "function",
                      "type"
                    ],
                    "type": "object"
                  },
                  {
                    "properties": {
                      "sources": {
                        "items": {
                          "oneOf": [
                            {
                              "properties": {
                                "excluded_x_handles": {
                                  "description": "List of X handles to exclude from the search results. X posts returned will not include\nany posts authored by these handles.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ]
                                },
                                "included_x_handles": {
                                  "description": " NOTE: `included_x_handles` and `x_handles` are the same parameter.\n`included_x_handles` is the new name but we keep both for backward compatibility.\n\nX Handles of the users from whom to consider the posts. Only available if mode is `auto`, `on` or `x`.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ]
                                },
                                "post_favorite_count": {
                                  "description": "The minimum favorite count of the X posts to consider.",
                                  "format": "int32",
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                },
                                "post_view_count": {
                                  "description": "The minimum view count of the X posts to consider.",
                                  "format": "int32",
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "enum": [
                                    "x"
                                  ],
                                  "type": "string"
                                },
                                "x_handles": {
                                  "deprecated": true,
                                  "description": "DEPRECATED in favor of `included_x_handles`. Use `included_x_handles` instead.\nX Handles of the users from whom to consider the posts. Only available if mode is `auto`, `on` or `x`.",
                                  "items": {
                                    "type": "string"
                                  },
                                  "type": [
                                    "array",
                                    "null"
                                  ]
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "allowed_websites": {
                                  "description": "List of website to allow in the search results. This parameter act as a whitelist\nwhere only those websites can be selected. A maximum of 5 websites can be selected.\n\nNote 1: If no relevant information is found on those websites, the number of results\nreturned might be smaller than `max_search_results`.\n\nNote 2: This parameter cannot be set with `excluded_websites`.",
                                  "example": [
                                    "wikipedia.com"
                                  ],
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 5,
                                  "type": [
                                    "array",
                                    "null"
                                  ]
                                },
                                "country": {
                                  "description": "ISO alpha-2 code of the country. If the country is set, only data coming from this country\nwill be considered. See <https://en.wikipedia.org/wiki/ISO_3166-2>.",
                                  "example": "BE",
                                  "format": "iso3166-1-alpha-2",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "excluded_websites": {
                                  "description": "List of website to exclude from the search results without protocol specification or\nsubdomains. A maximum of 5 websites can be excluded.\n\nNote 2: This parameter cannot be set with `allowed_websites`",
                                  "example": [
                                    "wikipedia.com"
                                  ],
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 5,
                                  "type": [
                                    "array",
                                    "null"
                                  ]
                                },
                                "safe_search": {
                                  "description": "If set to true, mature content won't be considered during the search. Default to `true`.",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "enum": [
                                    "web"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "country": {
                                  "description": "ISO alpha-2 code of the country. If the country is set, only data coming from this country\nwill be considered. See <https://en.wikipedia.org/wiki/ISO_3166-2>.",
                                  "example": "BE",
                                  "format": "iso3166-1-alpha-2",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "excluded_websites": {
                                  "description": "List of website to exclude from the search results without protocol specification or\nsubdomains. A maximum of 5 websites can be excluded.",
                                  "example": [
                                    "foxnews.com"
                                  ],
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 5,
                                  "type": [
                                    "array",
                                    "null"
                                  ]
                                },
                                "safe_search": {
                                  "description": "If set to true, mature content won't be considered during the search. Default to `true`.",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "enum": [
                                    "news"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            {
                              "properties": {
                                "links": {
                                  "description": "Links of the RSS feeds.",
                                  "example": [
                                    "https://status.x.ai/feed.xml"
                                  ],
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 1,
                                  "minItems": 1,
                                  "type": "array"
                                },
                                "type": {
                                  "enum": [
                                    "rss"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "links",
                                "type"
                              ],
                              "type": "object"
                            }
                          ]
                        },
                        "type": "array"
                      },
                      "type": {
                        "enum": [
                          "live_search"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "sources",
                      "type"
                    ],
                    "type": "object"
                  }
                ]
              },
              "maxItems": 128,
              "type": [
                "array",
                "null"
              ]
            },
            "top_logprobs": {
              "description": "An integer between 0 and 8 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used.",
              "format": "int32",
              "maximum": 8,
              "minimum": 0,
              "type": [
                "integer",
                "null"
              ]
            },
            "top_p": {
              "default": 1,
              "description": "An alternative to sampling with `temperature`, called nucleus sampling, where the model considers the results of the tokens with `top_p` probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. It is generally recommended to alter this or `temperature` but not both.",
              "exclusiveMinimum": 0,
              "format": "float",
              "maximum": 1,
              "type": [
                "number",
                "null"
              ]
            },
            "user": {
              "description": "A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.",
              "type": [
                "string",
                "null"
              ]
            },
            "web_search_options": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "Options to control the web search. This is only included for compatibility reason. Prefer\nthe usage of `realtime_data_parameters` instead.",
                  "properties": {
                    "filters": {
                      "description": "Only included for compatibility."
                    },
                    "search_context_size": {
                      "default": "medium",
                      "description": "This field included for compatibility reason with OpenAI's API. It is mapped to `max_search`.",
                      "example": "medium",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "user_location": {
                      "description": "Only included for compatibility."
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "example": {
            "choices": [
              {
                "finish_reason": "stop",
                "index": 0,
                "message": {
                  "content": "101 multiplied by 3 is 303.",
                  "refusal": null,
                  "role": "assistant"
                }
              }
            ],
            "created": 1752854522,
            "id": "a3d1008e-4544-40d4-d075-11527e794e4a",
            "model": "grok-4-0709",
            "object": "chat.completion",
            "system_fingerprint": "fp_3a7881249c",
            "usage": {
              "completion_tokens": 9,
              "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 94,
                "rejected_prediction_tokens": 0
              },
              "num_sources_used": 0,
              "prompt_tokens": 32,
              "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 6,
                "image_tokens": 0,
                "text_tokens": 32
              },
              "total_tokens": 135
            }
          },
          "schema": {
            "description": "The chat response body for `/v1/chat/completions` endpoint.",
            "properties": {
              "choices": {
                "description": "A list of response choices from the model. The length corresponds to the `n` in request body (default to 1).",
                "items": {
                  "properties": {
                    "finish_reason": {
                      "description": "Finish reason. `\"stop\"` means the inference has reached a model-defined or user-supplied stop sequence in `stop`. `\"length\"` means the inference result has reached models' maximum allowed token length or user defined value in `max_tokens`. `\"end_turn\"` or `null` in streaming mode when the chunk is not the last.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "index": {
                      "description": "Index of the choice within the response choices, starting from 0.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "logprobs": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "description": "The log probabilities of each output token returned in the content of message.",
                          "properties": {
                            "content": {
                              "description": "An array the log probabilities of each output token returned.",
                              "items": {
                                "properties": {
                                  "bytes": {
                                    "description": "The ASCII encoding of the output character.",
                                    "items": {
                                      "format": "int32",
                                      "minimum": 0,
                                      "type": "integer"
                                    },
                                    "type": [
                                      "array",
                                      "null"
                                    ]
                                  },
                                  "logprob": {
                                    "description": "The log probability of returning this token.",
                                    "format": "float",
                                    "type": "number"
                                  },
                                  "token": {
                                    "description": "The token.",
                                    "type": "string"
                                  },
                                  "top_logprobs": {
                                    "description": "An array of the most likely tokens to return at this token position.",
                                    "items": {
                                      "properties": {
                                        "bytes": {
                                          "description": "The ASCII encoding of the output character.",
                                          "items": {
                                            "format": "int32",
                                            "minimum": 0,
                                            "type": "integer"
                                          },
                                          "type": [
                                            "array",
                                            "null"
                                          ]
                                        },
                                        "logprob": {
                                          "description": "The log probability of returning this token.",
                                          "format": "float",
                                          "type": "number"
                                        },
                                        "token": {
                                          "description": "The token.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "token",
                                        "logprob"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "token",
                                  "logprob",
                                  "top_logprobs"
                                ],
                                "type": "object"
                              },
                              "type": [
                                "array",
                                "null"
                              ]
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "message": {
                      "description": "The generated chat completion message.",
                      "properties": {
                        "content": {
                          "description": "The content of the message.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "reasoning_content": {
                          "description": "The reasoning trace generated by the model.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "refusal": {
                          "description": "The reason given by model if the model is unable to generate a response. null if model is able to generate.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "role": {
                          "description": "The role that the message belongs to, the response from model is always `\"assistant\"`.",
                          "type": "string"
                        },
                        "tool_calls": {
                          "description": "A list of tool calls asked by model for user to perform.",
                          "items": {
                            "properties": {
                              "function": {
                                "description": "Function to call for the tool call.",
                                "properties": {
                                  "arguments": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "arguments"
                                ],
                                "type": "object"
                              },
                              "id": {
                                "description": "A unique ID of the tool call generated by xAI. After performing tool call's function, user provides this ID with tool call's result in the subsequent request to xAI. xAI can then match the tool call result sent with tool call request.",
                                "type": "string"
                              },
                              "index": {
                                "description": "Index of the tool call.",
                                "format": "int32",
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "Type of tool call, should be `\"function\"` or `\"web_search_call\"` or `\"x_search_call\"` or `\"code_interpreter_call\"` or `\"mcp_call\"`",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "function"
                            ],
                            "type": "object"
                          },
                          "type": [
                            "array",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "role"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "index",
                    "message"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "citations": {
                "description": "List of all the external pages used by the model to answer.",
                "items": {
                  "type": "string"
                },
                "type": [
                  "array",
                  "null"
                ]
              },
              "created": {
                "description": "The chat completion creation time in Unix timestamp.",
                "format": "int64",
                "type": "integer"
              },
              "debug_output": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "description": "Debug output. Only available to trusted testers.",
                    "properties": {
                      "attempts": {
                        "description": "Number of attempts made to the model.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "cache_read_count": {
                        "description": "Number of cache reads",
                        "format": "int32",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "cache_read_input_bytes": {
                        "description": "Size of cache read",
                        "format": "int64",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "cache_write_count": {
                        "description": "Number of cache writes",
                        "format": "int32",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "cache_write_input_bytes": {
                        "description": "Size of cache write",
                        "format": "int64",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "chunks": {
                        "description": "The individual chunks returned from the pipeline of samplers.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "engine_request": {
                        "description": "JSON-serialized request sent to the inference engine.",
                        "type": "string"
                      },
                      "lb_address": {
                        "description": "The load balancer address",
                        "type": "string"
                      },
                      "prompt": {
                        "description": "The prompt sent to the model in text form.",
                        "type": "string"
                      },
                      "request": {
                        "description": "The request received from the user.",
                        "type": "string"
                      },
                      "responses": {
                        "description": "The response(s) received from the model.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "sampler_checkpoint_mount": {
                        "description": "The underlying checkpoint mount path for the sampler that served this request.",
                        "type": "string"
                      },
                      "sampler_tag": {
                        "description": "The tag of the actual engines sitting behind the GTP address. Eg \"grok-4-code-eapi-lap4-unified-sblbm-0\"",
                        "type": "string"
                      }
                    },
                    "required": [
                      "attempts",
                      "request",
                      "prompt",
                      "engine_request",
                      "responses",
                      "chunks",
                      "cache_read_count",
                      "cache_read_input_bytes",
                      "cache_write_count",
                      "cache_write_input_bytes",
                      "lb_address",
                      "sampler_tag",
                      "sampler_checkpoint_mount"
                    ],
                    "type": "object"
                  }
                ]
              },
              "id": {
                "description": "A unique ID for the chat response.",
                "type": "string"
              },
              "model": {
                "description": "Model ID used to create chat completion.",
                "example": "grok-4-0709",
                "type": "string"
              },
              "object": {
                "description": "The object type, which is always `\"chat.completion\"`.",
                "type": "string"
              },
              "system_fingerprint": {
                "description": "System fingerprint, used to indicate xAI system configuration changes.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "usage": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "description": "Token usage information.",
                    "properties": {
                      "completion_tokens": {
                        "description": "Total completion token used.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "completion_tokens_details": {
                        "description": "Breakdown of completion token usage of different types.",
                        "properties": {
                          "accepted_prediction_tokens": {
                            "description": "The number of tokens in the prediction that appeared in the completion.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "audio_tokens": {
                            "description": "Audio input tokens generated by the model.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "reasoning_tokens": {
                            "description": "Tokens generated by the model for reasoning.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "rejected_prediction_tokens": {
                            "description": "The number of tokens in the prediction that did not appear in the completion.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "reasoning_tokens",
                          "audio_tokens",
                          "accepted_prediction_tokens",
                          "rejected_prediction_tokens"
                        ],
                        "type": "object"
                      },
                      "num_sources_used": {
                        "description": "Number of individual live search source used.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "prompt_tokens": {
                        "description": "Total prompt token used.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "prompt_tokens_details": {
                        "description": "Breakdown of prompt token usage of different types.",
                        "properties": {
                          "audio_tokens": {
                            "description": "Audio prompt token used.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "cached_tokens": {
                            "description": "Token cached by xAI from previous requests and reused for this request.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "image_tokens": {
                            "description": "Image prompt token used.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "text_tokens": {
                            "description": "Text prompt token used.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "text_tokens",
                          "audio_tokens",
                          "image_tokens",
                          "cached_tokens"
                        ],
                        "type": "object"
                      },
                      "total_tokens": {
                        "description": "Total token used, the sum of prompt token and completion token amount.",
                        "format": "int32",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "prompt_tokens",
                      "completion_tokens",
                      "total_tokens",
                      "prompt_tokens_details",
                      "completion_tokens_details",
                      "num_sources_used"
                    ],
                    "type": "object"
                  }
                ]
              }
            },
            "required": [
              "id",
              "object",
              "created",
              "model",
              "choices"
            ],
            "type": "object"
          }
        }
      },
      "description": "Success"
    },
    "400": {
      "description": "Bad request. The request is invalid or an invalid API key is provided."
    },
    "422": {
      "description": "Unprocessable Entity. There are missing fields in the request body."
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "summary": "Create a chat response from text/image chat prompts. This is the endpoint for making requests to chat and image understanding models.",
  "tags": [
    "v1"
  ]
}
