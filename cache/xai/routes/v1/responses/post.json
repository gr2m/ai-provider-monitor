{
  "operationId": "handle_generic_model_request",
  "requestBody": {
    "content": {
      "application/json": {
        "example": {
          "input": [
            {
              "content": "You are a helpful assistant that can answer questions and help with tasks.",
              "role": "system"
            },
            {
              "content": "What is 101*3?",
              "role": "user"
            }
          ],
          "model": "grok-4-0709"
        },
        "schema": {
          "description": "The request body for `/v1/responses` endpoint.",
          "properties": {
            "background": {
              "default": false,
              "description": "(Unsupported) Whether to process the response asynchronously in the background.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "include": {
              "description": "What additional output data to include in the response. Currently the only supported value is `reasoning.encrypted_content` which returns an encrypted version of the reasoning tokens.",
              "items": {
                "type": "string"
              },
              "type": [
                "array",
                "null"
              ]
            },
            "input": {
              "description": "The input passed to the model. Can be text, image or file.",
              "oneOf": [
                {
                  "description": "Text input.",
                  "type": "string"
                },
                {
                  "description": "A list of input items to the model. Can be of different types.",
                  "items": {
                    "oneOf": [
                      {
                        "description": "Message input to the model.",
                        "properties": {
                          "content": {
                            "description": "Text, image or audio input.",
                            "oneOf": [
                              {
                                "description": "Text input.",
                                "type": "string"
                              },
                              {
                                "description": "A list of input items to the model. Can include text and images.",
                                "items": {
                                  "oneOf": [
                                    {
                                      "description": "Text input.",
                                      "properties": {
                                        "text": {
                                          "description": "Text input.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "enum": [
                                            "input_text"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "text",
                                        "type"
                                      ],
                                      "type": "object"
                                    },
                                    {
                                      "description": "Image input. Note: Storing and fetching images is not fully supported at the moment.",
                                      "properties": {
                                        "detail": {
                                          "description": "Specifies the detail level of the image. One of `high`, `low` or `auto`. Defaults to `auto`.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "file_id": {
                                          "description": "Only included for compatibility.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "image_url": {
                                          "description": "A public URL of image prompt, only available for vision models.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "enum": [
                                            "input_image"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "image_url",
                                        "type"
                                      ],
                                      "type": "object"
                                    }
                                  ]
                                },
                                "type": "array"
                              }
                            ]
                          },
                          "name": {
                            "description": "A unique identifier representing your end-user, which can help xAI to monitor and detect abuse. Only supported for `user` messages.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "role": {
                            "description": "The role of the message. Possible values are `user`, `assistant`, `system` and `developer`.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the message, which is always `message`.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "required": [
                          "content",
                          "role"
                        ],
                        "type": "object"
                      },
                      {
                        "allOf": [
                          {
                            "oneOf": [
                              {
                                "allOf": [
                                  {
                                    "oneOf": [
                                      {
                                        "allOf": [
                                          {
                                            "description": "An output message from the model.",
                                            "properties": {
                                              "content": {
                                                "description": "Content of the output message.",
                                                "items": {
                                                  "oneOf": [
                                                    {
                                                      "description": "Text output.",
                                                      "properties": {
                                                        "annotations": {
                                                          "description": "Citations.",
                                                          "items": {
                                                            "properties": {
                                                              "type": {
                                                                "description": "The type of the annotation. Only supported type currently is `url_citation`.",
                                                                "type": "string"
                                                              },
                                                              "url": {
                                                                "description": "The URL of the web resource.",
                                                                "type": "string"
                                                              }
                                                            },
                                                            "required": [
                                                              "type",
                                                              "url"
                                                            ],
                                                            "type": "object"
                                                          },
                                                          "type": "array"
                                                        },
                                                        "logprobs": {
                                                          "description": "The log probabilities of each output token returned in the content of message.",
                                                          "items": {
                                                            "properties": {
                                                              "bytes": {
                                                                "description": "The ASCII encoding of the output character.",
                                                                "items": {
                                                                  "format": "int32",
                                                                  "minimum": 0,
                                                                  "type": "integer"
                                                                },
                                                                "type": [
                                                                  "array",
                                                                  "null"
                                                                ]
                                                              },
                                                              "logprob": {
                                                                "description": "The log probability of returning this token.",
                                                                "format": "float",
                                                                "type": "number"
                                                              },
                                                              "token": {
                                                                "description": "The token.",
                                                                "type": "string"
                                                              },
                                                              "top_logprobs": {
                                                                "description": "An array of the most likely tokens to return at this token position.",
                                                                "items": {
                                                                  "properties": {
                                                                    "bytes": {
                                                                      "description": "The ASCII encoding of the output character.",
                                                                      "items": {
                                                                        "format": "int32",
                                                                        "minimum": 0,
                                                                        "type": "integer"
                                                                      },
                                                                      "type": [
                                                                        "array",
                                                                        "null"
                                                                      ]
                                                                    },
                                                                    "logprob": {
                                                                      "description": "The log probability of returning this token.",
                                                                      "format": "float",
                                                                      "type": "number"
                                                                    },
                                                                    "token": {
                                                                      "description": "The token.",
                                                                      "type": "string"
                                                                    }
                                                                  },
                                                                  "required": [
                                                                    "token",
                                                                    "logprob"
                                                                  ],
                                                                  "type": "object"
                                                                },
                                                                "type": "array"
                                                              }
                                                            },
                                                            "required": [
                                                              "token",
                                                              "logprob",
                                                              "top_logprobs"
                                                            ],
                                                            "type": "object"
                                                          },
                                                          "type": "array"
                                                        },
                                                        "text": {
                                                          "description": "The text output from the model.",
                                                          "type": "string"
                                                        },
                                                        "type": {
                                                          "enum": [
                                                            "output_text"
                                                          ],
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "text",
                                                        "annotations",
                                                        "type"
                                                      ],
                                                      "type": "object"
                                                    },
                                                    {
                                                      "description": "Refusal.",
                                                      "properties": {
                                                        "refusal": {
                                                          "description": "The reason for the refusal.",
                                                          "type": "string"
                                                        },
                                                        "type": {
                                                          "enum": [
                                                            "refusal"
                                                          ],
                                                          "type": "string"
                                                        }
                                                      },
                                                      "required": [
                                                        "refusal",
                                                        "type"
                                                      ],
                                                      "type": "object"
                                                    }
                                                  ]
                                                },
                                                "type": "array"
                                              },
                                              "id": {
                                                "description": "The unique ID of the output message.",
                                                "type": "string"
                                              },
                                              "role": {
                                                "description": "The role of the output message, which can be `assistant` or `tool`.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "Status of the item. One of `completed`, `in_progress` or `incomplete`.",
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "The type of the output message, which is always `message`.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "content",
                                              "role",
                                              "type"
                                            ],
                                            "type": "object"
                                          }
                                        ]
                                      },
                                      {
                                        "allOf": [
                                          {
                                            "description": "A tool call to run a function.",
                                            "properties": {
                                              "arguments": {
                                                "description": "The arguments to pass to the function, as a JSON string.",
                                                "type": "string"
                                              },
                                              "call_id": {
                                                "description": "The unique ID of the function tool call generated by the model.",
                                                "type": "string"
                                              },
                                              "id": {
                                                "description": "The unique ID of the function tool call.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "The name of the function.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "Status of the item. One of `completed`, `in_progress` or `incomplete`.",
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "The type of the function tool call, which can be `\"function_call\"` for client-side tool calls,\nand `\"web_search_call\"` or `\"x_search_call\"` or `\"code_interpreter_call\"` or `\"mcp_call\"` for server-side tool calls.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "arguments",
                                              "call_id",
                                              "name",
                                              "type"
                                            ],
                                            "type": "object"
                                          }
                                        ]
                                      },
                                      {
                                        "allOf": [
                                          {
                                            "description": "The reasoning done by the model.",
                                            "properties": {
                                              "encrypted_content": {
                                                "description": "The enrypted reasoning. Returned when `reasoning.encrypted_content` is passed in `include`.",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "id": {
                                                "description": "The unique ID of the reasoning content.",
                                                "type": "string"
                                              },
                                              "status": {
                                                "description": "Status of the item. One of `completed`, `in_progress` or `incomplete`.",
                                                "type": "string"
                                              },
                                              "summary": {
                                                "description": "The reasoning text contents.",
                                                "items": {
                                                  "properties": {
                                                    "text": {
                                                      "description": "Reasoning done by the model.",
                                                      "type": "string"
                                                    },
                                                    "type": {
                                                      "description": "The type of the object, which is always `summary_text`.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "text",
                                                    "type"
                                                  ],
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              },
                                              "type": {
                                                "description": "The type of the object, which is always `reasoning`.",
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "summary",
                                              "type"
                                            ],
                                            "type": "object"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "allOf": [
                                  {
                                    "description": "The output of a function tool call.",
                                    "properties": {
                                      "call_id": {
                                        "description": "The unique ID of the function tool call generated by the model.",
                                        "type": "string"
                                      },
                                      "output": {
                                        "description": "The output of the function tool call, as a JSON string.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The type of the function tool call, which is always `function_call_output`.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "call_id",
                                      "output",
                                      "type"
                                    ],
                                    "type": "object"
                                  }
                                ]
                              }
                            ]
                          }
                        ],
                        "description": "Previous responses of the model and tool call outputs."
                      }
                    ]
                  },
                  "type": "array"
                }
              ]
            },
            "instructions": {
              "description": "An alternate way to specify the system prompt. Note that this cannot be used alongside `previous_response_id`, where the system prompt of the previous message will be used.",
              "type": [
                "string",
                "null"
              ]
            },
            "logprobs": {
              "default": false,
              "description": "Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "max_output_tokens": {
              "description": "Max number of tokens that can be generated in a response. This includes both output and reasoning tokens.",
              "format": "int32",
              "type": [
                "integer",
                "null"
              ]
            },
            "metadata": {
              "description": "Not supported. Only maintained for compatibility reasons."
            },
            "model": {
              "description": "Model name for the model to use. Obtainable from <https://console.x.ai/team/default/models> or <https://docs.x.ai/docs/models>.",
              "example": "grok-4-0709",
              "type": "string"
            },
            "parallel_tool_calls": {
              "default": true,
              "description": "Whether to allow the model to run parallel tool calls.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "previous_response_id": {
              "description": "The ID of the previous response from the model.",
              "type": [
                "string",
                "null"
              ]
            },
            "reasoning": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "Reasoning configuration. Only for reasoning models.",
                  "properties": {
                    "effort": {
                      "default": "medium",
                      "description": "Constrains how hard a reasoning model thinks before responding. Possible values are `low` (uses fewer reasoning tokens), `medium` and `high` (uses more reasoning tokens).",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "generate_summary": {
                      "description": "Only included for compatibility.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "summary": {
                      "description": "A summary of the model's reasoning process. Possible values are `auto`, `concise` and `detailed`. Only included for compatibility. The model shall always return `detailed`.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            },
            "search_parameters": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "Set the parameters to be used for searched data. Takes precedence over `web_search_preview` tool if specified in the tools.",
                  "properties": {
                    "from_date": {
                      "description": "Date from which to consider the results in ISO-8601 YYYY-MM-DD. See\n<https://en.wikipedia.org/wiki/ISO_8601>.",
                      "example": "2024-06-24",
                      "format": "date",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "max_search_results": {
                      "default": 15,
                      "description": "Maximum number of search results to use.",
                      "format": "int32",
                      "maximum": 30,
                      "minimum": 1,
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "mode": {
                      "default": "auto",
                      "description": "Choose the mode to query realtime data:\n* `off`: no search performed and no external will be considered.\n* `on` (default): the model will search in every sources for relevant data.\n* `auto`: the model choose whether to search data or not and where to search the data.",
                      "example": "auto",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "return_citations": {
                      "default": true,
                      "description": "Whether to return citations in the response or not.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "sources": {
                      "description": "List of sources to search in. If no sources specified, the model will look over the web and X by default.",
                      "items": {
                        "oneOf": [
                          {
                            "properties": {
                              "excluded_x_handles": {
                                "description": "List of X handles to exclude from the search results. X posts returned will not include\nany posts authored by these handles.",
                                "items": {
                                  "type": "string"
                                },
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "included_x_handles": {
                                "description": " NOTE: `included_x_handles` and `x_handles` are the same parameter.\n`included_x_handles` is the new name but we keep both for backward compatibility.\n\nX Handles of the users from whom to consider the posts. Only available if mode is `auto`, `on` or `x`.",
                                "items": {
                                  "type": "string"
                                },
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "post_favorite_count": {
                                "description": "The minimum favorite count of the X posts to consider.",
                                "format": "int32",
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "post_view_count": {
                                "description": "The minimum view count of the X posts to consider.",
                                "format": "int32",
                                "type": [
                                  "integer",
                                  "null"
                                ]
                              },
                              "type": {
                                "enum": [
                                  "x"
                                ],
                                "type": "string"
                              },
                              "x_handles": {
                                "deprecated": true,
                                "description": "DEPRECATED in favor of `included_x_handles`. Use `included_x_handles` instead.\nX Handles of the users from whom to consider the posts. Only available if mode is `auto`, `on` or `x`.",
                                "items": {
                                  "type": "string"
                                },
                                "type": [
                                  "array",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "allowed_websites": {
                                "description": "List of website to allow in the search results. This parameter act as a whitelist\nwhere only those websites can be selected. A maximum of 5 websites can be selected.\n\nNote 1: If no relevant information is found on those websites, the number of results\nreturned might be smaller than `max_search_results`.\n\nNote 2: This parameter cannot be set with `excluded_websites`.",
                                "example": [
                                  "wikipedia.com"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "maxItems": 5,
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "country": {
                                "description": "ISO alpha-2 code of the country. If the country is set, only data coming from this country\nwill be considered. See <https://en.wikipedia.org/wiki/ISO_3166-2>.",
                                "example": "BE",
                                "format": "iso3166-1-alpha-2",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "excluded_websites": {
                                "description": "List of website to exclude from the search results without protocol specification or\nsubdomains. A maximum of 5 websites can be excluded.\n\nNote 2: This parameter cannot be set with `allowed_websites`",
                                "example": [
                                  "wikipedia.com"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "maxItems": 5,
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "safe_search": {
                                "description": "If set to true, mature content won't be considered during the search. Default to `true`.",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "type": {
                                "enum": [
                                  "web"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "country": {
                                "description": "ISO alpha-2 code of the country. If the country is set, only data coming from this country\nwill be considered. See <https://en.wikipedia.org/wiki/ISO_3166-2>.",
                                "example": "BE",
                                "format": "iso3166-1-alpha-2",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "excluded_websites": {
                                "description": "List of website to exclude from the search results without protocol specification or\nsubdomains. A maximum of 5 websites can be excluded.",
                                "example": [
                                  "foxnews.com"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "maxItems": 5,
                                "type": [
                                  "array",
                                  "null"
                                ]
                              },
                              "safe_search": {
                                "description": "If set to true, mature content won't be considered during the search. Default to `true`.",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "type": {
                                "enum": [
                                  "news"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "properties": {
                              "links": {
                                "description": "Links of the RSS feeds.",
                                "example": [
                                  "https://status.x.ai/feed.xml"
                                ],
                                "items": {
                                  "type": "string"
                                },
                                "maxItems": 1,
                                "minItems": 1,
                                "type": "array"
                              },
                              "type": {
                                "enum": [
                                  "rss"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "links",
                              "type"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": [
                        "array",
                        "null"
                      ]
                    },
                    "to_date": {
                      "description": "Date up to which to consider the results in ISO-8601 YYYY-MM-DD. See\n<https://en.wikipedia.org/wiki/ISO_8601>.",
                      "example": "2024-12-24",
                      "format": "date",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            },
            "service_tier": {
              "description": "Not supported. Only maintained for compatibility reasons.",
              "type": [
                "string",
                "null"
              ]
            },
            "store": {
              "default": true,
              "description": "Whether to store the input message(s) and model response for later retrieval.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "stream": {
              "default": false,
              "description": "If set, partial message deltas will be sent. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a `data: [DONE]` message.",
              "example": true,
              "type": [
                "boolean",
                "null"
              ]
            },
            "temperature": {
              "default": 1,
              "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
              "example": 0.2,
              "format": "float",
              "maximum": 2,
              "minimum": 0,
              "type": [
                "number",
                "null"
              ]
            },
            "text": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "Settings for customizing a text response from the model.",
                  "properties": {
                    "format": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "description": "An object specifying the format that the model must output. Specify `{ \"type\": \"json_object\" }` for JSON output, or `{ \"type\": \"json_schema\", \"json_schema\": {...} }` for structured outputs. If `{ \\\"type\\\": \\\"text\\\" }`, the model will return a text response.",
                          "oneOf": [
                            {
                              "description": "Specify text response format, always `\"text\"`.",
                              "properties": {
                                "type": {
                                  "enum": [
                                    "text"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            {
                              "description": "Specify json_object response format, always `json_object`. Used for backward compatibility. Prefer to use `\"json_schema\"` instead of this.",
                              "properties": {
                                "type": {
                                  "enum": [
                                    "json_object"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type"
                              ],
                              "type": "object"
                            },
                            {
                              "description": "Specify json_schema response format with a given schema. Type is always `\"json_schema\"`.",
                              "properties": {
                                "description": {
                                  "description": "Only included for compatibility.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "name": {
                                  "description": "Only included for compatibility.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "schema": {
                                  "description": "A json schema representing the desired response schema."
                                },
                                "strict": {
                                  "description": "Only included for compatibility.",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "type": {
                                  "enum": [
                                    "json_schema"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "schema",
                                "type"
                              ],
                              "type": "object"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            },
            "tool_choice": {
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "description": "Controls which (if any) tool is called by the model. `none` means the model will not call any tool and instead generates a message. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools. Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to call that tool. `none` is the default when no tools are present. `auto` is the default if tools are present.",
                  "oneOf": [
                    {
                      "description": "Controls tool access by the model. `\"none\"` makes model ignore tools, `\"auto\"` let the model automatically decide whether to call a tool, `\"required\"` forces model to pick a tool to call.",
                      "type": "string"
                    },
                    {
                      "properties": {
                        "function": {
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "description": "Name of the function to use.",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object"
                            }
                          ]
                        },
                        "type": {
                          "description": "Type is always `\"function\"`.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  ]
                }
              ]
            },
            "tools": {
              "description": "A list of tools the model may call in JSON-schema. Currently, only functions and web search are supported as tools. A max of 128 tools are supported.`web_search_preview` tool, if specified, will be overridden by `search_parameters`.",
              "items": {
                "description": "Definition of one tool that the model can call.",
                "oneOf": [
                  {
                    "allOf": [
                      {
                        "description": "Definition of the tool call made available to the model.",
                        "properties": {
                          "description": {
                            "description": "A description of the function to indicate to the model when to call it.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "The name of the function. If the model calls the function, this name is used in the\nresponse.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "A JSON schema describing the function parameters. The model _should_ follow the schema,\nhowever, this is not enforced at the moment."
                          },
                          "strict": {
                            "description": "Not supported. Only maintained for compatibility reasons.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          }
                        },
                        "required": [
                          "name",
                          "parameters"
                        ],
                        "type": "object"
                      },
                      {
                        "description": "A function that the model can call.",
                        "properties": {
                          "type": {
                            "enum": [
                              "function"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "A function that the model can call."
                  },
                  {
                    "allOf": [
                      {
                        "properties": {
                          "filters": {
                            "description": "Only included for compatibility."
                          },
                          "search_context_size": {
                            "default": "medium",
                            "description": "This field included for compatibility reason with OpenAI's API. It is mapped to `max_search`.",
                            "example": "medium",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "user_location": {
                            "description": "Only included for compatibility."
                          }
                        },
                        "type": "object"
                      },
                      {
                        "properties": {
                          "allowed_domains": {
                            "description": "List of website domains to allow in the search results. This parameter act as a whitelist\nwhere only those websites can be selected. A maximum of 5 websites can be selected.\n\nNote: This parameter cannot be set with `excluded_domains`.",
                            "example": [
                              "wikipedia.com"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 5,
                            "type": [
                              "array",
                              "null"
                            ]
                          },
                          "enable_image_understanding": {
                            "description": "Enable image understanding during web search.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "excluded_domains": {
                            "description": "List of website domains to exclude from the search results without protocol specification or\nsubdomains. A maximum of 5 websites can be excluded.\n\nNote: This parameter cannot be set with `allowed_domains`",
                            "example": [
                              "wikipedia.com"
                            ],
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 5,
                            "type": [
                              "array",
                              "null"
                            ]
                          }
                        },
                        "type": "object"
                      },
                      {
                        "description": "Search the web.",
                        "properties": {
                          "type": {
                            "enum": [
                              "web_search"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "Search the web."
                  },
                  {
                    "description": "Search X.",
                    "properties": {
                      "allowed_x_handles": {
                        "description": "List of X Handles of the users from whom to consider the posts.\n\nNote: This parameter cannot be set with `excluded_x_handles`.",
                        "example": [
                          "elonmusk"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 10,
                        "type": [
                          "array",
                          "null"
                        ]
                      },
                      "enable_image_understanding": {
                        "description": "Enable image understanding during X search.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "enable_video_understanding": {
                        "description": "Enable video understanding during X search.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "excluded_x_handles": {
                        "description": "List of X Handles of the users from whom to exclude the posts.\n\nNote: This parameter cannot be set with `allowed_x_handles`.",
                        "example": [
                          "elonmusk"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 10,
                        "type": [
                          "array",
                          "null"
                        ]
                      },
                      "from_date": {
                        "description": "Date from which to consider the results in ISO-8601 YYYY-MM-DD. See\n<https://en.wikipedia.org/wiki/ISO_8601>.",
                        "example": "2024-06-24",
                        "format": "date",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "to_date": {
                        "description": "Date up to which to consider the results in ISO-8601 YYYY-MM-DD. See\n<https://en.wikipedia.org/wiki/ISO_8601>.",
                        "example": "2024-12-24",
                        "format": "date",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "type": {
                        "enum": [
                          "x_search"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "Search the knowledge bases.",
                    "properties": {
                      "max_num_results": {
                        "example": 10,
                        "format": "int32",
                        "minimum": 1,
                        "type": [
                          "integer",
                          "null"
                        ]
                      },
                      "type": {
                        "enum": [
                          "file_search"
                        ],
                        "type": "string"
                      },
                      "vector_store_ids": {
                        "description": "List of vector store IDs to search within.",
                        "example": [
                          "collection_id_1",
                          "collection_id_2"
                        ],
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 10,
                        "type": "array"
                      }
                    },
                    "required": [
                      "vector_store_ids",
                      "type"
                    ],
                    "type": "object"
                  },
                  {
                    "description": "Execute code.",
                    "properties": {
                      "type": {
                        "enum": [
                          "code_interpreter"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                ]
              },
              "maxItems": 128,
              "type": [
                "array",
                "null"
              ]
            },
            "top_logprobs": {
              "description": "An integer between 0 and 8 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used.",
              "format": "int32",
              "maximum": 8,
              "minimum": 0,
              "type": [
                "integer",
                "null"
              ]
            },
            "top_p": {
              "default": 1,
              "description": "An alternative to sampling with `temperature`, called nucleus sampling, where the model considers the results of the tokens with `top_p` probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. It is generally recommended to alter this or `temperature` but not both.",
              "exclusiveMinimum": 0,
              "format": "float",
              "maximum": 1,
              "type": [
                "number",
                "null"
              ]
            },
            "truncation": {
              "description": "Not supported. Only maintained for compatibility reasons.",
              "type": [
                "string",
                "null"
              ]
            },
            "user": {
              "description": "A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "required": [
            "input"
          ],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "example": {
            "created_at": 1754475266,
            "id": "ad5663da-63e6-86c6-e0be-ff15effa8357",
            "incomplete_details": null,
            "max_output_tokens": null,
            "model": "grok-4-0709",
            "object": "response",
            "output": [
              {
                "content": [
                  {
                    "annotations": [],
                    "logprobs": null,
                    "text": "101 multiplied by 3 is 303.",
                    "type": "output_text"
                  }
                ],
                "id": "msg_ad5663da-63e6-86c6-e0be-ff15effa8357",
                "role": "assistant",
                "status": "completed",
                "type": "message"
              }
            ],
            "parallel_tool_calls": true,
            "previous_response_id": null,
            "reasoning": null,
            "status": "completed",
            "store": true,
            "temperature": null,
            "text": {
              "format": {
                "type": "text"
              }
            },
            "tool_choice": "auto",
            "tools": [],
            "top_p": null,
            "usage": {
              "completion_tokens": 9,
              "completion_tokens_details": {
                "accepted_prediction_tokens": 0,
                "audio_tokens": 0,
                "reasoning_tokens": 110,
                "rejected_prediction_tokens": 0
              },
              "num_sources_used": 0,
              "prompt_tokens": 32,
              "prompt_tokens_details": {
                "audio_tokens": 0,
                "cached_tokens": 8,
                "image_tokens": 0,
                "text_tokens": 32
              },
              "total_tokens": 151
            },
            "user": null
          },
          "schema": {
            "description": "The response body for `/v1/responses` endpoint.",
            "properties": {
              "background": {
                "default": false,
                "description": "Whether to process the response asynchronously in the background.",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "created_at": {
                "description": "The Unix timestamp (in seconds) for the response creation time.",
                "format": "int64",
                "type": "integer"
              },
              "debug_output": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "description": "Debug output. Only available to trusted testers.",
                    "properties": {
                      "attempts": {
                        "description": "Number of attempts made to the model.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "cache_read_count": {
                        "description": "Number of cache reads",
                        "format": "int32",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "cache_read_input_bytes": {
                        "description": "Size of cache read",
                        "format": "int64",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "cache_write_count": {
                        "description": "Number of cache writes",
                        "format": "int32",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "cache_write_input_bytes": {
                        "description": "Size of cache write",
                        "format": "int64",
                        "minimum": 0,
                        "type": "integer"
                      },
                      "chunks": {
                        "description": "The individual chunks returned from the pipeline of samplers.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "engine_request": {
                        "description": "JSON-serialized request sent to the inference engine.",
                        "type": "string"
                      },
                      "lb_address": {
                        "description": "The load balancer address",
                        "type": "string"
                      },
                      "prompt": {
                        "description": "The prompt sent to the model in text form.",
                        "type": "string"
                      },
                      "request": {
                        "description": "The request received from the user.",
                        "type": "string"
                      },
                      "responses": {
                        "description": "The response(s) received from the model.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "sampler_checkpoint_mount": {
                        "description": "The underlying checkpoint mount path for the sampler that served this request.",
                        "type": "string"
                      },
                      "sampler_tag": {
                        "description": "The tag of the actual engines sitting behind the GTP address. Eg \"grok-4-code-eapi-lap4-unified-sblbm-0\"",
                        "type": "string"
                      }
                    },
                    "required": [
                      "attempts",
                      "request",
                      "prompt",
                      "engine_request",
                      "responses",
                      "chunks",
                      "cache_read_count",
                      "cache_read_input_bytes",
                      "cache_write_count",
                      "cache_write_input_bytes",
                      "lb_address",
                      "sampler_tag",
                      "sampler_checkpoint_mount"
                    ],
                    "type": "object"
                  }
                ]
              },
              "id": {
                "description": "Unique ID of the response.",
                "type": "string"
              },
              "incomplete_details": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "description": "Details about why the response is incomplete.",
                    "properties": {
                      "reason": {
                        "description": "The reason why the response is incomplete.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "reason"
                    ],
                    "type": "object"
                  }
                ]
              },
              "max_output_tokens": {
                "description": "Max number of tokens that can be generated in a response. This includes both output and reasoning tokens.",
                "format": "int32",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "metadata": {
                "description": "Only included for compatibility."
              },
              "model": {
                "description": "Model name used to generate the response.",
                "type": "string"
              },
              "object": {
                "description": "The object type of this resource. Always set to `response`.",
                "type": "string"
              },
              "output": {
                "description": "The response generated by the model.",
                "items": {
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "description": "An output message from the model.",
                          "properties": {
                            "content": {
                              "description": "Content of the output message.",
                              "items": {
                                "oneOf": [
                                  {
                                    "description": "Text output.",
                                    "properties": {
                                      "annotations": {
                                        "description": "Citations.",
                                        "items": {
                                          "properties": {
                                            "type": {
                                              "description": "The type of the annotation. Only supported type currently is `url_citation`.",
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The URL of the web resource.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "url"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "logprobs": {
                                        "description": "The log probabilities of each output token returned in the content of message.",
                                        "items": {
                                          "properties": {
                                            "bytes": {
                                              "description": "The ASCII encoding of the output character.",
                                              "items": {
                                                "format": "int32",
                                                "minimum": 0,
                                                "type": "integer"
                                              },
                                              "type": [
                                                "array",
                                                "null"
                                              ]
                                            },
                                            "logprob": {
                                              "description": "The log probability of returning this token.",
                                              "format": "float",
                                              "type": "number"
                                            },
                                            "token": {
                                              "description": "The token.",
                                              "type": "string"
                                            },
                                            "top_logprobs": {
                                              "description": "An array of the most likely tokens to return at this token position.",
                                              "items": {
                                                "properties": {
                                                  "bytes": {
                                                    "description": "The ASCII encoding of the output character.",
                                                    "items": {
                                                      "format": "int32",
                                                      "minimum": 0,
                                                      "type": "integer"
                                                    },
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ]
                                                  },
                                                  "logprob": {
                                                    "description": "The log probability of returning this token.",
                                                    "format": "float",
                                                    "type": "number"
                                                  },
                                                  "token": {
                                                    "description": "The token.",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "token",
                                                  "logprob"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "token",
                                            "logprob",
                                            "top_logprobs"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "text": {
                                        "description": "The text output from the model.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "enum": [
                                          "output_text"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "text",
                                      "annotations",
                                      "type"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "description": "Refusal.",
                                    "properties": {
                                      "refusal": {
                                        "description": "The reason for the refusal.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "enum": [
                                          "refusal"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "refusal",
                                      "type"
                                    ],
                                    "type": "object"
                                  }
                                ]
                              },
                              "type": "array"
                            },
                            "id": {
                              "description": "The unique ID of the output message.",
                              "type": "string"
                            },
                            "role": {
                              "description": "The role of the output message, which can be `assistant` or `tool`.",
                              "type": "string"
                            },
                            "status": {
                              "description": "Status of the item. One of `completed`, `in_progress` or `incomplete`.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the output message, which is always `message`.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "content",
                            "role",
                            "type"
                          ],
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "description": "A tool call to run a function.",
                          "properties": {
                            "arguments": {
                              "description": "The arguments to pass to the function, as a JSON string.",
                              "type": "string"
                            },
                            "call_id": {
                              "description": "The unique ID of the function tool call generated by the model.",
                              "type": "string"
                            },
                            "id": {
                              "description": "The unique ID of the function tool call.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the function.",
                              "type": "string"
                            },
                            "status": {
                              "description": "Status of the item. One of `completed`, `in_progress` or `incomplete`.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the function tool call, which can be `\"function_call\"` for client-side tool calls,\nand `\"web_search_call\"` or `\"x_search_call\"` or `\"code_interpreter_call\"` or `\"mcp_call\"` for server-side tool calls.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "arguments",
                            "call_id",
                            "name",
                            "type"
                          ],
                          "type": "object"
                        }
                      ]
                    },
                    {
                      "allOf": [
                        {
                          "description": "The reasoning done by the model.",
                          "properties": {
                            "encrypted_content": {
                              "description": "The enrypted reasoning. Returned when `reasoning.encrypted_content` is passed in `include`.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "id": {
                              "description": "The unique ID of the reasoning content.",
                              "type": "string"
                            },
                            "status": {
                              "description": "Status of the item. One of `completed`, `in_progress` or `incomplete`.",
                              "type": "string"
                            },
                            "summary": {
                              "description": "The reasoning text contents.",
                              "items": {
                                "properties": {
                                  "text": {
                                    "description": "Reasoning done by the model.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the object, which is always `summary_text`.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "text",
                                  "type"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "type": {
                              "description": "The type of the object, which is always `reasoning`.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "summary",
                            "type"
                          ],
                          "type": "object"
                        }
                      ]
                    }
                  ]
                },
                "type": "array"
              },
              "parallel_tool_calls": {
                "description": "Whether to allow the model to run parallel tool calls.",
                "type": "boolean"
              },
              "previous_response_id": {
                "description": "The ID of the previous response from the model.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reasoning": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "description": "Reasoning configuration. Only for reasoning models.",
                    "properties": {
                      "effort": {
                        "default": "medium",
                        "description": "Constrains how hard a reasoning model thinks before responding. Possible values are `low` (uses fewer reasoning tokens), `medium` and `high` (uses more reasoning tokens).",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "generate_summary": {
                        "description": "Only included for compatibility.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "summary": {
                        "description": "A summary of the model's reasoning process. Possible values are `auto`, `concise` and `detailed`. Only included for compatibility. The model shall always return `detailed`.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "status": {
                "description": "Status of the response. One of `completed`, `in_progress` or `incomplete`.",
                "type": "string"
              },
              "store": {
                "default": true,
                "description": "Whether to store the input message(s) and model response for later retrieval.",
                "type": "boolean"
              },
              "temperature": {
                "default": 1,
                "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.",
                "format": "float",
                "maximum": 2,
                "minimum": 0,
                "type": [
                  "number",
                  "null"
                ]
              },
              "text": {
                "description": "Settings for customizing a text response from the model.",
                "properties": {
                  "format": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "description": "An object specifying the format that the model must output. Specify `{ \"type\": \"json_object\" }` for JSON output, or `{ \"type\": \"json_schema\", \"json_schema\": {...} }` for structured outputs. If `{ \\\"type\\\": \\\"text\\\" }`, the model will return a text response.",
                        "oneOf": [
                          {
                            "description": "Specify text response format, always `\"text\"`.",
                            "properties": {
                              "type": {
                                "enum": [
                                  "text"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Specify json_object response format, always `json_object`. Used for backward compatibility. Prefer to use `\"json_schema\"` instead of this.",
                            "properties": {
                              "type": {
                                "enum": [
                                  "json_object"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type"
                            ],
                            "type": "object"
                          },
                          {
                            "description": "Specify json_schema response format with a given schema. Type is always `\"json_schema\"`.",
                            "properties": {
                              "description": {
                                "description": "Only included for compatibility.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "name": {
                                "description": "Only included for compatibility.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "schema": {
                                "description": "A json schema representing the desired response schema."
                              },
                              "strict": {
                                "description": "Only included for compatibility.",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              },
                              "type": {
                                "enum": [
                                  "json_schema"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "schema",
                              "type"
                            ],
                            "type": "object"
                          }
                        ]
                      }
                    ]
                  }
                },
                "type": "object"
              },
              "tool_choice": {
                "description": "Controls which (if any) tool is called by the model. auto means the model can pick between generating a message or calling one or more tools. required means the model must call one or more tools. Specifying a particular tool via `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to call that tool. `none` is the default when no tools are present. `auto` is the default if tools are present.",
                "oneOf": [
                  {
                    "description": "Controls tool access by the model. `\"none\"` makes model ignore tools, `\"auto\"` let the model automatically decide whether to call a tool, `\"required\"` forces model to pick a tool to call.",
                    "type": "string"
                  },
                  {
                    "properties": {
                      "function": {
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "description": "Name of the function to use.",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": {
                        "description": "Type is always `\"function\"`.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "type": "object"
                  }
                ]
              },
              "tools": {
                "description": "A list of tools the model may call in JSON-schema. Currently, only functions and web search are supported as tools. A max of 128 tools are supported.",
                "items": {
                  "description": "Definition of one tool that the model can call.",
                  "oneOf": [
                    {
                      "allOf": [
                        {
                          "description": "Definition of the tool call made available to the model.",
                          "properties": {
                            "description": {
                              "description": "A description of the function to indicate to the model when to call it.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "The name of the function. If the model calls the function, this name is used in the\nresponse.",
                              "type": "string"
                            },
                            "parameters": {
                              "description": "A JSON schema describing the function parameters. The model _should_ follow the schema,\nhowever, this is not enforced at the moment."
                            },
                            "strict": {
                              "description": "Not supported. Only maintained for compatibility reasons.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          },
                          "required": [
                            "name",
                            "parameters"
                          ],
                          "type": "object"
                        },
                        {
                          "description": "A function that the model can call.",
                          "properties": {
                            "type": {
                              "enum": [
                                "function"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "type": "object"
                        }
                      ],
                      "description": "A function that the model can call."
                    },
                    {
                      "allOf": [
                        {
                          "properties": {
                            "filters": {
                              "description": "Only included for compatibility."
                            },
                            "search_context_size": {
                              "default": "medium",
                              "description": "This field included for compatibility reason with OpenAI's API. It is mapped to `max_search`.",
                              "example": "medium",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "user_location": {
                              "description": "Only included for compatibility."
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "allowed_domains": {
                              "description": "List of website domains to allow in the search results. This parameter act as a whitelist\nwhere only those websites can be selected. A maximum of 5 websites can be selected.\n\nNote: This parameter cannot be set with `excluded_domains`.",
                              "example": [
                                "wikipedia.com"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 5,
                              "type": [
                                "array",
                                "null"
                              ]
                            },
                            "enable_image_understanding": {
                              "description": "Enable image understanding during web search.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "excluded_domains": {
                              "description": "List of website domains to exclude from the search results without protocol specification or\nsubdomains. A maximum of 5 websites can be excluded.\n\nNote: This parameter cannot be set with `allowed_domains`",
                              "example": [
                                "wikipedia.com"
                              ],
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 5,
                              "type": [
                                "array",
                                "null"
                              ]
                            }
                          },
                          "type": "object"
                        },
                        {
                          "description": "Search the web.",
                          "properties": {
                            "type": {
                              "enum": [
                                "web_search"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "type": "object"
                        }
                      ],
                      "description": "Search the web."
                    },
                    {
                      "description": "Search X.",
                      "properties": {
                        "allowed_x_handles": {
                          "description": "List of X Handles of the users from whom to consider the posts.\n\nNote: This parameter cannot be set with `excluded_x_handles`.",
                          "example": [
                            "elonmusk"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 10,
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "enable_image_understanding": {
                          "description": "Enable image understanding during X search.",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "enable_video_understanding": {
                          "description": "Enable video understanding during X search.",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "excluded_x_handles": {
                          "description": "List of X Handles of the users from whom to exclude the posts.\n\nNote: This parameter cannot be set with `allowed_x_handles`.",
                          "example": [
                            "elonmusk"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 10,
                          "type": [
                            "array",
                            "null"
                          ]
                        },
                        "from_date": {
                          "description": "Date from which to consider the results in ISO-8601 YYYY-MM-DD. See\n<https://en.wikipedia.org/wiki/ISO_8601>.",
                          "example": "2024-06-24",
                          "format": "date",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "to_date": {
                          "description": "Date up to which to consider the results in ISO-8601 YYYY-MM-DD. See\n<https://en.wikipedia.org/wiki/ISO_8601>.",
                          "example": "2024-12-24",
                          "format": "date",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "type": {
                          "enum": [
                            "x_search"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Search the knowledge bases.",
                      "properties": {
                        "max_num_results": {
                          "example": 10,
                          "format": "int32",
                          "minimum": 1,
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "type": {
                          "enum": [
                            "file_search"
                          ],
                          "type": "string"
                        },
                        "vector_store_ids": {
                          "description": "List of vector store IDs to search within.",
                          "example": [
                            "collection_id_1",
                            "collection_id_2"
                          ],
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 10,
                          "type": "array"
                        }
                      },
                      "required": [
                        "vector_store_ids",
                        "type"
                      ],
                      "type": "object"
                    },
                    {
                      "description": "Execute code.",
                      "properties": {
                        "type": {
                          "enum": [
                            "code_interpreter"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  ]
                },
                "maxItems": 128,
                "type": "array"
              },
              "top_p": {
                "default": 1,
                "description": "An alternative to sampling with `temperature`, called nucleus sampling, where the model considers the results of the tokens with `top_p` probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. It is generally recommended to alter this or `temperature` but not both.",
                "exclusiveMinimum": 0,
                "format": "float",
                "maximum": 1,
                "type": [
                  "number",
                  "null"
                ]
              },
              "usage": {
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "description": "Token usage information.",
                    "properties": {
                      "input_tokens": {
                        "description": "Number of input tokens used.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "input_tokens_details": {
                        "description": "Breakdown of the input tokens.",
                        "properties": {
                          "cached_tokens": {
                            "description": "Token cached by xAI from previous requests and reused for this request.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "cached_tokens"
                        ],
                        "type": "object"
                      },
                      "num_server_side_tools_used": {
                        "description": "Number of server side tools used.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "num_sources_used": {
                        "description": "Number of sources used (for live search).",
                        "format": "int32",
                        "type": "integer"
                      },
                      "output_tokens": {
                        "description": "Number of output tokens used.",
                        "format": "int32",
                        "type": "integer"
                      },
                      "output_tokens_details": {
                        "description": "Breakdown of the output tokens.",
                        "properties": {
                          "reasoning_tokens": {
                            "description": "Tokens generated by the model for reasoning.",
                            "format": "int32",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "reasoning_tokens"
                        ],
                        "type": "object"
                      },
                      "total_tokens": {
                        "description": "Total tokens used.",
                        "format": "int32",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "input_tokens",
                      "input_tokens_details",
                      "output_tokens",
                      "output_tokens_details",
                      "total_tokens",
                      "num_sources_used",
                      "num_server_side_tools_used"
                    ],
                    "type": "object"
                  }
                ]
              },
              "user": {
                "description": "A unique identifier representing your end-user, which can help xAI to monitor and detect abuse.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "required": [
              "created_at",
              "id",
              "model",
              "object",
              "output",
              "parallel_tool_calls",
              "text",
              "tool_choice",
              "tools",
              "status",
              "store",
              "metadata"
            ],
            "type": "object"
          }
        }
      },
      "description": "Success"
    },
    "400": {
      "description": "Bad request. The request is invalid or an invalid API key is provided."
    },
    "422": {
      "description": "Unprocessable Entity. There are missing fields in the request body."
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "summary": "Generates a response based on text or image prompts. The response ID can be used to retrieve the response later or to continue the conversation without repeating prior context. New responses will be stored for 30 days and then permanently deleted.",
  "tags": [
    "v1"
  ]
}
