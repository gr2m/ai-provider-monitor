{
  "description": "Retrieves a run.",
  "operationId": "getRun",
  "parameters": [
    {
      "description": "The ID of the [thread](https://platform.openai.com/docs/api-reference/threads) that was run.",
      "in": "path",
      "name": "thread_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The ID of the run to retrieve.",
      "in": "path",
      "name": "run_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Represents an execution run on a [thread](https://platform.openai.com/docs/api-reference/threads).",
            "properties": {
              "assistant_id": {
                "description": "The ID of the [assistant](https://platform.openai.com/docs/api-reference/assistants) used for execution of this run.",
                "type": "string"
              },
              "cancelled_at": {
                "description": "The Unix timestamp (in seconds) for when the run was cancelled.",
                "nullable": true,
                "type": "integer"
              },
              "completed_at": {
                "description": "The Unix timestamp (in seconds) for when the run was completed.",
                "nullable": true,
                "type": "integer"
              },
              "created_at": {
                "description": "The Unix timestamp (in seconds) for when the run was created.",
                "type": "integer"
              },
              "expires_at": {
                "description": "The Unix timestamp (in seconds) for when the run will expire.",
                "nullable": true,
                "type": "integer"
              },
              "failed_at": {
                "description": "The Unix timestamp (in seconds) for when the run failed.",
                "nullable": true,
                "type": "integer"
              },
              "id": {
                "description": "The identifier, which can be referenced in API endpoints.",
                "type": "string"
              },
              "incomplete_details": {
                "description": "Details on why the run is incomplete. Will be `null` if the run is not incomplete.",
                "nullable": true,
                "properties": {
                  "reason": {
                    "description": "The reason why the run is incomplete. This will point to which specific token limit was reached over the course of the run.",
                    "enum": [
                      "max_completion_tokens",
                      "max_prompt_tokens"
                    ],
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "instructions": {
                "description": "The instructions that the [assistant](https://platform.openai.com/docs/api-reference/assistants) used for this run.",
                "type": "string"
              },
              "last_error": {
                "description": "The last error associated with this run. Will be `null` if there are no errors.",
                "nullable": true,
                "properties": {
                  "code": {
                    "description": "One of `server_error`, `rate_limit_exceeded`, or `invalid_prompt`.",
                    "enum": [
                      "server_error",
                      "rate_limit_exceeded",
                      "invalid_prompt"
                    ],
                    "type": "string"
                  },
                  "message": {
                    "description": "A human-readable description of the error.",
                    "type": "string"
                  }
                },
                "required": [
                  "code",
                  "message"
                ],
                "type": "object"
              },
              "max_completion_tokens": {
                "description": "The maximum number of completion tokens specified to have been used over the course of the run.\n",
                "minimum": 256,
                "nullable": true,
                "type": "integer"
              },
              "max_prompt_tokens": {
                "description": "The maximum number of prompt tokens specified to have been used over the course of the run.\n",
                "minimum": 256,
                "nullable": true,
                "type": "integer"
              },
              "metadata": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "model": {
                "description": "The model that the [assistant](https://platform.openai.com/docs/api-reference/assistants) used for this run.",
                "type": "string"
              },
              "object": {
                "description": "The object type, which is always `thread.run`.",
                "enum": [
                  "thread.run"
                ],
                "type": "string"
              },
              "parallel_tool_calls": {
                "default": true,
                "description": "Whether to enable [parallel function calling](https://platform.openai.com/docs/guides/function-calling#configuring-parallel-function-calling) during tool use.",
                "type": "boolean"
              },
              "required_action": {
                "description": "Details on the action required to continue the run. Will be `null` if no action is required.",
                "nullable": true,
                "properties": {
                  "submit_tool_outputs": {
                    "description": "Details on the tool outputs needed for this run to continue.",
                    "properties": {
                      "tool_calls": {
                        "description": "A list of the relevant tool calls.",
                        "items": {
                          "description": "Tool call objects",
                          "properties": {
                            "function": {
                              "description": "The function definition.",
                              "properties": {
                                "arguments": {
                                  "description": "The arguments that the model expects you to pass to the function.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The name of the function.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "arguments"
                              ],
                              "type": "object"
                            },
                            "id": {
                              "description": "The ID of the tool call. This ID must be referenced when you submit the tool outputs in using the [Submit tool outputs to run](https://platform.openai.com/docs/api-reference/runs/submitToolOutputs) endpoint.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of tool call the output is required for. For now, this is always `function`.",
                              "enum": [
                                "function"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "type",
                            "function"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "tool_calls"
                    ],
                    "type": "object"
                  },
                  "type": {
                    "description": "For now, this is always `submit_tool_outputs`.",
                    "enum": [
                      "submit_tool_outputs"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "submit_tool_outputs"
                ],
                "type": "object"
              },
              "response_format": {
                "anyOf": [
                  {
                    "description": "`auto` is the default value\n",
                    "enum": [
                      "auto"
                    ],
                    "type": "string"
                  },
                  {
                    "description": "Default response format. Used to generate text responses.\n",
                    "properties": {
                      "type": {
                        "description": "The type of response format being defined. Always `text`.",
                        "enum": [
                          "text"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "Text",
                    "type": "object"
                  },
                  {
                    "description": "JSON object response format. An older method of generating JSON responses.\nUsing `json_schema` is recommended for models that support it. Note that the\nmodel will not generate JSON without a system or user message instructing it\nto do so.\n",
                    "properties": {
                      "type": {
                        "description": "The type of response format being defined. Always `json_object`.",
                        "enum": [
                          "json_object"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "JSON object",
                    "type": "object"
                  },
                  {
                    "description": "JSON Schema response format. Used to generate structured JSON responses.\nLearn more about [Structured Outputs](https://platform.openai.com/docs/guides/structured-outputs).\n",
                    "properties": {
                      "json_schema": {
                        "description": "Structured Outputs configuration options, including a JSON Schema.\n",
                        "properties": {
                          "description": {
                            "description": "A description of what the response format is for, used by the model to\ndetermine how to respond in the format.\n",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the response format. Must be a-z, A-Z, 0-9, or contain\nunderscores and dashes, with a maximum length of 64.\n",
                            "type": "string"
                          },
                          "schema": {
                            "additionalProperties": true,
                            "description": "The schema for the response format, described as a JSON Schema object.\nLearn how to build JSON schemas [here](https://json-schema.org/).\n",
                            "title": "JSON schema",
                            "type": "object"
                          },
                          "strict": {
                            "anyOf": [
                              {
                                "default": false,
                                "description": "Whether to enable strict schema adherence when generating the output.\nIf set to true, the model will always follow the exact schema defined\nin the `schema` field. Only a subset of JSON Schema is supported when\n`strict` is `true`. To learn more, read the [Structured Outputs\nguide](https://platform.openai.com/docs/guides/structured-outputs).\n",
                                "type": "boolean"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "title": "JSON schema",
                        "type": "object"
                      },
                      "type": {
                        "description": "The type of response format being defined. Always `json_schema`.",
                        "enum": [
                          "json_schema"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "json_schema"
                    ],
                    "title": "JSON schema",
                    "type": "object"
                  }
                ],
                "description": "Specifies the format that the model must output. Compatible with [GPT-4o](https://platform.openai.com/docs/models#gpt-4o), [GPT-4 Turbo](https://platform.openai.com/docs/models#gpt-4-turbo-and-gpt-4), and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.\n\nSetting to `{ \"type\": \"json_schema\", \"json_schema\": {...} }` enables Structured Outputs which ensures the model will match your supplied JSON schema. Learn more in the [Structured Outputs guide](https://platform.openai.com/docs/guides/structured-outputs).\n\nSetting to `{ \"type\": \"json_object\" }` enables JSON mode, which ensures the message the model generates is valid JSON.\n\n**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly \"stuck\" request. Also note that the message content may be partially cut off if `finish_reason=\"length\"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.\n",
                "nullable": true
              },
              "started_at": {
                "description": "The Unix timestamp (in seconds) for when the run was started.",
                "nullable": true,
                "type": "integer"
              },
              "status": {
                "description": "The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, `incomplete`, or `expired`.",
                "enum": [
                  "queued",
                  "in_progress",
                  "requires_action",
                  "cancelling",
                  "cancelled",
                  "failed",
                  "completed",
                  "incomplete",
                  "expired"
                ],
                "type": "string"
              },
              "temperature": {
                "description": "The sampling temperature used for this run. If not set, defaults to 1.",
                "nullable": true,
                "type": "number"
              },
              "thread_id": {
                "description": "The ID of the [thread](https://platform.openai.com/docs/api-reference/threads) that was executed on as a part of this run.",
                "type": "string"
              },
              "tool_choice": {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "description": "`none` means the model will not call any tools and instead generates a message. `auto` means the model can pick between generating a message or calling one or more tools. `required` means the model must call one or more tools before responding to the user.\n",
                        "enum": [
                          "none",
                          "auto",
                          "required"
                        ],
                        "title": "Auto",
                        "type": "string"
                      },
                      {
                        "description": "Specifies a tool the model should use. Use to force the model to call a specific tool.",
                        "properties": {
                          "function": {
                            "properties": {
                              "name": {
                                "description": "The name of the function to call.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": {
                            "description": "The type of the tool. If type is `function`, the function name must be set",
                            "enum": [
                              "function",
                              "code_interpreter",
                              "file_search"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "Controls which (if any) tool is called by the model.\n`none` means the model will not call any tools and instead generates a message.\n`auto` is the default value and means the model can pick between generating a message or calling one or more tools.\n`required` means the model must call one or more tools before responding to the user.\nSpecifying a particular tool like `{\"type\": \"file_search\"}` or `{\"type\": \"function\", \"function\": {\"name\": \"my_function\"}}` forces the model to call that tool.\n"
                  },
                  {
                    "nullable": true
                  }
                ]
              },
              "tools": {
                "default": [],
                "description": "The list of tools that the [assistant](https://platform.openai.com/docs/api-reference/assistants) used for this run.",
                "items": {
                  "anyOf": [
                    {
                      "properties": {
                        "type": {
                          "description": "The type of tool being defined: `code_interpreter`",
                          "enum": [
                            "code_interpreter"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "Code interpreter tool",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "file_search": {
                          "description": "Overrides for the file search tool.",
                          "properties": {
                            "max_num_results": {
                              "description": "The maximum number of results the file search tool should output. The default is 20 for `gpt-4*` models and 5 for `gpt-3.5-turbo`. This number should be between 1 and 50 inclusive.\n\nNote that the file search tool may output fewer than `max_num_results` results. See the [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings) for more information.\n",
                              "maximum": 50,
                              "minimum": 1,
                              "type": "integer"
                            },
                            "ranking_options": {
                              "description": "The ranking options for the file search. If not specified, the file search tool will use the `auto` ranker and a score_threshold of 0.\n\nSee the [file search tool documentation](https://platform.openai.com/docs/assistants/tools/file-search#customizing-file-search-settings) for more information.\n",
                              "properties": {
                                "ranker": {
                                  "description": "The ranker to use for the file search. If not specified will use the `auto` ranker.",
                                  "enum": [
                                    "auto",
                                    "default_2024_08_21"
                                  ],
                                  "type": "string"
                                },
                                "score_threshold": {
                                  "description": "The score threshold for the file search. All values must be a floating point number between 0 and 1.",
                                  "maximum": 1,
                                  "minimum": 0,
                                  "type": "number"
                                }
                              },
                              "required": [
                                "score_threshold"
                              ],
                              "title": "File search tool call ranking options",
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "The type of tool being defined: `file_search`",
                          "enum": [
                            "file_search"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "title": "FileSearch tool",
                      "type": "object"
                    },
                    {
                      "properties": {
                        "function": {
                          "properties": {
                            "description": {
                              "description": "A description of what the function does, used by the model to choose when and how to call the function.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.",
                              "type": "string"
                            },
                            "parameters": {
                              "additionalProperties": true,
                              "description": "The parameters the functions accepts, described as a JSON Schema object. See the [guide](https://platform.openai.com/docs/guides/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format. \n\nOmitting `parameters` defines a function with an empty parameter list.",
                              "type": "object"
                            },
                            "strict": {
                              "anyOf": [
                                {
                                  "default": false,
                                  "description": "Whether to enable strict schema adherence when generating the function call. If set to true, the model will follow the exact schema defined in the `parameters` field. Only a subset of JSON Schema is supported when `strict` is `true`. Learn more about Structured Outputs in the [function calling guide](https://platform.openai.com/docs/guides/function-calling).",
                                  "type": "boolean"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object"
                        },
                        "type": {
                          "description": "The type of tool being defined: `function`",
                          "enum": [
                            "function"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "function"
                      ],
                      "title": "Function tool",
                      "type": "object"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "type"
                  }
                },
                "maxItems": 20,
                "type": "array"
              },
              "top_p": {
                "description": "The nucleus sampling value used for this run. If not set, defaults to 1.",
                "nullable": true,
                "type": "number"
              },
              "truncation_strategy": {
                "allOf": [
                  {
                    "description": "Controls for how a thread will be truncated prior to the run. Use this to control the initial context window of the run.",
                    "properties": {
                      "last_messages": {
                        "anyOf": [
                          {
                            "description": "The number of most recent messages from the thread when constructing the context for the run.",
                            "minimum": 1,
                            "type": "integer"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "type": {
                        "description": "The truncation strategy to use for the thread. The default is `auto`. If set to `last_messages`, the thread will be truncated to the n most recent messages in the thread. When set to `auto`, messages in the middle of the thread will be dropped to fit the context length of the model, `max_prompt_tokens`.",
                        "enum": [
                          "auto",
                          "last_messages"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ],
                    "title": "Thread Truncation Controls",
                    "type": "object"
                  },
                  {
                    "nullable": true
                  }
                ]
              },
              "usage": {
                "anyOf": [
                  {
                    "description": "Usage statistics related to the run. This value will be `null` if the run is not in a terminal state (i.e. `in_progress`, `queued`, etc.).",
                    "properties": {
                      "completion_tokens": {
                        "description": "Number of completion tokens used over the course of the run.",
                        "type": "integer"
                      },
                      "prompt_tokens": {
                        "description": "Number of prompt tokens used over the course of the run.",
                        "type": "integer"
                      },
                      "total_tokens": {
                        "description": "Total number of tokens used (prompt + completion).",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "prompt_tokens",
                      "completion_tokens",
                      "total_tokens"
                    ],
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "required": [
              "id",
              "object",
              "created_at",
              "thread_id",
              "assistant_id",
              "status",
              "required_action",
              "last_error",
              "expires_at",
              "started_at",
              "cancelled_at",
              "failed_at",
              "completed_at",
              "model",
              "instructions",
              "tools",
              "metadata",
              "usage",
              "incomplete_details",
              "max_prompt_tokens",
              "max_completion_tokens",
              "truncation_strategy",
              "tool_choice",
              "parallel_tool_calls",
              "response_format"
            ],
            "title": "A run on a thread",
            "type": "object"
          }
        }
      },
      "description": "OK"
    }
  },
  "summary": "Retrieve run",
  "tags": [
    "Assistants"
  ]
}
