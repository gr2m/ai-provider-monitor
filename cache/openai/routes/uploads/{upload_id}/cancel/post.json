{
  "description": "Cancels the Upload. No Parts may be added after an Upload is cancelled.\n",
  "operationId": "cancelUpload",
  "parameters": [
    {
      "description": "The ID of the Upload.\n",
      "in": "path",
      "name": "upload_id",
      "required": true,
      "schema": {
        "example": "upload_abc123",
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "The Upload object can accept byte chunks in the form of Parts.\n",
            "properties": {
              "bytes": {
                "description": "The intended number of bytes to be uploaded.",
                "type": "integer"
              },
              "created_at": {
                "description": "The Unix timestamp (in seconds) for when the Upload was created.",
                "type": "integer"
              },
              "expires_at": {
                "description": "The Unix timestamp (in seconds) for when the Upload will expire.",
                "type": "integer"
              },
              "file": {
                "allOf": [
                  {
                    "description": "The `File` object represents a document that has been uploaded to OpenAI.",
                    "properties": {
                      "bytes": {
                        "description": "The size of the file, in bytes.",
                        "type": "integer"
                      },
                      "created_at": {
                        "description": "The Unix timestamp (in seconds) for when the file was created.",
                        "type": "integer"
                      },
                      "expires_at": {
                        "description": "The Unix timestamp (in seconds) for when the file will expire.",
                        "type": "integer"
                      },
                      "filename": {
                        "description": "The name of the file.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The file identifier, which can be referenced in the API endpoints.",
                        "type": "string"
                      },
                      "object": {
                        "description": "The object type, which is always `file`.",
                        "enum": [
                          "file"
                        ],
                        "type": "string"
                      },
                      "purpose": {
                        "description": "The intended purpose of the file. Supported values are `assistants`, `assistants_output`, `batch`, `batch_output`, `fine-tune`, `fine-tune-results`, `vision`, and `user_data`.",
                        "enum": [
                          "assistants",
                          "assistants_output",
                          "batch",
                          "batch_output",
                          "fine-tune",
                          "fine-tune-results",
                          "vision",
                          "user_data"
                        ],
                        "type": "string"
                      },
                      "status": {
                        "deprecated": true,
                        "description": "Deprecated. The current status of the file, which can be either `uploaded`, `processed`, or `error`.",
                        "enum": [
                          "uploaded",
                          "processed",
                          "error"
                        ],
                        "type": "string"
                      },
                      "status_details": {
                        "deprecated": true,
                        "description": "Deprecated. For details on why a fine-tuning training file failed validation, see the `error` field on `fine_tuning.job`.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "object",
                      "bytes",
                      "created_at",
                      "filename",
                      "purpose",
                      "status"
                    ],
                    "title": "OpenAIFile"
                  },
                  {
                    "description": "The ready File object after the Upload is completed.",
                    "nullable": true
                  }
                ]
              },
              "filename": {
                "description": "The name of the file to be uploaded.",
                "type": "string"
              },
              "id": {
                "description": "The Upload unique identifier, which can be referenced in API endpoints.",
                "type": "string"
              },
              "object": {
                "description": "The object type, which is always \"upload\".",
                "enum": [
                  "upload"
                ],
                "type": "string"
              },
              "purpose": {
                "description": "The intended purpose of the file. [Please refer here](https://platform.openai.com/docs/api-reference/files/object#files/object-purpose) for acceptable values.",
                "type": "string"
              },
              "status": {
                "description": "The status of the Upload.",
                "enum": [
                  "pending",
                  "completed",
                  "cancelled",
                  "expired"
                ],
                "type": "string"
              }
            },
            "required": [
              "bytes",
              "created_at",
              "expires_at",
              "filename",
              "id",
              "purpose",
              "status",
              "object"
            ],
            "title": "Upload",
            "type": "object"
          }
        }
      },
      "description": "OK"
    }
  },
  "summary": "Cancel upload",
  "tags": [
    "Uploads"
  ]
}
