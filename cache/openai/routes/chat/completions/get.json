{
  "description": "List stored Chat Completions. Only Chat Completions that have been stored\nwith the `store` parameter set to `true` will be returned.\n",
  "operationId": "listChatCompletions",
  "parameters": [
    {
      "description": "The model used to generate the Chat Completions.",
      "in": "query",
      "name": "model",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A list of metadata keys to filter the Chat Completions by. Example:\n\n`metadata[key1]=value1&metadata[key2]=value2`\n",
      "in": "query",
      "name": "metadata",
      "required": false,
      "schema": {
        "anyOf": [
          {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
            "type": "object"
          },
          {
            "type": "null"
          }
        ]
      }
    },
    {
      "description": "Identifier for the last chat completion from the previous pagination request.",
      "in": "query",
      "name": "after",
      "required": false,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "Number of Chat Completions to retrieve.",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "default": 20,
        "type": "integer"
      }
    },
    {
      "description": "Sort order for Chat Completions by timestamp. Use `asc` for ascending order or `desc` for descending order. Defaults to `asc`.",
      "in": "query",
      "name": "order",
      "required": false,
      "schema": {
        "default": "asc",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "An object representing a list of Chat Completions.\n",
            "properties": {
              "data": {
                "description": "An array of chat completion objects.\n",
                "items": {
                  "description": "Represents a chat completion response returned by model, based on the provided input.",
                  "properties": {
                    "choices": {
                      "description": "A list of chat completion choices. Can be more than one if `n` is greater than 1.",
                      "items": {
                        "properties": {
                          "finish_reason": {
                            "description": "The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,\n`length` if the maximum number of tokens specified in the request was reached,\n`content_filter` if content was omitted due to a flag from our content filters,\n`tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.\n",
                            "enum": [
                              "stop",
                              "length",
                              "tool_calls",
                              "content_filter",
                              "function_call"
                            ],
                            "type": "string"
                          },
                          "index": {
                            "description": "The index of the choice in the list of choices.",
                            "type": "integer"
                          },
                          "logprobs": {
                            "anyOf": [
                              {
                                "description": "Log probability information for the choice.",
                                "properties": {
                                  "content": {
                                    "anyOf": [
                                      {
                                        "description": "A list of message content tokens with log probability information.",
                                        "items": {
                                          "properties": {
                                            "bytes": {
                                              "anyOf": [
                                                {
                                                  "description": "A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.",
                                                  "items": {
                                                    "type": "integer"
                                                  },
                                                  "type": "array"
                                                },
                                                {
                                                  "type": "null"
                                                }
                                              ]
                                            },
                                            "logprob": {
                                              "description": "The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.",
                                              "type": "number"
                                            },
                                            "token": {
                                              "description": "The token.",
                                              "type": "string"
                                            },
                                            "top_logprobs": {
                                              "description": "List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned.",
                                              "items": {
                                                "properties": {
                                                  "bytes": {
                                                    "anyOf": [
                                                      {
                                                        "description": "A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.",
                                                        "items": {
                                                          "type": "integer"
                                                        },
                                                        "type": "array"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ]
                                                  },
                                                  "logprob": {
                                                    "description": "The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.",
                                                    "type": "number"
                                                  },
                                                  "token": {
                                                    "description": "The token.",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "token",
                                                  "logprob",
                                                  "bytes"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "token",
                                            "logprob",
                                            "bytes",
                                            "top_logprobs"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "refusal": {
                                    "anyOf": [
                                      {
                                        "description": "A list of message refusal tokens with log probability information.",
                                        "items": {
                                          "properties": {
                                            "bytes": {
                                              "anyOf": [
                                                {
                                                  "description": "A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.",
                                                  "items": {
                                                    "type": "integer"
                                                  },
                                                  "type": "array"
                                                },
                                                {
                                                  "type": "null"
                                                }
                                              ]
                                            },
                                            "logprob": {
                                              "description": "The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.",
                                              "type": "number"
                                            },
                                            "token": {
                                              "description": "The token.",
                                              "type": "string"
                                            },
                                            "top_logprobs": {
                                              "description": "List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned.",
                                              "items": {
                                                "properties": {
                                                  "bytes": {
                                                    "anyOf": [
                                                      {
                                                        "description": "A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.",
                                                        "items": {
                                                          "type": "integer"
                                                        },
                                                        "type": "array"
                                                      },
                                                      {
                                                        "type": "null"
                                                      }
                                                    ]
                                                  },
                                                  "logprob": {
                                                    "description": "The log probability of this token, if it is within the top 20 most likely tokens. Otherwise, the value `-9999.0` is used to signify that the token is very unlikely.",
                                                    "type": "number"
                                                  },
                                                  "token": {
                                                    "description": "The token.",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "token",
                                                  "logprob",
                                                  "bytes"
                                                ],
                                                "type": "object"
                                              },
                                              "type": "array"
                                            }
                                          },
                                          "required": [
                                            "token",
                                            "logprob",
                                            "bytes",
                                            "top_logprobs"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "content",
                                  "refusal"
                                ],
                                "type": "object"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "message": {
                            "description": "A chat completion message generated by the model.",
                            "properties": {
                              "annotations": {
                                "description": "Annotations for the message, when applicable, as when using the\n[web search tool](https://platform.openai.com/docs/guides/tools-web-search?api-mode=chat).\n",
                                "items": {
                                  "description": "A URL citation when using web search.\n",
                                  "properties": {
                                    "type": {
                                      "description": "The type of the URL citation. Always `url_citation`.",
                                      "enum": [
                                        "url_citation"
                                      ],
                                      "type": "string"
                                    },
                                    "url_citation": {
                                      "description": "A URL citation when using web search.",
                                      "properties": {
                                        "end_index": {
                                          "description": "The index of the last character of the URL citation in the message.",
                                          "type": "integer"
                                        },
                                        "start_index": {
                                          "description": "The index of the first character of the URL citation in the message.",
                                          "type": "integer"
                                        },
                                        "title": {
                                          "description": "The title of the web resource.",
                                          "type": "string"
                                        },
                                        "url": {
                                          "description": "The URL of the web resource.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "end_index",
                                        "start_index",
                                        "url",
                                        "title"
                                      ],
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "url_citation"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "audio": {
                                "anyOf": [
                                  {
                                    "description": "If the audio output modality is requested, this object contains data\nabout the audio response from the model. [Learn more](https://platform.openai.com/docs/guides/audio).\n",
                                    "properties": {
                                      "data": {
                                        "description": "Base64 encoded audio bytes generated by the model, in the format\nspecified in the request.\n",
                                        "type": "string"
                                      },
                                      "expires_at": {
                                        "description": "The Unix timestamp (in seconds) for when this audio response will\nno longer be accessible on the server for use in multi-turn\nconversations.\n",
                                        "type": "integer"
                                      },
                                      "id": {
                                        "description": "Unique identifier for this audio response.",
                                        "type": "string"
                                      },
                                      "transcript": {
                                        "description": "Transcript of the audio generated by the model.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "expires_at",
                                      "data",
                                      "transcript"
                                    ],
                                    "type": "object"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "content": {
                                "anyOf": [
                                  {
                                    "description": "The contents of the message.",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "function_call": {
                                "deprecated": true,
                                "description": "Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.",
                                "properties": {
                                  "arguments": {
                                    "description": "The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the function to call.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "arguments"
                                ],
                                "type": "object"
                              },
                              "refusal": {
                                "anyOf": [
                                  {
                                    "description": "The refusal message generated by the model.",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "role": {
                                "description": "The role of the author of this message.",
                                "enum": [
                                  "assistant"
                                ],
                                "type": "string"
                              },
                              "tool_calls": {
                                "description": "The tool calls generated by the model, such as function calls.",
                                "items": {
                                  "anyOf": [
                                    {
                                      "description": "A call to a function tool created by the model.\n",
                                      "properties": {
                                        "function": {
                                          "description": "The function that the model called.",
                                          "properties": {
                                            "arguments": {
                                              "description": "The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "The name of the function to call.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "arguments"
                                          ],
                                          "type": "object"
                                        },
                                        "id": {
                                          "description": "The ID of the tool call.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "The type of the tool. Currently, only `function` is supported.",
                                          "enum": [
                                            "function"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type",
                                        "function"
                                      ],
                                      "title": "Function tool call",
                                      "type": "object"
                                    },
                                    {
                                      "description": "A call to a custom tool created by the model.\n",
                                      "properties": {
                                        "custom": {
                                          "description": "The custom tool that the model called.",
                                          "properties": {
                                            "input": {
                                              "description": "The input for the custom tool call generated by the model.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "The name of the custom tool to call.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "name",
                                            "input"
                                          ],
                                          "type": "object"
                                        },
                                        "id": {
                                          "description": "The ID of the tool call.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "The type of the tool. Always `custom`.",
                                          "enum": [
                                            "custom"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "type",
                                        "custom"
                                      ],
                                      "title": "Custom tool call",
                                      "type": "object"
                                    }
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "required": [
                              "role",
                              "content",
                              "refusal"
                            ],
                            "type": "object"
                          }
                        },
                        "required": [
                          "finish_reason",
                          "index",
                          "message",
                          "logprobs"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "created": {
                      "description": "The Unix timestamp (in seconds) of when the chat completion was created.",
                      "type": "integer"
                    },
                    "id": {
                      "description": "A unique identifier for the chat completion.",
                      "type": "string"
                    },
                    "model": {
                      "description": "The model used for the chat completion.",
                      "type": "string"
                    },
                    "object": {
                      "description": "The object type, which is always `chat.completion`.",
                      "enum": [
                        "chat.completion"
                      ],
                      "type": "string"
                    },
                    "service_tier": {
                      "anyOf": [
                        {
                          "default": "auto",
                          "description": "Specifies the processing type used for serving the request.\n  - If set to 'auto', then the request will be processed with the service tier configured in the Project settings. Unless otherwise configured, the Project will use 'default'.\n  - If set to 'default', then the request will be processed with the standard pricing and performance for the selected model.\n  - If set to '[flex](https://platform.openai.com/docs/guides/flex-processing)' or '[priority](https://openai.com/api-priority-processing/)', then the request will be processed with the corresponding service tier.\n  - When not set, the default behavior is 'auto'.\n\n  When the `service_tier` parameter is set, the response body will include the `service_tier` value based on the processing mode actually used to serve the request. This response value may be different from the value set in the parameter.\n",
                          "enum": [
                            "auto",
                            "default",
                            "flex",
                            "scale",
                            "priority"
                          ],
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "system_fingerprint": {
                      "deprecated": true,
                      "description": "This fingerprint represents the backend configuration that the model runs with.\n\nCan be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.\n",
                      "type": "string"
                    },
                    "usage": {
                      "description": "Usage statistics for the completion request.",
                      "properties": {
                        "completion_tokens": {
                          "default": 0,
                          "description": "Number of tokens in the generated completion.",
                          "type": "integer"
                        },
                        "completion_tokens_details": {
                          "description": "Breakdown of tokens used in a completion.",
                          "properties": {
                            "accepted_prediction_tokens": {
                              "default": 0,
                              "description": "When using Predicted Outputs, the number of tokens in the\nprediction that appeared in the completion.\n",
                              "type": "integer"
                            },
                            "audio_tokens": {
                              "default": 0,
                              "description": "Audio input tokens generated by the model.",
                              "type": "integer"
                            },
                            "reasoning_tokens": {
                              "default": 0,
                              "description": "Tokens generated by the model for reasoning.",
                              "type": "integer"
                            },
                            "rejected_prediction_tokens": {
                              "default": 0,
                              "description": "When using Predicted Outputs, the number of tokens in the\nprediction that did not appear in the completion. However, like\nreasoning tokens, these tokens are still counted in the total\ncompletion tokens for purposes of billing, output, and context window\nlimits.\n",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "prompt_tokens": {
                          "default": 0,
                          "description": "Number of tokens in the prompt.",
                          "type": "integer"
                        },
                        "prompt_tokens_details": {
                          "description": "Breakdown of tokens used in the prompt.",
                          "properties": {
                            "audio_tokens": {
                              "default": 0,
                              "description": "Audio input tokens present in the prompt.",
                              "type": "integer"
                            },
                            "cached_tokens": {
                              "default": 0,
                              "description": "Cached tokens present in the prompt.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "total_tokens": {
                          "default": 0,
                          "description": "Total number of tokens used in the request (prompt + completion).",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "prompt_tokens",
                        "completion_tokens",
                        "total_tokens"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "choices",
                    "created",
                    "id",
                    "model",
                    "object"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "first_id": {
                "description": "The identifier of the first chat completion in the data array.",
                "type": "string"
              },
              "has_more": {
                "description": "Indicates whether there are more Chat Completions available.",
                "type": "boolean"
              },
              "last_id": {
                "description": "The identifier of the last chat completion in the data array.",
                "type": "string"
              },
              "object": {
                "default": "list",
                "description": "The type of this object. It is always set to \"list\".\n",
                "enum": [
                  "list"
                ],
                "type": "string"
              }
            },
            "required": [
              "object",
              "data",
              "first_id",
              "last_id",
              "has_more"
            ],
            "title": "ChatCompletionList",
            "type": "object"
          }
        }
      },
      "description": "A list of Chat Completions"
    }
  },
  "summary": "List Chat Completions",
  "tags": [
    "Chat"
  ]
}
