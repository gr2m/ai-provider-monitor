{
  "description": "Create a conversation.",
  "operationId": "createConversation",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "description": "Create a conversation",
          "properties": {
            "items": {
              "anyOf": [
                {
                  "description": "Initial items to include in the conversation context.\nYou may add up to 20 items at a time.\n",
                  "items": {
                    "anyOf": [
                      {
                        "description": "A message input to the model with a role indicating instruction following\nhierarchy. Instructions given with the `developer` or `system` role take\nprecedence over instructions given with the `user` role. Messages with the\n`assistant` role are presumed to have been generated by the model in previous\ninteractions.\n",
                        "properties": {
                          "content": {
                            "anyOf": [
                              {
                                "description": "A text input to the model.\n",
                                "title": "Text input",
                                "type": "string"
                              },
                              {
                                "description": "A list of one or many input items to the model, containing different content \ntypes.\n",
                                "items": {
                                  "anyOf": [
                                    {
                                      "description": "A text input to the model.",
                                      "properties": {
                                        "text": {
                                          "description": "The text input to the model.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "input_text",
                                          "description": "The type of the input item. Always `input_text`.",
                                          "enum": [
                                            "input_text"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "text"
                                      ],
                                      "title": "Input text",
                                      "type": "object"
                                    },
                                    {
                                      "description": "An image input to the model. Learn about [image inputs](https://platform.openai.com/docs/guides/vision).",
                                      "properties": {
                                        "detail": {
                                          "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.",
                                          "enum": [
                                            "low",
                                            "high",
                                            "auto"
                                          ],
                                          "type": "string"
                                        },
                                        "file_id": {
                                          "anyOf": [
                                            {
                                              "description": "The ID of the file to be sent to the model.",
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "image_url": {
                                          "anyOf": [
                                            {
                                              "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.",
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "type": {
                                          "default": "input_image",
                                          "description": "The type of the input item. Always `input_image`.",
                                          "enum": [
                                            "input_image"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "detail"
                                      ],
                                      "title": "Input image",
                                      "type": "object"
                                    },
                                    {
                                      "description": "A file input to the model.",
                                      "properties": {
                                        "file_data": {
                                          "description": "The content of the file to be sent to the model.\n",
                                          "type": "string"
                                        },
                                        "file_id": {
                                          "anyOf": [
                                            {
                                              "description": "The ID of the file to be sent to the model.",
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "file_url": {
                                          "description": "The URL of the file to be sent to the model.",
                                          "type": "string"
                                        },
                                        "filename": {
                                          "description": "The name of the file to be sent to the model.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "input_file",
                                          "description": "The type of the input item. Always `input_file`.",
                                          "enum": [
                                            "input_file"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Input file",
                                      "type": "object"
                                    },
                                    {
                                      "description": "An audio input to the model.\n",
                                      "properties": {
                                        "input_audio": {
                                          "properties": {
                                            "data": {
                                              "description": "Base64-encoded audio data.\n",
                                              "type": "string"
                                            },
                                            "format": {
                                              "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.\n",
                                              "enum": [
                                                "mp3",
                                                "wav"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "data",
                                            "format"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the input item. Always `input_audio`.\n",
                                          "enum": [
                                            "input_audio"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "input_audio"
                                      ],
                                      "title": "Input audio",
                                      "type": "object"
                                    }
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  }
                                },
                                "title": "Input item content list",
                                "type": "array"
                              }
                            ],
                            "description": "Text, image, or audio input to the model, used to generate a response.\nCan also contain previous assistant responses.\n"
                          },
                          "role": {
                            "description": "The role of the message input. One of `user`, `assistant`, `system`, or\n`developer`.\n",
                            "enum": [
                              "user",
                              "assistant",
                              "system",
                              "developer"
                            ],
                            "type": "string"
                          },
                          "type": {
                            "description": "The type of the message input. Always `message`.\n",
                            "enum": [
                              "message"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "role",
                          "content"
                        ],
                        "title": "Input message",
                        "type": "object"
                      },
                      {
                        "description": "An item representing part of the context for the response to be\ngenerated by the model. Can contain text, images, and audio inputs,\nas well as previous assistant responses and tool call outputs.\n",
                        "title": "Item",
                        "type": "object",
                        "anyOf": [
                          {
                            "description": "A message input to the model with a role indicating instruction following\nhierarchy. Instructions given with the `developer` or `system` role take\nprecedence over instructions given with the `user` role.\n",
                            "properties": {
                              "content": {
                                "description": "A list of one or many input items to the model, containing different content \ntypes.\n",
                                "items": {
                                  "anyOf": [
                                    {
                                      "description": "A text input to the model.",
                                      "properties": {
                                        "text": {
                                          "description": "The text input to the model.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "input_text",
                                          "description": "The type of the input item. Always `input_text`.",
                                          "enum": [
                                            "input_text"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "text"
                                      ],
                                      "title": "Input text",
                                      "type": "object"
                                    },
                                    {
                                      "description": "An image input to the model. Learn about [image inputs](https://platform.openai.com/docs/guides/vision).",
                                      "properties": {
                                        "detail": {
                                          "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.",
                                          "enum": [
                                            "low",
                                            "high",
                                            "auto"
                                          ],
                                          "type": "string"
                                        },
                                        "file_id": {
                                          "anyOf": [
                                            {
                                              "description": "The ID of the file to be sent to the model.",
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "image_url": {
                                          "anyOf": [
                                            {
                                              "description": "The URL of the image to be sent to the model. A fully qualified URL or base64 encoded image in a data URL.",
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "type": {
                                          "default": "input_image",
                                          "description": "The type of the input item. Always `input_image`.",
                                          "enum": [
                                            "input_image"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "detail"
                                      ],
                                      "title": "Input image",
                                      "type": "object"
                                    },
                                    {
                                      "description": "A file input to the model.",
                                      "properties": {
                                        "file_data": {
                                          "description": "The content of the file to be sent to the model.\n",
                                          "type": "string"
                                        },
                                        "file_id": {
                                          "anyOf": [
                                            {
                                              "description": "The ID of the file to be sent to the model.",
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "file_url": {
                                          "description": "The URL of the file to be sent to the model.",
                                          "type": "string"
                                        },
                                        "filename": {
                                          "description": "The name of the file to be sent to the model.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "input_file",
                                          "description": "The type of the input item. Always `input_file`.",
                                          "enum": [
                                            "input_file"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type"
                                      ],
                                      "title": "Input file",
                                      "type": "object"
                                    },
                                    {
                                      "description": "An audio input to the model.\n",
                                      "properties": {
                                        "input_audio": {
                                          "properties": {
                                            "data": {
                                              "description": "Base64-encoded audio data.\n",
                                              "type": "string"
                                            },
                                            "format": {
                                              "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.\n",
                                              "enum": [
                                                "mp3",
                                                "wav"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "data",
                                            "format"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the input item. Always `input_audio`.\n",
                                          "enum": [
                                            "input_audio"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "input_audio"
                                      ],
                                      "title": "Input audio",
                                      "type": "object"
                                    }
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  }
                                },
                                "title": "Input item content list",
                                "type": "array"
                              },
                              "role": {
                                "description": "The role of the message input. One of `user`, `system`, or `developer`.\n",
                                "enum": [
                                  "user",
                                  "system",
                                  "developer"
                                ],
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.\n",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "incomplete"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the message input. Always set to `message`.\n",
                                "enum": [
                                  "message"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "role",
                              "content"
                            ],
                            "title": "Input message",
                            "type": "object"
                          },
                          {
                            "description": "An output message from the model.\n",
                            "properties": {
                              "content": {
                                "description": "The content of the output message.\n",
                                "items": {
                                  "anyOf": [
                                    {
                                      "description": "A text output from the model.",
                                      "properties": {
                                        "annotations": {
                                          "description": "The annotations of the text output.",
                                          "items": {
                                            "anyOf": [
                                              {
                                                "description": "A citation to a file.",
                                                "properties": {
                                                  "file_id": {
                                                    "description": "The ID of the file.",
                                                    "type": "string"
                                                  },
                                                  "filename": {
                                                    "description": "The filename of the file cited.",
                                                    "type": "string"
                                                  },
                                                  "index": {
                                                    "description": "The index of the file in the list of files.",
                                                    "type": "integer"
                                                  },
                                                  "type": {
                                                    "default": "file_citation",
                                                    "description": "The type of the file citation. Always `file_citation`.",
                                                    "enum": [
                                                      "file_citation"
                                                    ],
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "file_id",
                                                  "index",
                                                  "filename"
                                                ],
                                                "title": "File citation",
                                                "type": "object"
                                              },
                                              {
                                                "description": "A citation for a web resource used to generate a model response.",
                                                "properties": {
                                                  "end_index": {
                                                    "description": "The index of the last character of the URL citation in the message.",
                                                    "type": "integer"
                                                  },
                                                  "start_index": {
                                                    "description": "The index of the first character of the URL citation in the message.",
                                                    "type": "integer"
                                                  },
                                                  "title": {
                                                    "description": "The title of the web resource.",
                                                    "type": "string"
                                                  },
                                                  "type": {
                                                    "default": "url_citation",
                                                    "description": "The type of the URL citation. Always `url_citation`.",
                                                    "enum": [
                                                      "url_citation"
                                                    ],
                                                    "type": "string"
                                                  },
                                                  "url": {
                                                    "description": "The URL of the web resource.",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "url",
                                                  "start_index",
                                                  "end_index",
                                                  "title"
                                                ],
                                                "title": "URL citation",
                                                "type": "object"
                                              },
                                              {
                                                "description": "A citation for a container file used to generate a model response.",
                                                "properties": {
                                                  "container_id": {
                                                    "description": "The ID of the container file.",
                                                    "type": "string"
                                                  },
                                                  "end_index": {
                                                    "description": "The index of the last character of the container file citation in the message.",
                                                    "type": "integer"
                                                  },
                                                  "file_id": {
                                                    "description": "The ID of the file.",
                                                    "type": "string"
                                                  },
                                                  "filename": {
                                                    "description": "The filename of the container file cited.",
                                                    "type": "string"
                                                  },
                                                  "start_index": {
                                                    "description": "The index of the first character of the container file citation in the message.",
                                                    "type": "integer"
                                                  },
                                                  "type": {
                                                    "default": "container_file_citation",
                                                    "description": "The type of the container file citation. Always `container_file_citation`.",
                                                    "enum": [
                                                      "container_file_citation"
                                                    ],
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "container_id",
                                                  "file_id",
                                                  "start_index",
                                                  "end_index",
                                                  "filename"
                                                ],
                                                "title": "Container file citation",
                                                "type": "object"
                                              },
                                              {
                                                "description": "A path to a file.\n",
                                                "properties": {
                                                  "file_id": {
                                                    "description": "The ID of the file.\n",
                                                    "type": "string"
                                                  },
                                                  "index": {
                                                    "description": "The index of the file in the list of files.\n",
                                                    "type": "integer"
                                                  },
                                                  "type": {
                                                    "description": "The type of the file path. Always `file_path`.\n",
                                                    "enum": [
                                                      "file_path"
                                                    ],
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "type",
                                                  "file_id",
                                                  "index"
                                                ],
                                                "title": "File path",
                                                "type": "object"
                                              }
                                            ],
                                            "discriminator": {
                                              "propertyName": "type"
                                            }
                                          },
                                          "type": "array"
                                        },
                                        "logprobs": {
                                          "items": {
                                            "description": "The log probability of a token.",
                                            "properties": {
                                              "bytes": {
                                                "items": {
                                                  "type": "integer"
                                                },
                                                "type": "array"
                                              },
                                              "logprob": {
                                                "type": "number"
                                              },
                                              "token": {
                                                "type": "string"
                                              },
                                              "top_logprobs": {
                                                "items": {
                                                  "description": "The top log probability of a token.",
                                                  "properties": {
                                                    "bytes": {
                                                      "items": {
                                                        "type": "integer"
                                                      },
                                                      "type": "array"
                                                    },
                                                    "logprob": {
                                                      "type": "number"
                                                    },
                                                    "token": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "required": [
                                                    "token",
                                                    "logprob",
                                                    "bytes"
                                                  ],
                                                  "title": "Top log probability",
                                                  "type": "object"
                                                },
                                                "type": "array"
                                              }
                                            },
                                            "required": [
                                              "token",
                                              "logprob",
                                              "bytes",
                                              "top_logprobs"
                                            ],
                                            "title": "Log probability",
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "text": {
                                          "description": "The text output from the model.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "output_text",
                                          "description": "The type of the output text. Always `output_text`.",
                                          "enum": [
                                            "output_text"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "text",
                                        "annotations"
                                      ],
                                      "title": "Output text",
                                      "type": "object"
                                    },
                                    {
                                      "description": "A refusal from the model.",
                                      "properties": {
                                        "refusal": {
                                          "description": "The refusal explanation from the model.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "refusal",
                                          "description": "The type of the refusal. Always `refusal`.",
                                          "enum": [
                                            "refusal"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "refusal"
                                      ],
                                      "title": "Refusal",
                                      "type": "object"
                                    }
                                  ],
                                  "discriminator": {
                                    "propertyName": "type"
                                  }
                                },
                                "type": "array"
                              },
                              "id": {
                                "description": "The unique ID of the output message.\n",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the output message. Always `assistant`.\n",
                                "enum": [
                                  "assistant"
                                ],
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of the message input. One of `in_progress`, `completed`, or\n`incomplete`. Populated when input items are returned via API.\n",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "incomplete"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the output message. Always `message`.\n",
                                "enum": [
                                  "message"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "role",
                              "content",
                              "status"
                            ],
                            "title": "Output message",
                            "type": "object"
                          },
                          {
                            "description": "The results of a file search tool call. See the\n[file search guide](https://platform.openai.com/docs/guides/tools-file-search) for more information.\n",
                            "properties": {
                              "id": {
                                "description": "The unique ID of the file search tool call.\n",
                                "type": "string"
                              },
                              "queries": {
                                "description": "The queries used to search for files.\n",
                                "items": {
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "results": {
                                "anyOf": [
                                  {
                                    "description": "The results of the file search tool call.\n",
                                    "items": {
                                      "properties": {
                                        "attributes": {
                                          "anyOf": [
                                            {
                                              "additionalProperties": {
                                                "anyOf": [
                                                  {
                                                    "maxLength": 512,
                                                    "type": "string"
                                                  },
                                                  {
                                                    "type": "number"
                                                  },
                                                  {
                                                    "type": "boolean"
                                                  }
                                                ]
                                              },
                                              "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard. Keys are strings\nwith a maximum length of 64 characters. Values are strings with a maximum\nlength of 512 characters, booleans, or numbers.\n",
                                              "maxProperties": 16,
                                              "propertyNames": {
                                                "maxLength": 64,
                                                "type": "string"
                                              },
                                              "type": "object"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "file_id": {
                                          "description": "The unique ID of the file.\n",
                                          "type": "string"
                                        },
                                        "filename": {
                                          "description": "The name of the file.\n",
                                          "type": "string"
                                        },
                                        "score": {
                                          "description": "The relevance score of the file - a value between 0 and 1.\n",
                                          "format": "float",
                                          "type": "number"
                                        },
                                        "text": {
                                          "description": "The text that was retrieved from the file.\n",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "status": {
                                "description": "The status of the file search tool call. One of `in_progress`,\n`searching`, `incomplete` or `failed`,\n",
                                "enum": [
                                  "in_progress",
                                  "searching",
                                  "completed",
                                  "incomplete",
                                  "failed"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the file search tool call. Always `file_search_call`.\n",
                                "enum": [
                                  "file_search_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "status",
                              "queries"
                            ],
                            "title": "File search tool call",
                            "type": "object"
                          },
                          {
                            "description": "A tool call to a computer use tool. See the \n[computer use guide](https://platform.openai.com/docs/guides/tools-computer-use) for more information.\n",
                            "properties": {
                              "action": {
                                "anyOf": [
                                  {
                                    "description": "A click action.\n",
                                    "properties": {
                                      "button": {
                                        "description": "Indicates which mouse button was pressed during the click. One of `left`, `right`, `wheel`, `back`, or `forward`.\n",
                                        "enum": [
                                          "left",
                                          "right",
                                          "wheel",
                                          "back",
                                          "forward"
                                        ],
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "click",
                                        "description": "Specifies the event type. For a click action, this property is \nalways set to `click`.\n",
                                        "enum": [
                                          "click"
                                        ],
                                        "type": "string"
                                      },
                                      "x": {
                                        "description": "The x-coordinate where the click occurred.\n",
                                        "type": "integer"
                                      },
                                      "y": {
                                        "description": "The y-coordinate where the click occurred.\n",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "button",
                                      "x",
                                      "y"
                                    ],
                                    "title": "Click",
                                    "type": "object"
                                  },
                                  {
                                    "description": "A double click action.\n",
                                    "properties": {
                                      "type": {
                                        "default": "double_click",
                                        "description": "Specifies the event type. For a double click action, this property is \nalways set to `double_click`.\n",
                                        "enum": [
                                          "double_click"
                                        ],
                                        "type": "string"
                                      },
                                      "x": {
                                        "description": "The x-coordinate where the double click occurred.\n",
                                        "type": "integer"
                                      },
                                      "y": {
                                        "description": "The y-coordinate where the double click occurred.\n",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "x",
                                      "y"
                                    ],
                                    "title": "DoubleClick",
                                    "type": "object"
                                  },
                                  {
                                    "description": "A drag action.\n",
                                    "properties": {
                                      "path": {
                                        "description": "An array of coordinates representing the path of the drag action. Coordinates will appear as an array\nof objects, eg\n```\n[\n  { x: 100, y: 200 },\n  { x: 200, y: 300 }\n]\n```\n",
                                        "items": {
                                          "description": "A series of x/y coordinate pairs in the drag path.\n",
                                          "title": "Drag path coordinates",
                                          "properties": {
                                            "x": {
                                              "description": "The x-coordinate.\n",
                                              "type": "integer"
                                            },
                                            "y": {
                                              "description": "The y-coordinate.\n",
                                              "type": "integer"
                                            }
                                          },
                                          "required": [
                                            "x",
                                            "y"
                                          ],
                                          "type": "object"
                                        },
                                        "type": "array"
                                      },
                                      "type": {
                                        "default": "drag",
                                        "description": "Specifies the event type. For a drag action, this property is \nalways set to `drag`.\n",
                                        "enum": [
                                          "drag"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "path"
                                    ],
                                    "title": "Drag",
                                    "type": "object"
                                  },
                                  {
                                    "description": "A collection of keypresses the model would like to perform.\n",
                                    "properties": {
                                      "keys": {
                                        "description": "The combination of keys the model is requesting to be pressed. This is an\narray of strings, each representing a key.\n",
                                        "items": {
                                          "description": "One of the keys the model is requesting to be pressed.\n",
                                          "type": "string"
                                        },
                                        "type": "array"
                                      },
                                      "type": {
                                        "default": "keypress",
                                        "description": "Specifies the event type. For a keypress action, this property is \nalways set to `keypress`.\n",
                                        "enum": [
                                          "keypress"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "keys"
                                    ],
                                    "title": "KeyPress",
                                    "type": "object"
                                  },
                                  {
                                    "description": "A mouse move action.\n",
                                    "properties": {
                                      "type": {
                                        "default": "move",
                                        "description": "Specifies the event type. For a move action, this property is \nalways set to `move`.\n",
                                        "enum": [
                                          "move"
                                        ],
                                        "type": "string"
                                      },
                                      "x": {
                                        "description": "The x-coordinate to move to.\n",
                                        "type": "integer"
                                      },
                                      "y": {
                                        "description": "The y-coordinate to move to.\n",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "x",
                                      "y"
                                    ],
                                    "title": "Move",
                                    "type": "object"
                                  },
                                  {
                                    "description": "A screenshot action.\n",
                                    "properties": {
                                      "type": {
                                        "default": "screenshot",
                                        "description": "Specifies the event type. For a screenshot action, this property is \nalways set to `screenshot`.\n",
                                        "enum": [
                                          "screenshot"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Screenshot",
                                    "type": "object"
                                  },
                                  {
                                    "description": "A scroll action.\n",
                                    "properties": {
                                      "scroll_x": {
                                        "description": "The horizontal scroll distance.\n",
                                        "type": "integer"
                                      },
                                      "scroll_y": {
                                        "description": "The vertical scroll distance.\n",
                                        "type": "integer"
                                      },
                                      "type": {
                                        "default": "scroll",
                                        "description": "Specifies the event type. For a scroll action, this property is \nalways set to `scroll`.\n",
                                        "enum": [
                                          "scroll"
                                        ],
                                        "type": "string"
                                      },
                                      "x": {
                                        "description": "The x-coordinate where the scroll occurred.\n",
                                        "type": "integer"
                                      },
                                      "y": {
                                        "description": "The y-coordinate where the scroll occurred.\n",
                                        "type": "integer"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "x",
                                      "y",
                                      "scroll_x",
                                      "scroll_y"
                                    ],
                                    "title": "Scroll",
                                    "type": "object"
                                  },
                                  {
                                    "description": "An action to type in text.\n",
                                    "properties": {
                                      "text": {
                                        "description": "The text to type.\n",
                                        "type": "string"
                                      },
                                      "type": {
                                        "default": "type",
                                        "description": "Specifies the event type. For a type action, this property is \nalways set to `type`.\n",
                                        "enum": [
                                          "type"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "text"
                                    ],
                                    "title": "Type",
                                    "type": "object"
                                  },
                                  {
                                    "description": "A wait action.\n",
                                    "properties": {
                                      "type": {
                                        "default": "wait",
                                        "description": "Specifies the event type. For a wait action, this property is \nalways set to `wait`.\n",
                                        "enum": [
                                          "wait"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type"
                                    ],
                                    "title": "Wait",
                                    "type": "object"
                                  }
                                ],
                                "discriminator": {
                                  "propertyName": "type"
                                }
                              },
                              "call_id": {
                                "description": "An identifier used when responding to the tool call with output.\n",
                                "type": "string"
                              },
                              "id": {
                                "description": "The unique ID of the computer call.",
                                "type": "string"
                              },
                              "pending_safety_checks": {
                                "description": "The pending safety checks for the computer call.\n",
                                "items": {
                                  "description": "A pending safety check for the computer call.\n",
                                  "properties": {
                                    "code": {
                                      "description": "The type of the pending safety check.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "The ID of the pending safety check.",
                                      "type": "string"
                                    },
                                    "message": {
                                      "description": "Details about the pending safety check.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "code",
                                    "message"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "status": {
                                "description": "The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.\n",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "incomplete"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "default": "computer_call",
                                "description": "The type of the computer call. Always `computer_call`.",
                                "enum": [
                                  "computer_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id",
                              "action",
                              "call_id",
                              "pending_safety_checks",
                              "status"
                            ],
                            "title": "Computer tool call",
                            "type": "object"
                          },
                          {
                            "description": "The output of a computer tool call.",
                            "properties": {
                              "acknowledged_safety_checks": {
                                "anyOf": [
                                  {
                                    "description": "The safety checks reported by the API that have been acknowledged by the developer.",
                                    "items": {
                                      "description": "A pending safety check for the computer call.",
                                      "properties": {
                                        "code": {
                                          "anyOf": [
                                            {
                                              "description": "The type of the pending safety check.",
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        },
                                        "id": {
                                          "description": "The ID of the pending safety check.",
                                          "type": "string"
                                        },
                                        "message": {
                                          "anyOf": [
                                            {
                                              "description": "Details about the pending safety check.",
                                              "type": "string"
                                            },
                                            {
                                              "type": "null"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "call_id": {
                                "description": "The ID of the computer tool call that produced the output.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                              },
                              "id": {
                                "anyOf": [
                                  {
                                    "description": "The ID of the computer tool call output.",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "output": {
                                "description": "A computer screenshot image used with the computer use tool.\n",
                                "properties": {
                                  "file_id": {
                                    "description": "The identifier of an uploaded file that contains the screenshot.",
                                    "type": "string"
                                  },
                                  "image_url": {
                                    "description": "The URL of the screenshot image.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "default": "computer_screenshot",
                                    "description": "Specifies the event type. For a computer screenshot, this property is \nalways set to `computer_screenshot`.\n",
                                    "enum": [
                                      "computer_screenshot"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type"
                                ],
                                "type": "object"
                              },
                              "status": {
                                "anyOf": [
                                  {
                                    "description": "The status of the message input. One of `in_progress`, `completed`, or `incomplete`. Populated when input items are returned via API.",
                                    "enum": [
                                      "in_progress",
                                      "completed",
                                      "incomplete"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "type": {
                                "default": "computer_call_output",
                                "description": "The type of the computer tool call output. Always `computer_call_output`.",
                                "enum": [
                                  "computer_call_output"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "call_id",
                              "type",
                              "output"
                            ],
                            "title": "Computer tool call output",
                            "type": "object"
                          },
                          {
                            "description": "The results of a web search tool call. See the \n[web search guide](https://platform.openai.com/docs/guides/tools-web-search) for more information.\n",
                            "properties": {
                              "action": {
                                "anyOf": [
                                  {
                                    "description": "Action type \"search\" - Performs a web search query.\n",
                                    "properties": {
                                      "query": {
                                        "description": "The search query.\n",
                                        "type": "string"
                                      },
                                      "sources": {
                                        "description": "The sources used in the search.\n",
                                        "items": {
                                          "description": "A source used in the search.\n",
                                          "properties": {
                                            "type": {
                                              "description": "The type of source. Always `url`.\n",
                                              "enum": [
                                                "url"
                                              ],
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The URL of the source.\n",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "url"
                                          ],
                                          "title": "Web search source",
                                          "type": "object"
                                        },
                                        "title": "Web search sources",
                                        "type": "array"
                                      },
                                      "type": {
                                        "description": "The action type.\n",
                                        "enum": [
                                          "search"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "query"
                                    ],
                                    "title": "Search action",
                                    "type": "object"
                                  },
                                  {
                                    "description": "Action type \"open_page\" - Opens a specific URL from search results.\n",
                                    "properties": {
                                      "type": {
                                        "description": "The action type.\n",
                                        "enum": [
                                          "open_page"
                                        ],
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "The URL opened by the model.\n",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "url"
                                    ],
                                    "title": "Open page action",
                                    "type": "object"
                                  },
                                  {
                                    "description": "Action type \"find\": Searches for a pattern within a loaded page.\n",
                                    "properties": {
                                      "pattern": {
                                        "description": "The pattern or text to search for within the page.\n",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "The action type.\n",
                                        "enum": [
                                          "find"
                                        ],
                                        "type": "string"
                                      },
                                      "url": {
                                        "description": "The URL of the page searched for the pattern.\n",
                                        "format": "uri",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "url",
                                      "pattern"
                                    ],
                                    "title": "Find action",
                                    "type": "object"
                                  }
                                ],
                                "description": "An object describing the specific action taken in this web search call.\nIncludes details on how the model used the web (search, open_page, find).\n",
                                "discriminator": {
                                  "propertyName": "type"
                                },
                                "type": "object"
                              },
                              "id": {
                                "description": "The unique ID of the web search tool call.\n",
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of the web search tool call.\n",
                                "enum": [
                                  "in_progress",
                                  "searching",
                                  "completed",
                                  "failed"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the web search tool call. Always `web_search_call`.\n",
                                "enum": [
                                  "web_search_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "status",
                              "action"
                            ],
                            "title": "Web search tool call",
                            "type": "object"
                          },
                          {
                            "description": "A tool call to run a function. See the \n[function calling guide](https://platform.openai.com/docs/guides/function-calling) for more information.\n",
                            "properties": {
                              "arguments": {
                                "description": "A JSON string of the arguments to pass to the function.\n",
                                "type": "string"
                              },
                              "call_id": {
                                "description": "The unique ID of the function tool call generated by the model.\n",
                                "type": "string"
                              },
                              "id": {
                                "description": "The unique ID of the function tool call.\n",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the function to run.\n",
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.\n",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "incomplete"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the function tool call. Always `function_call`.\n",
                                "enum": [
                                  "function_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "call_id",
                              "name",
                              "arguments"
                            ],
                            "title": "Function tool call",
                            "type": "object"
                          },
                          {
                            "description": "The output of a function tool call.",
                            "properties": {
                              "call_id": {
                                "description": "The unique ID of the function tool call generated by the model.",
                                "maxLength": 64,
                                "minLength": 1,
                                "type": "string"
                              },
                              "id": {
                                "anyOf": [
                                  {
                                    "description": "The unique ID of the function tool call output. Populated when this item is returned via API.",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "output": {
                                "description": "A JSON string of the output of the function tool call.",
                                "maxLength": 10485760,
                                "type": "string"
                              },
                              "status": {
                                "anyOf": [
                                  {
                                    "description": "The status of the item. One of `in_progress`, `completed`, or `incomplete`. Populated when items are returned via API.",
                                    "enum": [
                                      "in_progress",
                                      "completed",
                                      "incomplete"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "type": {
                                "default": "function_call_output",
                                "description": "The type of the function tool call output. Always `function_call_output`.",
                                "enum": [
                                  "function_call_output"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "call_id",
                              "type",
                              "output"
                            ],
                            "title": "Function tool call output",
                            "type": "object"
                          },
                          {
                            "description": "A description of the chain of thought used by a reasoning model while generating\na response. Be sure to include these items in your `input` to the Responses API\nfor subsequent turns of a conversation if you are manually\n[managing context](https://platform.openai.com/docs/guides/conversation-state).\n",
                            "properties": {
                              "content": {
                                "description": "Reasoning text content.\n",
                                "items": {
                                  "properties": {
                                    "text": {
                                      "description": "Reasoning text output from the model.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the object. Always `reasoning_text`.\n",
                                      "enum": [
                                        "reasoning_text"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "text"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "encrypted_content": {
                                "anyOf": [
                                  {
                                    "description": "The encrypted content of the reasoning item - populated when a response is\ngenerated with `reasoning.encrypted_content` in the `include` parameter.\n",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "id": {
                                "description": "The unique identifier of the reasoning content.\n",
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of the item. One of `in_progress`, `completed`, or\n`incomplete`. Populated when items are returned via API.\n",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "incomplete"
                                ],
                                "type": "string"
                              },
                              "summary": {
                                "description": "Reasoning summary content.\n",
                                "items": {
                                  "properties": {
                                    "text": {
                                      "description": "A summary of the reasoning output from the model so far.\n",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "The type of the object. Always `summary_text`.\n",
                                      "enum": [
                                        "summary_text"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "text"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of the object. Always `reasoning`.\n",
                                "enum": [
                                  "reasoning"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "summary",
                              "type"
                            ],
                            "title": "Reasoning",
                            "type": "object"
                          },
                          {
                            "description": "An image generation request made by the model.\n",
                            "properties": {
                              "id": {
                                "description": "The unique ID of the image generation call.\n",
                                "type": "string"
                              },
                              "result": {
                                "anyOf": [
                                  {
                                    "description": "The generated image encoded in base64.\n",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "status": {
                                "description": "The status of the image generation call.\n",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "generating",
                                  "failed"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the image generation call. Always `image_generation_call`.\n",
                                "enum": [
                                  "image_generation_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id",
                              "status",
                              "result"
                            ],
                            "title": "Image generation call",
                            "type": "object"
                          },
                          {
                            "description": "A tool call to run code.\n",
                            "properties": {
                              "code": {
                                "anyOf": [
                                  {
                                    "description": "The code to run, or null if not available.\n",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "container_id": {
                                "description": "The ID of the container used to run the code.\n",
                                "type": "string"
                              },
                              "id": {
                                "description": "The unique ID of the code interpreter tool call.\n",
                                "type": "string"
                              },
                              "outputs": {
                                "anyOf": [
                                  {
                                    "description": "The outputs generated by the code interpreter, such as logs or images.\nCan be null if no outputs are available.\n",
                                    "discriminator": {
                                      "propertyName": "type"
                                    },
                                    "items": {
                                      "anyOf": [
                                        {
                                          "description": "The logs output from the code interpreter.\n",
                                          "properties": {
                                            "logs": {
                                              "description": "The logs output from the code interpreter.",
                                              "type": "string"
                                            },
                                            "type": {
                                              "default": "logs",
                                              "description": "The type of the output. Always 'logs'.",
                                              "enum": [
                                                "logs"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "logs"
                                          ],
                                          "title": "Code interpreter output logs",
                                          "type": "object"
                                        },
                                        {
                                          "description": "The image output from the code interpreter.\n",
                                          "properties": {
                                            "type": {
                                              "default": "image",
                                              "description": "The type of the output. Always 'image'.",
                                              "enum": [
                                                "image"
                                              ],
                                              "type": "string"
                                            },
                                            "url": {
                                              "description": "The URL of the image output from the code interpreter.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "url"
                                          ],
                                          "title": "Code interpreter output image",
                                          "type": "object"
                                        }
                                      ],
                                      "discriminator": {
                                        "propertyName": "type"
                                      }
                                    },
                                    "type": "array"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "status": {
                                "description": "The status of the code interpreter tool call. Valid values are `in_progress`, `completed`, `incomplete`, `interpreting`, and `failed`.\n",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "incomplete",
                                  "interpreting",
                                  "failed"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "default": "code_interpreter_call",
                                "description": "The type of the code interpreter tool call. Always `code_interpreter_call`.\n",
                                "enum": [
                                  "code_interpreter_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id",
                              "status",
                              "container_id",
                              "code",
                              "outputs"
                            ],
                            "title": "Code interpreter tool call",
                            "type": "object"
                          },
                          {
                            "description": "A tool call to run a command on the local shell.\n",
                            "properties": {
                              "action": {
                                "description": "Execute a shell command on the server.\n",
                                "properties": {
                                  "command": {
                                    "description": "The command to run.\n",
                                    "items": {
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  "env": {
                                    "additionalProperties": {
                                      "type": "string"
                                    },
                                    "description": "Environment variables to set for the command.\n",
                                    "type": "object"
                                  },
                                  "timeout_ms": {
                                    "anyOf": [
                                      {
                                        "description": "Optional timeout in milliseconds for the command.\n",
                                        "type": "integer"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "type": {
                                    "description": "The type of the local shell action. Always `exec`.\n",
                                    "enum": [
                                      "exec"
                                    ],
                                    "type": "string"
                                  },
                                  "user": {
                                    "anyOf": [
                                      {
                                        "description": "Optional user to run the command as.\n",
                                        "type": "string"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "working_directory": {
                                    "anyOf": [
                                      {
                                        "description": "Optional working directory to run the command in.\n",
                                        "type": "string"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "type",
                                  "command",
                                  "env"
                                ],
                                "title": "Local shell exec action",
                                "type": "object"
                              },
                              "call_id": {
                                "description": "The unique ID of the local shell tool call generated by the model.\n",
                                "type": "string"
                              },
                              "id": {
                                "description": "The unique ID of the local shell call.\n",
                                "type": "string"
                              },
                              "status": {
                                "description": "The status of the local shell call.\n",
                                "enum": [
                                  "in_progress",
                                  "completed",
                                  "incomplete"
                                ],
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the local shell call. Always `local_shell_call`.\n",
                                "enum": [
                                  "local_shell_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id",
                              "call_id",
                              "action",
                              "status"
                            ],
                            "title": "Local shell call",
                            "type": "object"
                          },
                          {
                            "description": "The output of a local shell tool call.\n",
                            "properties": {
                              "id": {
                                "description": "The unique ID of the local shell tool call generated by the model.\n",
                                "type": "string"
                              },
                              "output": {
                                "description": "A JSON string of the output of the local shell tool call.\n",
                                "type": "string"
                              },
                              "status": {
                                "anyOf": [
                                  {
                                    "description": "The status of the item. One of `in_progress`, `completed`, or `incomplete`.\n",
                                    "enum": [
                                      "in_progress",
                                      "completed",
                                      "incomplete"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "type": {
                                "description": "The type of the local shell tool call output. Always `local_shell_call_output`.\n",
                                "enum": [
                                  "local_shell_call_output"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "call_id",
                              "output"
                            ],
                            "title": "Local shell call output",
                            "type": "object"
                          },
                          {
                            "description": "A list of tools available on an MCP server.\n",
                            "properties": {
                              "error": {
                                "anyOf": [
                                  {
                                    "description": "Error message if the server could not list tools.\n",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "id": {
                                "description": "The unique ID of the list.\n",
                                "type": "string"
                              },
                              "server_label": {
                                "description": "The label of the MCP server.\n",
                                "type": "string"
                              },
                              "tools": {
                                "description": "The tools available on the server.\n",
                                "items": {
                                  "description": "A tool available on an MCP server.\n",
                                  "properties": {
                                    "annotations": {
                                      "anyOf": [
                                        {
                                          "description": "Additional annotations about the tool.\n",
                                          "type": "object"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "description": {
                                      "anyOf": [
                                        {
                                          "description": "The description of the tool.\n",
                                          "type": "string"
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    },
                                    "input_schema": {
                                      "description": "The JSON schema describing the tool's input.\n",
                                      "type": "object"
                                    },
                                    "name": {
                                      "description": "The name of the tool.\n",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "input_schema"
                                  ],
                                  "title": "MCP list tools tool",
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "type": {
                                "description": "The type of the item. Always `mcp_list_tools`.\n",
                                "enum": [
                                  "mcp_list_tools"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id",
                              "server_label",
                              "tools"
                            ],
                            "title": "MCP list tools",
                            "type": "object"
                          },
                          {
                            "description": "A request for human approval of a tool invocation.\n",
                            "properties": {
                              "arguments": {
                                "description": "A JSON string of arguments for the tool.\n",
                                "type": "string"
                              },
                              "id": {
                                "description": "The unique ID of the approval request.\n",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the tool to run.\n",
                                "type": "string"
                              },
                              "server_label": {
                                "description": "The label of the MCP server making the request.\n",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the item. Always `mcp_approval_request`.\n",
                                "enum": [
                                  "mcp_approval_request"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id",
                              "server_label",
                              "name",
                              "arguments"
                            ],
                            "title": "MCP approval request",
                            "type": "object"
                          },
                          {
                            "description": "A response to an MCP approval request.\n",
                            "properties": {
                              "approval_request_id": {
                                "description": "The ID of the approval request being answered.\n",
                                "type": "string"
                              },
                              "approve": {
                                "description": "Whether the request was approved.\n",
                                "type": "boolean"
                              },
                              "id": {
                                "anyOf": [
                                  {
                                    "description": "The unique ID of the approval response\n",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "reason": {
                                "anyOf": [
                                  {
                                    "description": "Optional reason for the decision.\n",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "type": {
                                "description": "The type of the item. Always `mcp_approval_response`.\n",
                                "enum": [
                                  "mcp_approval_response"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "request_id",
                              "approve",
                              "approval_request_id"
                            ],
                            "title": "MCP approval response",
                            "type": "object"
                          },
                          {
                            "description": "An invocation of a tool on an MCP server.\n",
                            "properties": {
                              "arguments": {
                                "description": "A JSON string of the arguments passed to the tool.\n",
                                "type": "string"
                              },
                              "error": {
                                "anyOf": [
                                  {
                                    "description": "The error from the tool call, if any.\n",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "id": {
                                "description": "The unique ID of the tool call.\n",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the tool that was run.\n",
                                "type": "string"
                              },
                              "output": {
                                "anyOf": [
                                  {
                                    "description": "The output from the tool call.\n",
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "server_label": {
                                "description": "The label of the MCP server running the tool.\n",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the item. Always `mcp_call`.\n",
                                "enum": [
                                  "mcp_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "id",
                              "server_label",
                              "name",
                              "arguments"
                            ],
                            "title": "MCP tool call",
                            "type": "object"
                          },
                          {
                            "description": "The output of a custom tool call from your code, being sent back to the model.\n",
                            "properties": {
                              "call_id": {
                                "description": "The call ID, used to map this custom tool call output to a custom tool call.\n",
                                "type": "string"
                              },
                              "id": {
                                "description": "The unique ID of the custom tool call output in the OpenAI platform.\n",
                                "type": "string"
                              },
                              "output": {
                                "description": "The output from the custom tool call generated by your code.\n",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the custom tool call output. Always `custom_tool_call_output`.\n",
                                "enum": [
                                  "custom_tool_call_output"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "call_id",
                              "output"
                            ],
                            "title": "Custom tool call output",
                            "type": "object"
                          },
                          {
                            "description": "A call to a custom tool created by the model.\n",
                            "properties": {
                              "call_id": {
                                "description": "An identifier used to map this custom tool call to a tool call output.\n",
                                "type": "string"
                              },
                              "id": {
                                "description": "The unique ID of the custom tool call in the OpenAI platform.\n",
                                "type": "string"
                              },
                              "input": {
                                "description": "The input for the custom tool call generated by the model.\n",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the custom tool being called.\n",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of the custom tool call. Always `custom_tool_call`.\n",
                                "enum": [
                                  "custom_tool_call"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "type",
                              "call_id",
                              "name",
                              "input"
                            ],
                            "title": "Custom tool call",
                            "type": "object"
                          }
                        ],
                        "discriminator": {
                          "propertyName": "type"
                        }
                      },
                      {
                        "description": "An internal identifier for an item to reference.",
                        "properties": {
                          "id": {
                            "description": "The ID of the item to reference.",
                            "type": "string"
                          },
                          "type": {
                            "anyOf": [
                              {
                                "default": "item_reference",
                                "description": "The type of item to reference. Always `item_reference`.",
                                "enum": [
                                  "item_reference"
                                ],
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "title": "Item reference",
                        "type": "object"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "type"
                    }
                  },
                  "maxItems": 20,
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ]
            },
            "metadata": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Set of 16 key-value pairs that can be attached to an object. Useful for\nstoring additional information about the object in a structured format.\n"
            }
          },
          "required": [],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "created_at": {
                "description": "The time at which the conversation was created, measured in seconds since the Unix epoch.",
                "type": "integer"
              },
              "id": {
                "description": "The unique ID of the conversation.",
                "type": "string"
              },
              "metadata": {
                "description": "Set of 16 key-value pairs that can be attached to an object. This can be         useful for storing additional information about the object in a structured         format, and querying for objects via API or the dashboard.\n        Keys are strings with a maximum length of 64 characters. Values are strings         with a maximum length of 512 characters."
              },
              "object": {
                "default": "conversation",
                "description": "The object type, which is always `conversation`.",
                "enum": [
                  "conversation"
                ],
                "type": "string"
              }
            },
            "required": [
              "id",
              "object",
              "metadata",
              "created_at"
            ],
            "type": "object"
          }
        }
      },
      "description": "OK"
    }
  },
  "summary": "Create a conversation",
  "tags": [
    "Conversations"
  ]
}
