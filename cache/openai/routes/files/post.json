{
  "description": "Upload a file that can be used across various endpoints. Individual files can be up to 512 MB, and the size of all files uploaded by one organization can be up to 1 TB.\n\nThe Assistants API supports files up to 2 million tokens and of specific file types. See the [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for details.\n\nThe Fine-tuning API only supports `.jsonl` files. The input also has certain required formats for fine-tuning [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input) models.\n\nThe Batch API only supports `.jsonl` files up to 200 MB in size. The input also has a specific required [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n\nPlease [contact us](https://help.openai.com/) if you need to increase these storage limits.\n",
  "operationId": "createFile",
  "requestBody": {
    "content": {
      "multipart/form-data": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "expires_after": {
              "description": "The expiration policy for a file. By default, files with `purpose=batch` expire after 30 days and all other files are persisted until they are manually deleted.",
              "properties": {
                "anchor": {
                  "description": "Anchor timestamp after which the expiration policy applies. Supported anchors: `created_at`.",
                  "enum": [
                    "created_at"
                  ],
                  "type": "string"
                },
                "seconds": {
                  "description": "The number of seconds after the anchor time that the file will expire. Must be between 3600 (1 hour) and 2592000 (30 days).",
                  "maximum": 2592000,
                  "minimum": 3600,
                  "type": "integer"
                }
              },
              "required": [
                "anchor",
                "seconds"
              ],
              "title": "File expiration policy",
              "type": "object"
            },
            "file": {
              "description": "The File object (not file name) to be uploaded.\n",
              "format": "binary",
              "type": "string"
            },
            "purpose": {
              "description": "The intended purpose of the uploaded file. One of: - `assistants`: Used in the Assistants API - `batch`: Used in the Batch API - `fine-tune`: Used for fine-tuning - `vision`: Images used for vision fine-tuning - `user_data`: Flexible file type for any purpose - `evals`: Used for eval data sets\n",
              "enum": [
                "assistants",
                "batch",
                "fine-tune",
                "vision",
                "user_data",
                "evals"
              ],
              "type": "string"
            }
          },
          "required": [
            "file",
            "purpose"
          ],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "The `File` object represents a document that has been uploaded to OpenAI.",
            "properties": {
              "bytes": {
                "description": "The size of the file, in bytes.",
                "type": "integer"
              },
              "created_at": {
                "description": "The Unix timestamp (in seconds) for when the file was created.",
                "type": "integer"
              },
              "expires_at": {
                "description": "The Unix timestamp (in seconds) for when the file will expire.",
                "type": "integer"
              },
              "filename": {
                "description": "The name of the file.",
                "type": "string"
              },
              "id": {
                "description": "The file identifier, which can be referenced in the API endpoints.",
                "type": "string"
              },
              "object": {
                "description": "The object type, which is always `file`.",
                "enum": [
                  "file"
                ],
                "type": "string"
              },
              "purpose": {
                "description": "The intended purpose of the file. Supported values are `assistants`, `assistants_output`, `batch`, `batch_output`, `fine-tune`, `fine-tune-results`, `vision`, and `user_data`.",
                "enum": [
                  "assistants",
                  "assistants_output",
                  "batch",
                  "batch_output",
                  "fine-tune",
                  "fine-tune-results",
                  "vision",
                  "user_data"
                ],
                "type": "string"
              },
              "status": {
                "deprecated": true,
                "description": "Deprecated. The current status of the file, which can be either `uploaded`, `processed`, or `error`.",
                "enum": [
                  "uploaded",
                  "processed",
                  "error"
                ],
                "type": "string"
              },
              "status_details": {
                "deprecated": true,
                "description": "Deprecated. For details on why a fine-tuning training file failed validation, see the `error` field on `fine_tuning.job`.",
                "type": "string"
              }
            },
            "required": [
              "id",
              "object",
              "bytes",
              "created_at",
              "filename",
              "purpose",
              "status"
            ],
            "title": "OpenAIFile"
          }
        }
      },
      "description": "OK"
    }
  },
  "summary": "Upload file",
  "tags": [
    "Files"
  ]
}
