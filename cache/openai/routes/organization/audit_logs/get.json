{
  "description": "List user actions and configuration changes within this organization.",
  "operationId": "list-audit-logs",
  "parameters": [
    {
      "description": "Return only events whose `effective_at` (Unix seconds) is in this range.",
      "in": "query",
      "name": "effective_at",
      "required": false,
      "schema": {
        "properties": {
          "gt": {
            "description": "Return only events whose `effective_at` (Unix seconds) is greater than this value.",
            "type": "integer"
          },
          "gte": {
            "description": "Return only events whose `effective_at` (Unix seconds) is greater than or equal to this value.",
            "type": "integer"
          },
          "lt": {
            "description": "Return only events whose `effective_at` (Unix seconds) is less than this value.",
            "type": "integer"
          },
          "lte": {
            "description": "Return only events whose `effective_at` (Unix seconds) is less than or equal to this value.",
            "type": "integer"
          }
        },
        "type": "object"
      }
    },
    {
      "description": "Return only events for these projects.",
      "in": "query",
      "name": "project_ids[]",
      "required": false,
      "schema": {
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    {
      "description": "Return only events with a `type` in one of these values. For example, `project.created`. For all options, see the documentation for the [audit log object](https://platform.openai.com/docs/api-reference/audit-logs/object).",
      "in": "query",
      "name": "event_types[]",
      "required": false,
      "schema": {
        "items": {
          "description": "The event type.",
          "enum": [
            "api_key.created",
            "api_key.updated",
            "api_key.deleted",
            "checkpoint_permission.created",
            "checkpoint_permission.deleted",
            "invite.sent",
            "invite.accepted",
            "invite.deleted",
            "login.succeeded",
            "login.failed",
            "logout.succeeded",
            "logout.failed",
            "organization.updated",
            "project.created",
            "project.updated",
            "project.archived",
            "service_account.created",
            "service_account.updated",
            "service_account.deleted",
            "rate_limit.updated",
            "rate_limit.deleted",
            "user.added",
            "user.updated",
            "user.deleted"
          ],
          "type": "string"
        },
        "type": "array"
      }
    },
    {
      "description": "Return only events performed by these actors. Can be a user ID, a service account ID, or an api key tracking ID.",
      "in": "query",
      "name": "actor_ids[]",
      "required": false,
      "schema": {
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    {
      "description": "Return only events performed by users with these emails.",
      "in": "query",
      "name": "actor_emails[]",
      "required": false,
      "schema": {
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    {
      "description": "Return only events performed on these targets. For example, a project ID updated.",
      "in": "query",
      "name": "resource_ids[]",
      "required": false,
      "schema": {
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    {
      "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "default": 20,
        "type": "integer"
      }
    },
    {
      "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n",
      "in": "query",
      "name": "after",
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n",
      "in": "query",
      "name": "before",
      "schema": {
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "data": {
                "items": {
                  "description": "A log of a user action or configuration change within this organization.",
                  "properties": {
                    "actor": {
                      "description": "The actor who performed the audit logged action.",
                      "properties": {
                        "api_key": {
                          "description": "The API Key used to perform the audit logged action.",
                          "properties": {
                            "id": {
                              "description": "The tracking id of the API key.",
                              "type": "string"
                            },
                            "service_account": {
                              "description": "The service account that performed the audit logged action.",
                              "properties": {
                                "id": {
                                  "description": "The service account id.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The type of API key. Can be either `user` or `service_account`.",
                              "enum": [
                                "user",
                                "service_account"
                              ],
                              "type": "string"
                            },
                            "user": {
                              "description": "The user who performed the audit logged action.",
                              "properties": {
                                "email": {
                                  "description": "The user email.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "The user id.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "session": {
                          "description": "The session in which the audit logged action was performed.",
                          "properties": {
                            "ip_address": {
                              "description": "The IP address from which the action was performed.",
                              "type": "string"
                            },
                            "user": {
                              "description": "The user who performed the audit logged action.",
                              "properties": {
                                "email": {
                                  "description": "The user email.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "The user id.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": {
                          "description": "The type of actor. Is either `session` or `api_key`.",
                          "enum": [
                            "session",
                            "api_key"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "api_key.created": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "data": {
                          "description": "The payload used to create the API key.",
                          "properties": {
                            "scopes": {
                              "description": "A list of scopes allowed for the API key, e.g. `[\"api.model.request\"]`",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The tracking ID of the API key.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "api_key.deleted": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The tracking ID of the API key.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "api_key.updated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "changes_requested": {
                          "description": "The payload used to update the API key.",
                          "properties": {
                            "scopes": {
                              "description": "A list of scopes allowed for the API key, e.g. `[\"api.model.request\"]`",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The tracking ID of the API key.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "certificate.created": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The certificate ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the certificate.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "certificate.deleted": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "certificate": {
                          "description": "The certificate content in PEM format.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The certificate ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the certificate.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "certificate.updated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The certificate ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the certificate.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "certificates.activated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "certificates": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The certificate ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the certificate.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "certificates.deactivated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "certificates": {
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The certificate ID.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name of the certificate.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "checkpoint_permission.created": {
                      "description": "The project and fine-tuned model checkpoint that the checkpoint permission was created for.",
                      "properties": {
                        "data": {
                          "description": "The payload used to create the checkpoint permission.",
                          "properties": {
                            "fine_tuned_model_checkpoint": {
                              "description": "The ID of the fine-tuned model checkpoint.",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "The ID of the project that the checkpoint permission was created for.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The ID of the checkpoint permission.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "checkpoint_permission.deleted": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The ID of the checkpoint permission.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "effective_at": {
                      "description": "The Unix timestamp (in seconds) of the event.",
                      "type": "integer"
                    },
                    "id": {
                      "description": "The ID of this log.",
                      "type": "string"
                    },
                    "invite.accepted": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The ID of the invite.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "invite.deleted": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The ID of the invite.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "invite.sent": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "data": {
                          "description": "The payload used to create the invite.",
                          "properties": {
                            "email": {
                              "description": "The email invited to the organization.",
                              "type": "string"
                            },
                            "role": {
                              "description": "The role the email was invited to be. Is either `owner` or `member`.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The ID of the invite.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "login.failed": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "error_code": {
                          "description": "The error code of the failure.",
                          "type": "string"
                        },
                        "error_message": {
                          "description": "The error message of the failure.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "logout.failed": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "error_code": {
                          "description": "The error code of the failure.",
                          "type": "string"
                        },
                        "error_message": {
                          "description": "The error message of the failure.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "organization.updated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "changes_requested": {
                          "description": "The payload used to update the organization settings.",
                          "properties": {
                            "api_call_logging": {
                              "description": "How your organization logs data from supported API calls. One of `disabled`, `enabled_per_call`, `enabled_for_all_projects`, or `enabled_for_selected_projects`",
                              "type": "string"
                            },
                            "api_call_logging_project_ids": {
                              "description": "The list of project ids if api_call_logging is set to `enabled_for_selected_projects`",
                              "type": "string"
                            },
                            "description": {
                              "description": "The organization description.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The organization name.",
                              "type": "string"
                            },
                            "threads_ui_visibility": {
                              "description": "Visibility of the threads page which shows messages created with the Assistants API and Playground. One of `ANY_ROLE`, `OWNERS`, or `NONE`.",
                              "type": "string"
                            },
                            "title": {
                              "description": "The organization title.",
                              "type": "string"
                            },
                            "usage_dashboard_visibility": {
                              "description": "Visibility of the usage dashboard which shows activity and costs for your organization. One of `ANY_ROLE` or `OWNERS`.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The organization ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "project": {
                      "description": "The project that the action was scoped to. Absent for actions not scoped to projects. Note that any admin actions taken via Admin API keys are associated with the default project.",
                      "properties": {
                        "id": {
                          "description": "The project ID.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The project title.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "project.archived": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The project ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "project.created": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "data": {
                          "description": "The payload used to create the project.",
                          "properties": {
                            "name": {
                              "description": "The project name.",
                              "type": "string"
                            },
                            "title": {
                              "description": "The title of the project as seen on the dashboard.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The project ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "project.updated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "changes_requested": {
                          "description": "The payload used to update the project.",
                          "properties": {
                            "title": {
                              "description": "The title of the project as seen on the dashboard.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The project ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "rate_limit.deleted": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The rate limit ID",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "rate_limit.updated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "changes_requested": {
                          "description": "The payload used to update the rate limits.",
                          "properties": {
                            "batch_1_day_max_input_tokens": {
                              "description": "The maximum batch input tokens per day. Only relevant for certain models.",
                              "type": "integer"
                            },
                            "max_audio_megabytes_per_1_minute": {
                              "description": "The maximum audio megabytes per minute. Only relevant for certain models.",
                              "type": "integer"
                            },
                            "max_images_per_1_minute": {
                              "description": "The maximum images per minute. Only relevant for certain models.",
                              "type": "integer"
                            },
                            "max_requests_per_1_day": {
                              "description": "The maximum requests per day. Only relevant for certain models.",
                              "type": "integer"
                            },
                            "max_requests_per_1_minute": {
                              "description": "The maximum requests per minute.",
                              "type": "integer"
                            },
                            "max_tokens_per_1_minute": {
                              "description": "The maximum tokens per minute.",
                              "type": "integer"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The rate limit ID",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "service_account.created": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "data": {
                          "description": "The payload used to create the service account.",
                          "properties": {
                            "role": {
                              "description": "The role of the service account. Is either `owner` or `member`.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The service account ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "service_account.deleted": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The service account ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "service_account.updated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "changes_requested": {
                          "description": "The payload used to updated the service account.",
                          "properties": {
                            "role": {
                              "description": "The role of the service account. Is either `owner` or `member`.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The service account ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "description": "The event type.",
                      "enum": [
                        "api_key.created",
                        "api_key.updated",
                        "api_key.deleted",
                        "checkpoint_permission.created",
                        "checkpoint_permission.deleted",
                        "invite.sent",
                        "invite.accepted",
                        "invite.deleted",
                        "login.succeeded",
                        "login.failed",
                        "logout.succeeded",
                        "logout.failed",
                        "organization.updated",
                        "project.created",
                        "project.updated",
                        "project.archived",
                        "service_account.created",
                        "service_account.updated",
                        "service_account.deleted",
                        "rate_limit.updated",
                        "rate_limit.deleted",
                        "user.added",
                        "user.updated",
                        "user.deleted"
                      ],
                      "type": "string"
                    },
                    "user.added": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "data": {
                          "description": "The payload used to add the user to the project.",
                          "properties": {
                            "role": {
                              "description": "The role of the user. Is either `owner` or `member`.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The user ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "user.deleted": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "id": {
                          "description": "The user ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "user.updated": {
                      "description": "The details for events with this `type`.",
                      "properties": {
                        "changes_requested": {
                          "description": "The payload used to update the user.",
                          "properties": {
                            "role": {
                              "description": "The role of the user. Is either `owner` or `member`.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "id": {
                          "description": "The project ID.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "effective_at",
                    "actor"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "first_id": {
                "example": "audit_log-defb456h8dks",
                "type": "string"
              },
              "has_more": {
                "type": "boolean"
              },
              "last_id": {
                "example": "audit_log-hnbkd8s93s",
                "type": "string"
              },
              "object": {
                "enum": [
                  "list"
                ],
                "type": "string"
              }
            },
            "required": [
              "object",
              "data",
              "first_id",
              "last_id",
              "has_more"
            ],
            "type": "object"
          }
        }
      },
      "description": "Audit logs listed successfully."
    }
  },
  "summary": "List audit logs",
  "tags": [
    "Audit Logs"
  ]
}
