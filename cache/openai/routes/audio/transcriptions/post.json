{
  "description": "Transcribes audio into the input language.",
  "operationId": "createTranscription",
  "requestBody": {
    "content": {
      "multipart/form-data": {
        "schema": {
          "additionalProperties": false,
          "properties": {
            "chunking_strategy": {
              "anyOf": [
                {
                  "anyOf": [
                    {
                      "default": "auto",
                      "description": "Automatically set chunking parameters based on the audio. Must be set to `\"auto\"`.\n",
                      "enum": [
                        "auto"
                      ],
                      "type": "string"
                    },
                    {
                      "additionalProperties": false,
                      "properties": {
                        "prefix_padding_ms": {
                          "default": 300,
                          "description": "Amount of audio to include before the VAD detected speech (in \nmilliseconds).\n",
                          "type": "integer"
                        },
                        "silence_duration_ms": {
                          "default": 200,
                          "description": "Duration of silence to detect speech stop (in milliseconds).\nWith shorter values the model will respond more quickly, \nbut may jump in on short pauses from the user.\n",
                          "type": "integer"
                        },
                        "threshold": {
                          "default": 0.5,
                          "description": "Sensitivity threshold (0.0 to 1.0) for voice activity detection. A \nhigher threshold will require louder audio to activate the model, and \nthus might perform better in noisy environments.\n",
                          "type": "number"
                        },
                        "type": {
                          "description": "Must be set to `server_vad` to enable manual chunking using server side VAD.",
                          "enum": [
                            "server_vad"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ],
                      "type": "object"
                    }
                  ],
                  "description": "Controls how the audio is cut into chunks. When set to `\"auto\"`, the server first normalizes loudness and then uses voice activity detection (VAD) to choose boundaries. `server_vad` object can be provided to tweak VAD detection parameters manually. If unset, the audio is transcribed as a single block. Required when using `gpt-4o-transcribe-diarize` for inputs longer than 30 seconds. "
                },
                {
                  "type": "null"
                }
              ]
            },
            "file": {
              "description": "The audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.\n",
              "format": "binary",
              "type": "string"
            },
            "include": {
              "description": "Additional information to include in the transcription response.\n`logprobs` will return the log probabilities of the tokens in the\nresponse to understand the model's confidence in the transcription.\n`logprobs` only works with response_format set to `json` and only with\nthe models `gpt-4o-transcribe` and `gpt-4o-mini-transcribe`. This field is not supported when using `gpt-4o-transcribe-diarize`.\n",
              "items": {
                "enum": [
                  "logprobs"
                ],
                "type": "string"
              },
              "type": "array"
            },
            "known_speaker_names": {
              "description": "Optional list of speaker names that correspond to the audio samples provided in `known_speaker_references[]`. Each entry should be a short identifier (for example `customer` or `agent`). Up to 4 speakers are supported.\n",
              "items": {
                "type": "string"
              },
              "maxItems": 4,
              "type": "array"
            },
            "known_speaker_references": {
              "description": "Optional list of audio samples (as [data URLs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs)) that contain known speaker references matching `known_speaker_names[]`. Each sample must be between 2 and 10 seconds, and can use any of the same input audio formats supported by `file`.\n",
              "items": {
                "type": "string"
              },
              "maxItems": 4,
              "type": "array"
            },
            "language": {
              "description": "The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) (e.g. `en`) format will improve accuracy and latency.\n",
              "type": "string"
            },
            "model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "enum": [
                    "whisper-1",
                    "gpt-4o-transcribe",
                    "gpt-4o-mini-transcribe",
                    "gpt-4o-transcribe-diarize"
                  ],
                  "type": "string"
                }
              ],
              "description": "ID of the model to use. The options are `gpt-4o-transcribe`, `gpt-4o-mini-transcribe`, `whisper-1` (which is powered by our open source Whisper V2 model), and `gpt-4o-transcribe-diarize`.\n",
              "example": "gpt-4o-transcribe"
            },
            "prompt": {
              "description": "An optional text to guide the model's style or continue a previous audio segment. The [prompt](https://platform.openai.com/docs/guides/speech-to-text#prompting) should match the audio language. This field is not supported when using `gpt-4o-transcribe-diarize`.\n",
              "type": "string"
            },
            "response_format": {
              "default": "json",
              "description": "The format of the output, in one of these options: `json`, `text`, `srt`, `verbose_json`, `vtt`, or `diarized_json`. For `gpt-4o-transcribe` and `gpt-4o-mini-transcribe`, the only supported format is `json`. For `gpt-4o-transcribe-diarize`, the supported formats are `json`, `text`, and `diarized_json`, with `diarized_json` required to receive speaker annotations.\n",
              "enum": [
                "json",
                "text",
                "srt",
                "verbose_json",
                "vtt",
                "diarized_json"
              ],
              "type": "string"
            },
            "stream": {
              "anyOf": [
                {
                  "default": false,
                  "description": "If set to true, the model response data will be streamed to the client\nas it is generated using [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format).\nSee the [Streaming section of the Speech-to-Text guide](https://platform.openai.com/docs/guides/speech-to-text?lang=curl#streaming-transcriptions)\nfor more information.\n\nNote: Streaming is not supported for the `whisper-1` model and will be ignored.\n",
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            },
            "temperature": {
              "default": 0,
              "description": "The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n",
              "type": "number"
            },
            "timestamp_granularities": {
              "default": [
                "segment"
              ],
              "description": "The timestamp granularities to populate for this transcription. `response_format` must be set `verbose_json` to use timestamp granularities. Either or both of these options are supported: `word`, or `segment`. Note: There is no additional latency for segment timestamps, but generating word timestamps incurs additional latency.\nThis option is not available for `gpt-4o-transcribe-diarize`.\n",
              "items": {
                "enum": [
                  "word",
                  "segment"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "required": [
            "file",
            "model"
          ],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "anyOf": [
              {
                "description": "Represents a transcription response returned by model, based on the provided input.",
                "properties": {
                  "logprobs": {
                    "description": "The log probabilities of the tokens in the transcription. Only returned with the models `gpt-4o-transcribe` and `gpt-4o-mini-transcribe` if `logprobs` is added to the `include` array.\n",
                    "items": {
                      "properties": {
                        "bytes": {
                          "description": "The bytes of the token.",
                          "items": {
                            "type": "number"
                          },
                          "type": "array"
                        },
                        "logprob": {
                          "description": "The log probability of the token.",
                          "type": "number"
                        },
                        "token": {
                          "description": "The token in the transcription.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "optional": true,
                    "type": "array"
                  },
                  "text": {
                    "description": "The transcribed text.",
                    "type": "string"
                  },
                  "usage": {
                    "anyOf": [
                      {
                        "title": "Token Usage",
                        "description": "Usage statistics for models billed by token usage.",
                        "properties": {
                          "input_token_details": {
                            "description": "Details about the input tokens billed for this request.",
                            "properties": {
                              "audio_tokens": {
                                "description": "Number of audio tokens billed for this request.",
                                "type": "integer"
                              },
                              "text_tokens": {
                                "description": "Number of text tokens billed for this request.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "input_tokens": {
                            "description": "Number of input tokens billed for this request.",
                            "type": "integer"
                          },
                          "output_tokens": {
                            "description": "Number of output tokens generated.",
                            "type": "integer"
                          },
                          "total_tokens": {
                            "description": "Total number of tokens used (input + output).",
                            "type": "integer"
                          },
                          "type": {
                            "description": "The type of the usage object. Always `tokens` for this variant.",
                            "enum": [
                              "tokens"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "input_tokens",
                          "output_tokens",
                          "total_tokens"
                        ],
                        "type": "object"
                      },
                      {
                        "title": "Duration Usage",
                        "description": "Usage statistics for models billed by audio input duration.",
                        "properties": {
                          "seconds": {
                            "description": "Duration of the input audio in seconds.",
                            "type": "number"
                          },
                          "type": {
                            "description": "The type of the usage object. Always `duration` for this variant.",
                            "enum": [
                              "duration"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "seconds"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "Token usage statistics for the request.",
                    "discriminator": {
                      "propertyName": "type"
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "text"
                ],
                "type": "object"
              },
              {
                "description": "Represents a diarized transcription response returned by the model, including the combined transcript and speaker-segment annotations.\n",
                "properties": {
                  "duration": {
                    "description": "Duration of the input audio in seconds.",
                    "type": "number"
                  },
                  "segments": {
                    "description": "Segments of the transcript annotated with timestamps and speaker labels.",
                    "items": {
                      "description": "A segment of diarized transcript text with speaker metadata.",
                      "properties": {
                        "end": {
                          "description": "End timestamp of the segment in seconds.",
                          "format": "float",
                          "type": "number"
                        },
                        "id": {
                          "description": "Unique identifier for the segment.",
                          "type": "string"
                        },
                        "speaker": {
                          "description": "Speaker label for this segment. When known speakers are provided, the label matches `known_speaker_names[]`. Otherwise speakers are labeled sequentially using capital letters (`A`, `B`, ...).\n",
                          "type": "string"
                        },
                        "start": {
                          "description": "Start timestamp of the segment in seconds.",
                          "format": "float",
                          "type": "number"
                        },
                        "text": {
                          "description": "Transcript text for this segment.",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the segment. Always `transcript.text.segment`.\n",
                          "enum": [
                            "transcript.text.segment"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "id",
                        "start",
                        "end",
                        "text",
                        "speaker"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "task": {
                    "description": "The type of task that was run. Always `transcribe`.",
                    "enum": [
                      "transcribe"
                    ],
                    "type": "string"
                  },
                  "text": {
                    "description": "The concatenated transcript text for the entire audio input.",
                    "type": "string"
                  },
                  "usage": {
                    "anyOf": [
                      {
                        "title": "Token Usage",
                        "description": "Usage statistics for models billed by token usage.",
                        "properties": {
                          "input_token_details": {
                            "description": "Details about the input tokens billed for this request.",
                            "properties": {
                              "audio_tokens": {
                                "description": "Number of audio tokens billed for this request.",
                                "type": "integer"
                              },
                              "text_tokens": {
                                "description": "Number of text tokens billed for this request.",
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "input_tokens": {
                            "description": "Number of input tokens billed for this request.",
                            "type": "integer"
                          },
                          "output_tokens": {
                            "description": "Number of output tokens generated.",
                            "type": "integer"
                          },
                          "total_tokens": {
                            "description": "Total number of tokens used (input + output).",
                            "type": "integer"
                          },
                          "type": {
                            "description": "The type of the usage object. Always `tokens` for this variant.",
                            "enum": [
                              "tokens"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "input_tokens",
                          "output_tokens",
                          "total_tokens"
                        ],
                        "type": "object"
                      },
                      {
                        "title": "Duration Usage",
                        "description": "Usage statistics for models billed by audio input duration.",
                        "properties": {
                          "seconds": {
                            "description": "Duration of the input audio in seconds.",
                            "type": "number"
                          },
                          "type": {
                            "description": "The type of the usage object. Always `duration` for this variant.",
                            "enum": [
                              "duration"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "seconds"
                        ],
                        "type": "object"
                      }
                    ],
                    "description": "Token or duration usage statistics for the request.",
                    "discriminator": {
                      "propertyName": "type"
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "task",
                  "duration",
                  "text",
                  "segments"
                ],
                "type": "object"
              },
              {
                "description": "Represents a verbose json transcription response returned by model, based on the provided input.",
                "properties": {
                  "duration": {
                    "description": "The duration of the input audio.",
                    "type": "number"
                  },
                  "language": {
                    "description": "The language of the input audio.",
                    "type": "string"
                  },
                  "segments": {
                    "description": "Segments of the transcribed text and their corresponding details.",
                    "items": {
                      "properties": {
                        "avg_logprob": {
                          "description": "Average logprob of the segment. If the value is lower than -1, consider the logprobs failed.",
                          "format": "float",
                          "type": "number"
                        },
                        "compression_ratio": {
                          "description": "Compression ratio of the segment. If the value is greater than 2.4, consider the compression failed.",
                          "format": "float",
                          "type": "number"
                        },
                        "end": {
                          "description": "End time of the segment in seconds.",
                          "format": "float",
                          "type": "number"
                        },
                        "id": {
                          "description": "Unique identifier of the segment.",
                          "type": "integer"
                        },
                        "no_speech_prob": {
                          "description": "Probability of no speech in the segment. If the value is higher than 1.0 and the `avg_logprob` is below -1, consider this segment silent.",
                          "format": "float",
                          "type": "number"
                        },
                        "seek": {
                          "description": "Seek offset of the segment.",
                          "type": "integer"
                        },
                        "start": {
                          "description": "Start time of the segment in seconds.",
                          "format": "float",
                          "type": "number"
                        },
                        "temperature": {
                          "description": "Temperature parameter used for generating the segment.",
                          "format": "float",
                          "type": "number"
                        },
                        "text": {
                          "description": "Text content of the segment.",
                          "type": "string"
                        },
                        "tokens": {
                          "description": "Array of token IDs for the text content.",
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "id",
                        "seek",
                        "start",
                        "end",
                        "text",
                        "tokens",
                        "temperature",
                        "avg_logprob",
                        "compression_ratio",
                        "no_speech_prob"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "text": {
                    "description": "The transcribed text.",
                    "type": "string"
                  },
                  "usage": {
                    "description": "Usage statistics for models billed by audio input duration.",
                    "properties": {
                      "seconds": {
                        "description": "Duration of the input audio in seconds.",
                        "type": "number"
                      },
                      "type": {
                        "description": "The type of the usage object. Always `duration` for this variant.",
                        "enum": [
                          "duration"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "seconds"
                    ],
                    "title": "TranscriptTextUsageDuration",
                    "type": "object"
                  },
                  "words": {
                    "description": "Extracted words and their corresponding timestamps.",
                    "items": {
                      "properties": {
                        "end": {
                          "description": "End time of the word in seconds.",
                          "format": "float",
                          "type": "number"
                        },
                        "start": {
                          "description": "Start time of the word in seconds.",
                          "format": "float",
                          "type": "number"
                        },
                        "word": {
                          "description": "The text content of the word.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "word",
                        "start",
                        "end"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "language",
                  "duration",
                  "text"
                ],
                "type": "object"
              }
            ],
            "discriminator": {
              "propertyName": "task"
            }
          }
        },
        "text/event-stream": {
          "schema": {
            "anyOf": [
              {
                "description": "Emitted when a diarized transcription returns a completed segment with speaker information. Only emitted when you [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription) with `stream` set to `true` and `response_format` set to `diarized_json`.\n",
                "properties": {
                  "end": {
                    "description": "End timestamp of the segment in seconds.",
                    "format": "float",
                    "type": "number"
                  },
                  "id": {
                    "description": "Unique identifier for the segment.",
                    "type": "string"
                  },
                  "speaker": {
                    "description": "Speaker label for this segment.",
                    "type": "string"
                  },
                  "start": {
                    "description": "Start timestamp of the segment in seconds.",
                    "format": "float",
                    "type": "number"
                  },
                  "text": {
                    "description": "Transcript text for this segment.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of the event. Always `transcript.text.segment`.",
                    "enum": [
                      "transcript.text.segment"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "id",
                  "start",
                  "end",
                  "text",
                  "speaker"
                ],
                "type": "object"
              },
              {
                "description": "Emitted when there is an additional text delta. This is also the first event emitted when the transcription starts. Only emitted when you [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription) with the `Stream` parameter set to `true`.",
                "properties": {
                  "delta": {
                    "description": "The text delta that was additionally transcribed.\n",
                    "type": "string"
                  },
                  "logprobs": {
                    "description": "The log probabilities of the delta. Only included if you [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription) with the `include[]` parameter set to `logprobs`.\n",
                    "items": {
                      "properties": {
                        "bytes": {
                          "description": "The bytes that were used to generate the log probability.\n",
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "logprob": {
                          "description": "The log probability of the token.\n",
                          "type": "number"
                        },
                        "token": {
                          "description": "The token that was used to generate the log probability.\n",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "segment_id": {
                    "description": "Identifier of the diarized segment that this delta belongs to. Only present when using `gpt-4o-transcribe-diarize`.\n",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of the event. Always `transcript.text.delta`.\n",
                    "enum": [
                      "transcript.text.delta"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "delta"
                ],
                "type": "object"
              },
              {
                "description": "Emitted when the transcription is complete. Contains the complete transcription text. Only emitted when you [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription) with the `Stream` parameter set to `true`.",
                "properties": {
                  "logprobs": {
                    "description": "The log probabilities of the individual tokens in the transcription. Only included if you [create a transcription](https://platform.openai.com/docs/api-reference/audio/create-transcription) with the `include[]` parameter set to `logprobs`.\n",
                    "items": {
                      "properties": {
                        "bytes": {
                          "description": "The bytes that were used to generate the log probability.\n",
                          "items": {
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "logprob": {
                          "description": "The log probability of the token.\n",
                          "type": "number"
                        },
                        "token": {
                          "description": "The token that was used to generate the log probability.\n",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "text": {
                    "description": "The text that was transcribed.\n",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of the event. Always `transcript.text.done`.\n",
                    "enum": [
                      "transcript.text.done"
                    ],
                    "type": "string"
                  },
                  "usage": {
                    "description": "Usage statistics for models billed by token usage.",
                    "properties": {
                      "input_token_details": {
                        "description": "Details about the input tokens billed for this request.",
                        "properties": {
                          "audio_tokens": {
                            "description": "Number of audio tokens billed for this request.",
                            "type": "integer"
                          },
                          "text_tokens": {
                            "description": "Number of text tokens billed for this request.",
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "input_tokens": {
                        "description": "Number of input tokens billed for this request.",
                        "type": "integer"
                      },
                      "output_tokens": {
                        "description": "Number of output tokens generated.",
                        "type": "integer"
                      },
                      "total_tokens": {
                        "description": "Total number of tokens used (input + output).",
                        "type": "integer"
                      },
                      "type": {
                        "description": "The type of the usage object. Always `tokens` for this variant.",
                        "enum": [
                          "tokens"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "input_tokens",
                      "output_tokens",
                      "total_tokens"
                    ],
                    "title": "TranscriptTextUsageTokens",
                    "type": "object"
                  }
                },
                "required": [
                  "type",
                  "text"
                ],
                "type": "object"
              }
            ],
            "discriminator": {
              "propertyName": "type"
            }
          }
        }
      },
      "description": "OK"
    }
  },
  "summary": "Create transcription",
  "tags": [
    "Audio"
  ]
}
