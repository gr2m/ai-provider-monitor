{
  "description": "Returns a list of vector store files in a batch.",
  "operationId": "listFilesInVectorStoreBatch",
  "parameters": [
    {
      "description": "The ID of the vector store that the files belong to.",
      "in": "path",
      "name": "vector_store_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "The ID of the file batch that the files belong to.",
      "in": "path",
      "name": "batch_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 20.\n",
      "in": "query",
      "name": "limit",
      "required": false,
      "schema": {
        "default": 20,
        "type": "integer"
      }
    },
    {
      "description": "Sort order by the `created_at` timestamp of the objects. `asc` for ascending order and `desc` for descending order.\n",
      "in": "query",
      "name": "order",
      "schema": {
        "default": "desc",
        "enum": [
          "asc",
          "desc"
        ],
        "type": "string"
      }
    },
    {
      "description": "A cursor for use in pagination. `after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with obj_foo, your subsequent call can include after=obj_foo in order to fetch the next page of the list.\n",
      "in": "query",
      "name": "after",
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "A cursor for use in pagination. `before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with obj_foo, your subsequent call can include before=obj_foo in order to fetch the previous page of the list.\n",
      "in": "query",
      "name": "before",
      "schema": {
        "type": "string"
      }
    },
    {
      "description": "Filter by file status. One of `in_progress`, `completed`, `failed`, `cancelled`.",
      "in": "query",
      "name": "filter",
      "schema": {
        "enum": [
          "in_progress",
          "completed",
          "failed",
          "cancelled"
        ],
        "type": "string"
      }
    }
  ],
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "properties": {
              "data": {
                "items": {
                  "description": "A list of files attached to a vector store.",
                  "properties": {
                    "attributes": {
                      "anyOf": [
                        {
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "maxLength": 512,
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          },
                          "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard. Keys are strings\nwith a maximum length of 64 characters. Values are strings with a maximum\nlength of 512 characters, booleans, or numbers.\n",
                          "maxProperties": 16,
                          "propertyNames": {
                            "maxLength": 64,
                            "type": "string"
                          },
                          "type": "object"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "chunking_strategy": {
                      "anyOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "static": {
                              "additionalProperties": false,
                              "properties": {
                                "chunk_overlap_tokens": {
                                  "description": "The number of tokens that overlap between chunks. The default value is `400`.\n\nNote that the overlap must not exceed half of `max_chunk_size_tokens`.\n",
                                  "type": "integer"
                                },
                                "max_chunk_size_tokens": {
                                  "description": "The maximum number of tokens in each chunk. The default value is `800`. The minimum value is `100` and the maximum value is `4096`.",
                                  "maximum": 4096,
                                  "minimum": 100,
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "max_chunk_size_tokens",
                                "chunk_overlap_tokens"
                              ],
                              "type": "object"
                            },
                            "type": {
                              "description": "Always `static`.",
                              "enum": [
                                "static"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "static"
                          ],
                          "title": "Static Chunking Strategy",
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "description": "This is returned when the chunking strategy is unknown. Typically, this is because the file was indexed before the `chunking_strategy` concept was introduced in the API.",
                          "properties": {
                            "type": {
                              "description": "Always `other`.",
                              "enum": [
                                "other"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type"
                          ],
                          "title": "Other Chunking Strategy",
                          "type": "object"
                        }
                      ],
                      "description": "The strategy used to chunk the file.",
                      "discriminator": {
                        "propertyName": "type"
                      },
                      "type": "object"
                    },
                    "created_at": {
                      "description": "The Unix timestamp (in seconds) for when the vector store file was created.",
                      "type": "integer"
                    },
                    "id": {
                      "description": "The identifier, which can be referenced in API endpoints.",
                      "type": "string"
                    },
                    "last_error": {
                      "anyOf": [
                        {
                          "description": "The last error associated with this vector store file. Will be `null` if there are no errors.",
                          "properties": {
                            "code": {
                              "description": "One of `server_error` or `rate_limit_exceeded`.",
                              "enum": [
                                "server_error",
                                "unsupported_file",
                                "invalid_file"
                              ],
                              "type": "string"
                            },
                            "message": {
                              "description": "A human-readable description of the error.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "code",
                            "message"
                          ],
                          "type": "object"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "object": {
                      "description": "The object type, which is always `vector_store.file`.",
                      "enum": [
                        "vector_store.file"
                      ],
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of the vector store file, which can be either `in_progress`, `completed`, `cancelled`, or `failed`. The status `completed` indicates that the vector store file is ready for use.",
                      "enum": [
                        "in_progress",
                        "completed",
                        "cancelled",
                        "failed"
                      ],
                      "type": "string"
                    },
                    "usage_bytes": {
                      "description": "The total vector store usage in bytes. Note that this may be different from the original file size.",
                      "type": "integer"
                    },
                    "vector_store_id": {
                      "description": "The ID of the [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object) that the [File](https://platform.openai.com/docs/api-reference/files) is attached to.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "object",
                    "usage_bytes",
                    "created_at",
                    "vector_store_id",
                    "status",
                    "last_error"
                  ],
                  "title": "Vector store files",
                  "type": "object"
                },
                "type": "array"
              },
              "first_id": {
                "example": "file-abc123",
                "type": "string"
              },
              "has_more": {
                "example": false,
                "type": "boolean"
              },
              "last_id": {
                "example": "file-abc456",
                "type": "string"
              },
              "object": {
                "example": "list",
                "type": "string"
              }
            },
            "required": [
              "object",
              "data",
              "first_id",
              "last_id",
              "has_more"
            ]
          }
        }
      },
      "description": "OK"
    }
  },
  "summary": "List vector store files in a batch",
  "tags": [
    "Vector stores"
  ]
}
