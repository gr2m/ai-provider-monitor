{
  "description": "Create the structure of an evaluation that can be used to test a model's performance.\nAn evaluation is a set of testing criteria and the config for a data source, which dictates the schema of the data used in the evaluation. After creating an evaluation, you can run it on different models and model parameters. We support several types of graders and datasources.\nFor more information, see the [Evals guide](https://platform.openai.com/docs/guides/evals).\n",
  "operationId": "createEval",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "data_source_config": {
              "anyOf": [
                {
                  "description": "A CustomDataSourceConfig object that defines the schema for the data source used for the evaluation runs.\nThis schema is used to define the shape of the data that will be:\n- Used to define your testing criteria and\n- What data is required when creating a run\n",
                  "properties": {
                    "include_sample_schema": {
                      "default": false,
                      "description": "Whether the eval should expect you to populate the sample namespace (ie, by generating responses off of your data source)",
                      "type": "boolean"
                    },
                    "item_schema": {
                      "additionalProperties": true,
                      "description": "The json schema for each row in the data source.",
                      "type": "object"
                    },
                    "type": {
                      "default": "custom",
                      "description": "The type of data source. Always `custom`.",
                      "enum": [
                        "custom"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "item_schema",
                    "type"
                  ],
                  "title": "CustomDataSourceConfig",
                  "type": "object"
                },
                {
                  "description": "A data source config which specifies the metadata property of your logs query.\nThis is usually metadata like `usecase=chatbot` or `prompt-version=v2`, etc.\n",
                  "properties": {
                    "metadata": {
                      "additionalProperties": true,
                      "description": "Metadata filters for the logs data source.",
                      "type": "object"
                    },
                    "type": {
                      "default": "logs",
                      "description": "The type of data source. Always `logs`.",
                      "enum": [
                        "logs"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "LogsDataSourceConfig",
                  "type": "object"
                },
                {
                  "deprecated": true,
                  "description": "Deprecated in favor of LogsDataSourceConfig.\n",
                  "properties": {
                    "metadata": {
                      "additionalProperties": true,
                      "description": "Metadata filters for the stored completions data source.",
                      "type": "object"
                    },
                    "type": {
                      "default": "stored_completions",
                      "description": "The type of data source. Always `stored_completions`.",
                      "enum": [
                        "stored_completions"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "type"
                  ],
                  "title": "StoredCompletionsDataSourceConfig",
                  "type": "object"
                }
              ],
              "description": "The configuration for the data source used for the evaluation runs. Dictates the schema of the data used in the evaluation.",
              "discriminator": {
                "propertyName": "type"
              },
              "type": "object"
            },
            "metadata": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ]
            },
            "name": {
              "description": "The name of the evaluation.",
              "type": "string"
            },
            "testing_criteria": {
              "description": "A list of graders for all eval runs in this group. Graders can reference variables in the data source using double curly braces notation, like `{{item.variable_name}}`. To reference the model's output, use the `sample` namespace (ie, `{{sample.output_text}}`).",
              "items": {
                "anyOf": [
                  {
                    "description": "A LabelModelGrader object which uses a model to assign labels to each item\nin the evaluation.\n",
                    "properties": {
                      "input": {
                        "description": "A list of chat messages forming the prompt or context. May include variable references to the `item` namespace, ie {{item.name}}.",
                        "items": {
                          "anyOf": [
                            {
                              "properties": {
                                "content": {
                                  "description": "The content of the message.",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "The role of the message (e.g. \"system\", \"assistant\", \"user\").",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "role",
                                "content"
                              ],
                              "title": "SimpleInputMessage",
                              "type": "object"
                            },
                            {
                              "description": "A message input to the model with a role indicating instruction following\nhierarchy. Instructions given with the `developer` or `system` role take\nprecedence over instructions given with the `user` role. Messages with the\n`assistant` role are presumed to have been generated by the model in previous\ninteractions.\n",
                              "properties": {
                                "content": {
                                  "anyOf": [
                                    {
                                      "description": "A text input to the model.\n",
                                      "title": "Text input",
                                      "type": "string"
                                    },
                                    {
                                      "description": "A text input to the model.",
                                      "properties": {
                                        "text": {
                                          "description": "The text input to the model.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "input_text",
                                          "description": "The type of the input item. Always `input_text`.",
                                          "enum": [
                                            "input_text"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "text"
                                      ],
                                      "title": "Input text",
                                      "type": "object"
                                    },
                                    {
                                      "description": "A text output from the model.\n",
                                      "properties": {
                                        "text": {
                                          "description": "The text output from the model.\n",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "The type of the output text. Always `output_text`.\n",
                                          "enum": [
                                            "output_text"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "text"
                                      ],
                                      "title": "Output text",
                                      "type": "object"
                                    },
                                    {
                                      "description": "An image input to the model.\n",
                                      "properties": {
                                        "detail": {
                                          "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.\n",
                                          "type": "string"
                                        },
                                        "image_url": {
                                          "description": "The URL of the image input.\n",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "The type of the image input. Always `input_image`.\n",
                                          "enum": [
                                            "input_image"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "image_url"
                                      ],
                                      "title": "Input image",
                                      "type": "object"
                                    },
                                    {
                                      "description": "An audio input to the model.\n",
                                      "properties": {
                                        "input_audio": {
                                          "properties": {
                                            "data": {
                                              "description": "Base64-encoded audio data.\n",
                                              "type": "string"
                                            },
                                            "format": {
                                              "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.\n",
                                              "enum": [
                                                "mp3",
                                                "wav"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "data",
                                            "format"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the input item. Always `input_audio`.\n",
                                          "enum": [
                                            "input_audio"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "input_audio"
                                      ],
                                      "title": "Input audio",
                                      "type": "object"
                                    },
                                    {
                                      "description": "A list of inputs, each of which may be either an input text, input image, or input audio object.\n",
                                      "title": "An array of Input text, Input image, and Input audio",
                                      "type": "array"
                                    }
                                  ],
                                  "description": "Inputs to the model - can contain template strings.\n"
                                },
                                "role": {
                                  "description": "The role of the message input. One of `user`, `assistant`, `system`, or\n`developer`.\n",
                                  "enum": [
                                    "user",
                                    "assistant",
                                    "system",
                                    "developer"
                                  ],
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of the message input. Always `message`.\n",
                                  "enum": [
                                    "message"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "role",
                                "content"
                              ],
                              "title": "Eval message object",
                              "type": "object"
                            }
                          ],
                          "description": "A chat message that makes up the prompt or context. May include variable references to the `item` namespace, ie {{item.name}}.",
                          "title": "CreateEvalItem",
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "labels": {
                        "description": "The labels to classify to each item in the evaluation.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "model": {
                        "description": "The model to use for the evaluation. Must support structured outputs.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the grader.",
                        "type": "string"
                      },
                      "passing_labels": {
                        "description": "The labels that indicate a passing result. Must be a subset of labels.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "type": {
                        "description": "The object type, which is always `label_model`.",
                        "enum": [
                          "label_model"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "model",
                      "input",
                      "passing_labels",
                      "labels",
                      "name"
                    ],
                    "title": "LabelModelGrader",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "description": "A StringCheckGrader object that performs a string comparison between input and reference using a specified operation.\n",
                        "properties": {
                          "input": {
                            "description": "The input text. This may include template strings.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the grader.",
                            "type": "string"
                          },
                          "operation": {
                            "description": "The string check operation to perform. One of `eq`, `ne`, `like`, or `ilike`.",
                            "enum": [
                              "eq",
                              "ne",
                              "like",
                              "ilike"
                            ],
                            "type": "string"
                          },
                          "reference": {
                            "description": "The reference text. This may include template strings.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The object type, which is always `string_check`.",
                            "enum": [
                              "string_check"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "input",
                          "reference",
                          "operation"
                        ],
                        "title": "StringCheckGrader",
                        "type": "object"
                      }
                    ],
                    "title": "StringCheckGrader",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "description": "A TextSimilarityGrader object which grades text based on similarity metrics.\n",
                        "properties": {
                          "evaluation_metric": {
                            "description": "The evaluation metric to use. One of `cosine`, `fuzzy_match`, `bleu`, \n`gleu`, `meteor`, `rouge_1`, `rouge_2`, `rouge_3`, `rouge_4`, `rouge_5`, \nor `rouge_l`.\n",
                            "enum": [
                              "cosine",
                              "fuzzy_match",
                              "bleu",
                              "gleu",
                              "meteor",
                              "rouge_1",
                              "rouge_2",
                              "rouge_3",
                              "rouge_4",
                              "rouge_5",
                              "rouge_l"
                            ],
                            "type": "string"
                          },
                          "input": {
                            "description": "The text being graded.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the grader.",
                            "type": "string"
                          },
                          "reference": {
                            "description": "The text being graded against.",
                            "type": "string"
                          },
                          "type": {
                            "default": "text_similarity",
                            "description": "The type of grader.",
                            "enum": [
                              "text_similarity"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "input",
                          "reference",
                          "evaluation_metric"
                        ],
                        "title": "TextSimilarityGrader",
                        "type": "object"
                      },
                      {
                        "properties": {
                          "pass_threshold": {
                            "description": "The threshold for the score.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "pass_threshold"
                        ],
                        "type": "object"
                      }
                    ],
                    "title": "TextSimilarityGrader",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "description": "A PythonGrader object that runs a python script on the input.\n",
                        "properties": {
                          "image_tag": {
                            "description": "The image tag to use for the python script.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the grader.",
                            "type": "string"
                          },
                          "source": {
                            "description": "The source code of the python script.",
                            "type": "string"
                          },
                          "type": {
                            "description": "The object type, which is always `python`.",
                            "enum": [
                              "python"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "source"
                        ],
                        "title": "PythonGrader",
                        "type": "object"
                      },
                      {
                        "properties": {
                          "pass_threshold": {
                            "description": "The threshold for the score.",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "title": "PythonGrader",
                    "type": "object"
                  },
                  {
                    "allOf": [
                      {
                        "description": "A ScoreModelGrader object that uses a model to assign a score to the input.\n",
                        "properties": {
                          "input": {
                            "description": "The input text. This may include template strings.",
                            "items": {
                              "description": "A message input to the model with a role indicating instruction following\nhierarchy. Instructions given with the `developer` or `system` role take\nprecedence over instructions given with the `user` role. Messages with the\n`assistant` role are presumed to have been generated by the model in previous\ninteractions.\n",
                              "properties": {
                                "content": {
                                  "anyOf": [
                                    {
                                      "description": "A text input to the model.\n",
                                      "title": "Text input",
                                      "type": "string"
                                    },
                                    {
                                      "description": "A text input to the model.",
                                      "properties": {
                                        "text": {
                                          "description": "The text input to the model.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "default": "input_text",
                                          "description": "The type of the input item. Always `input_text`.",
                                          "enum": [
                                            "input_text"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "text"
                                      ],
                                      "title": "Input text",
                                      "type": "object"
                                    },
                                    {
                                      "description": "A text output from the model.\n",
                                      "properties": {
                                        "text": {
                                          "description": "The text output from the model.\n",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "The type of the output text. Always `output_text`.\n",
                                          "enum": [
                                            "output_text"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "text"
                                      ],
                                      "title": "Output text",
                                      "type": "object"
                                    },
                                    {
                                      "description": "An image input to the model.\n",
                                      "properties": {
                                        "detail": {
                                          "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.\n",
                                          "type": "string"
                                        },
                                        "image_url": {
                                          "description": "The URL of the image input.\n",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "The type of the image input. Always `input_image`.\n",
                                          "enum": [
                                            "input_image"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "image_url"
                                      ],
                                      "title": "Input image",
                                      "type": "object"
                                    },
                                    {
                                      "description": "An audio input to the model.\n",
                                      "properties": {
                                        "input_audio": {
                                          "properties": {
                                            "data": {
                                              "description": "Base64-encoded audio data.\n",
                                              "type": "string"
                                            },
                                            "format": {
                                              "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.\n",
                                              "enum": [
                                                "mp3",
                                                "wav"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "data",
                                            "format"
                                          ],
                                          "type": "object"
                                        },
                                        "type": {
                                          "description": "The type of the input item. Always `input_audio`.\n",
                                          "enum": [
                                            "input_audio"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "type",
                                        "input_audio"
                                      ],
                                      "title": "Input audio",
                                      "type": "object"
                                    },
                                    {
                                      "description": "A list of inputs, each of which may be either an input text, input image, or input audio object.\n",
                                      "title": "An array of Input text, Input image, and Input audio",
                                      "type": "array"
                                    }
                                  ],
                                  "description": "Inputs to the model - can contain template strings.\n"
                                },
                                "role": {
                                  "description": "The role of the message input. One of `user`, `assistant`, `system`, or\n`developer`.\n",
                                  "enum": [
                                    "user",
                                    "assistant",
                                    "system",
                                    "developer"
                                  ],
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of the message input. Always `message`.\n",
                                  "enum": [
                                    "message"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "role",
                                "content"
                              ],
                              "title": "Eval message object",
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "model": {
                            "description": "The model to use for the evaluation.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of the grader.",
                            "type": "string"
                          },
                          "range": {
                            "description": "The range of the score. Defaults to `[0, 1]`.",
                            "items": {
                              "max_items": 2,
                              "min_items": 2,
                              "type": "number"
                            },
                            "type": "array"
                          },
                          "sampling_params": {
                            "description": "The sampling parameters for the model.",
                            "properties": {
                              "max_completions_tokens": {
                                "anyOf": [
                                  {
                                    "description": "The maximum number of tokens the grader model may generate in its response.\n",
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "reasoning_effort": {
                                "anyOf": [
                                  {
                                    "default": "medium",
                                    "description": "Constrains effort on reasoning for\n[reasoning models](https://platform.openai.com/docs/guides/reasoning).\nCurrently supported values are `minimal`, `low`, `medium`, and `high`. Reducing\nreasoning effort can result in faster responses and fewer tokens used\non reasoning in a response.\n\nNote: The `gpt-5-pro` model defaults to (and only supports) `high` reasoning effort.\n",
                                    "enum": [
                                      "minimal",
                                      "low",
                                      "medium",
                                      "high"
                                    ],
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "seed": {
                                "anyOf": [
                                  {
                                    "description": "A seed value to initialize the randomness, during sampling.\n",
                                    "type": "integer"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "temperature": {
                                "anyOf": [
                                  {
                                    "description": "A higher temperature increases randomness in the outputs.\n",
                                    "type": "number"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "top_p": {
                                "anyOf": [
                                  {
                                    "default": 1,
                                    "description": "An alternative to temperature for nucleus sampling; 1.0 includes all tokens.\n",
                                    "example": 1,
                                    "type": "number"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "description": "The object type, which is always `score_model`.",
                            "enum": [
                              "score_model"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "name",
                          "input",
                          "model"
                        ],
                        "title": "ScoreModelGrader",
                        "type": "object"
                      },
                      {
                        "properties": {
                          "pass_threshold": {
                            "description": "The threshold for the score.",
                            "type": "number"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "title": "ScoreModelGrader",
                    "type": "object"
                  }
                ],
                "discriminator": {
                  "propertyName": "type"
                }
              },
              "type": "array"
            }
          },
          "required": [
            "data_source_config",
            "testing_criteria"
          ],
          "title": "CreateEvalRequest",
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "201": {
      "content": {
        "application/json": {
          "schema": {
            "description": "An Eval object with a data source config and testing criteria.\nAn Eval represents a task to be done for your LLM integration.\nLike:\n - Improve the quality of my chatbot\n - See how well my chatbot handles customer support\n - Check if o4-mini is better at my usecase than gpt-4o\n",
            "properties": {
              "created_at": {
                "description": "The Unix timestamp (in seconds) for when the eval was created.",
                "type": "integer"
              },
              "data_source_config": {
                "anyOf": [
                  {
                    "description": "A CustomDataSourceConfig which specifies the schema of your `item` and optionally `sample` namespaces.\nThe response schema defines the shape of the data that will be:\n- Used to define your testing criteria and\n- What data is required when creating a run\n",
                    "properties": {
                      "schema": {
                        "additionalProperties": true,
                        "description": "The json schema for the run data source items.\nLearn how to build JSON schemas [here](https://json-schema.org/).\n",
                        "type": "object"
                      },
                      "type": {
                        "default": "custom",
                        "description": "The type of data source. Always `custom`.",
                        "enum": [
                          "custom"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "schema"
                    ],
                    "title": "CustomDataSourceConfig",
                    "type": "object"
                  },
                  {
                    "description": "A LogsDataSourceConfig which specifies the metadata property of your logs query.\nThis is usually metadata like `usecase=chatbot` or `prompt-version=v2`, etc.\nThe schema returned by this data source config is used to defined what variables are available in your evals.\n`item` and `sample` are both defined when using this data source config.\n",
                    "properties": {
                      "metadata": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                            "type": "object"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "schema": {
                        "additionalProperties": true,
                        "description": "The json schema for the run data source items.\nLearn how to build JSON schemas [here](https://json-schema.org/).\n",
                        "type": "object"
                      },
                      "type": {
                        "default": "logs",
                        "description": "The type of data source. Always `logs`.",
                        "enum": [
                          "logs"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "schema"
                    ],
                    "title": "LogsDataSourceConfig",
                    "type": "object"
                  },
                  {
                    "deprecated": true,
                    "description": "Deprecated in favor of LogsDataSourceConfig.\n",
                    "properties": {
                      "metadata": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                            "type": "object"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "schema": {
                        "additionalProperties": true,
                        "description": "The json schema for the run data source items.\nLearn how to build JSON schemas [here](https://json-schema.org/).\n",
                        "type": "object"
                      },
                      "type": {
                        "default": "stored_completions",
                        "description": "The type of data source. Always `stored_completions`.",
                        "enum": [
                          "stored_completions"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "schema"
                    ],
                    "title": "StoredCompletionsDataSourceConfig",
                    "type": "object"
                  }
                ],
                "description": "Configuration of data sources used in runs of the evaluation.",
                "discriminator": {
                  "propertyName": "type"
                },
                "type": "object"
              },
              "id": {
                "description": "Unique identifier for the evaluation.",
                "type": "string"
              },
              "metadata": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "name": {
                "description": "The name of the evaluation.",
                "example": "Chatbot effectiveness Evaluation",
                "type": "string"
              },
              "object": {
                "default": "eval",
                "description": "The object type.",
                "enum": [
                  "eval"
                ],
                "type": "string"
              },
              "testing_criteria": {
                "description": "A list of testing criteria.",
                "items": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "A LabelModelGrader object which uses a model to assign labels to each item\nin the evaluation.\n",
                          "properties": {
                            "input": {
                              "items": {
                                "description": "A message input to the model with a role indicating instruction following\nhierarchy. Instructions given with the `developer` or `system` role take\nprecedence over instructions given with the `user` role. Messages with the\n`assistant` role are presumed to have been generated by the model in previous\ninteractions.\n",
                                "properties": {
                                  "content": {
                                    "anyOf": [
                                      {
                                        "description": "A text input to the model.\n",
                                        "title": "Text input",
                                        "type": "string"
                                      },
                                      {
                                        "description": "A text input to the model.",
                                        "properties": {
                                          "text": {
                                            "description": "The text input to the model.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "default": "input_text",
                                            "description": "The type of the input item. Always `input_text`.",
                                            "enum": [
                                              "input_text"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "title": "Input text",
                                        "type": "object"
                                      },
                                      {
                                        "description": "A text output from the model.\n",
                                        "properties": {
                                          "text": {
                                            "description": "The text output from the model.\n",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the output text. Always `output_text`.\n",
                                            "enum": [
                                              "output_text"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "title": "Output text",
                                        "type": "object"
                                      },
                                      {
                                        "description": "An image input to the model.\n",
                                        "properties": {
                                          "detail": {
                                            "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.\n",
                                            "type": "string"
                                          },
                                          "image_url": {
                                            "description": "The URL of the image input.\n",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the image input. Always `input_image`.\n",
                                            "enum": [
                                              "input_image"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "image_url"
                                        ],
                                        "title": "Input image",
                                        "type": "object"
                                      },
                                      {
                                        "description": "An audio input to the model.\n",
                                        "properties": {
                                          "input_audio": {
                                            "properties": {
                                              "data": {
                                                "description": "Base64-encoded audio data.\n",
                                                "type": "string"
                                              },
                                              "format": {
                                                "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.\n",
                                                "enum": [
                                                  "mp3",
                                                  "wav"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "data",
                                              "format"
                                            ],
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the input item. Always `input_audio`.\n",
                                            "enum": [
                                              "input_audio"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "input_audio"
                                        ],
                                        "title": "Input audio",
                                        "type": "object"
                                      },
                                      {
                                        "description": "A list of inputs, each of which may be either an input text, input image, or input audio object.\n",
                                        "title": "An array of Input text, Input image, and Input audio",
                                        "type": "array"
                                      }
                                    ],
                                    "description": "Inputs to the model - can contain template strings.\n"
                                  },
                                  "role": {
                                    "description": "The role of the message input. One of `user`, `assistant`, `system`, or\n`developer`.\n",
                                    "enum": [
                                      "user",
                                      "assistant",
                                      "system",
                                      "developer"
                                    ],
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the message input. Always `message`.\n",
                                    "enum": [
                                      "message"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "role",
                                  "content"
                                ],
                                "title": "Eval message object",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "labels": {
                              "description": "The labels to assign to each item in the evaluation.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "model": {
                              "description": "The model to use for the evaluation. Must support structured outputs.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "passing_labels": {
                              "description": "The labels that indicate a passing result. Must be a subset of labels.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "type": {
                              "description": "The object type, which is always `label_model`.",
                              "enum": [
                                "label_model"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "model",
                            "input",
                            "passing_labels",
                            "labels",
                            "name"
                          ],
                          "title": "LabelModelGrader",
                          "type": "object"
                        }
                      ],
                      "title": "LabelModelGrader",
                      "type": "object"
                    },
                    {
                      "allOf": [
                        {
                          "description": "A StringCheckGrader object that performs a string comparison between input and reference using a specified operation.\n",
                          "properties": {
                            "input": {
                              "description": "The input text. This may include template strings.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "operation": {
                              "description": "The string check operation to perform. One of `eq`, `ne`, `like`, or `ilike`.",
                              "enum": [
                                "eq",
                                "ne",
                                "like",
                                "ilike"
                              ],
                              "type": "string"
                            },
                            "reference": {
                              "description": "The reference text. This may include template strings.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The object type, which is always `string_check`.",
                              "enum": [
                                "string_check"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "input",
                            "reference",
                            "operation"
                          ],
                          "title": "StringCheckGrader",
                          "type": "object"
                        }
                      ],
                      "title": "StringCheckGrader",
                      "type": "object"
                    },
                    {
                      "allOf": [
                        {
                          "description": "A TextSimilarityGrader object which grades text based on similarity metrics.\n",
                          "properties": {
                            "evaluation_metric": {
                              "description": "The evaluation metric to use. One of `cosine`, `fuzzy_match`, `bleu`, \n`gleu`, `meteor`, `rouge_1`, `rouge_2`, `rouge_3`, `rouge_4`, `rouge_5`, \nor `rouge_l`.\n",
                              "enum": [
                                "cosine",
                                "fuzzy_match",
                                "bleu",
                                "gleu",
                                "meteor",
                                "rouge_1",
                                "rouge_2",
                                "rouge_3",
                                "rouge_4",
                                "rouge_5",
                                "rouge_l"
                              ],
                              "type": "string"
                            },
                            "input": {
                              "description": "The text being graded.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "reference": {
                              "description": "The text being graded against.",
                              "type": "string"
                            },
                            "type": {
                              "default": "text_similarity",
                              "description": "The type of grader.",
                              "enum": [
                                "text_similarity"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "input",
                            "reference",
                            "evaluation_metric"
                          ],
                          "title": "TextSimilarityGrader",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "pass_threshold": {
                              "description": "The threshold for the score.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "pass_threshold"
                          ],
                          "type": "object"
                        }
                      ],
                      "title": "TextSimilarityGrader",
                      "type": "object"
                    },
                    {
                      "allOf": [
                        {
                          "description": "A PythonGrader object that runs a python script on the input.\n",
                          "properties": {
                            "image_tag": {
                              "description": "The image tag to use for the python script.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source code of the python script.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The object type, which is always `python`.",
                              "enum": [
                                "python"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "source"
                          ],
                          "title": "PythonGrader",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "pass_threshold": {
                              "description": "The threshold for the score.",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "PythonGrader",
                      "type": "object"
                    },
                    {
                      "allOf": [
                        {
                          "description": "A ScoreModelGrader object that uses a model to assign a score to the input.\n",
                          "properties": {
                            "input": {
                              "description": "The input text. This may include template strings.",
                              "items": {
                                "description": "A message input to the model with a role indicating instruction following\nhierarchy. Instructions given with the `developer` or `system` role take\nprecedence over instructions given with the `user` role. Messages with the\n`assistant` role are presumed to have been generated by the model in previous\ninteractions.\n",
                                "properties": {
                                  "content": {
                                    "anyOf": [
                                      {
                                        "description": "A text input to the model.\n",
                                        "title": "Text input",
                                        "type": "string"
                                      },
                                      {
                                        "description": "A text input to the model.",
                                        "properties": {
                                          "text": {
                                            "description": "The text input to the model.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "default": "input_text",
                                            "description": "The type of the input item. Always `input_text`.",
                                            "enum": [
                                              "input_text"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "title": "Input text",
                                        "type": "object"
                                      },
                                      {
                                        "description": "A text output from the model.\n",
                                        "properties": {
                                          "text": {
                                            "description": "The text output from the model.\n",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the output text. Always `output_text`.\n",
                                            "enum": [
                                              "output_text"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "title": "Output text",
                                        "type": "object"
                                      },
                                      {
                                        "description": "An image input to the model.\n",
                                        "properties": {
                                          "detail": {
                                            "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.\n",
                                            "type": "string"
                                          },
                                          "image_url": {
                                            "description": "The URL of the image input.\n",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the image input. Always `input_image`.\n",
                                            "enum": [
                                              "input_image"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "image_url"
                                        ],
                                        "title": "Input image",
                                        "type": "object"
                                      },
                                      {
                                        "description": "An audio input to the model.\n",
                                        "properties": {
                                          "input_audio": {
                                            "properties": {
                                              "data": {
                                                "description": "Base64-encoded audio data.\n",
                                                "type": "string"
                                              },
                                              "format": {
                                                "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.\n",
                                                "enum": [
                                                  "mp3",
                                                  "wav"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "data",
                                              "format"
                                            ],
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the input item. Always `input_audio`.\n",
                                            "enum": [
                                              "input_audio"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "input_audio"
                                        ],
                                        "title": "Input audio",
                                        "type": "object"
                                      },
                                      {
                                        "description": "A list of inputs, each of which may be either an input text, input image, or input audio object.\n",
                                        "title": "An array of Input text, Input image, and Input audio",
                                        "type": "array"
                                      }
                                    ],
                                    "description": "Inputs to the model - can contain template strings.\n"
                                  },
                                  "role": {
                                    "description": "The role of the message input. One of `user`, `assistant`, `system`, or\n`developer`.\n",
                                    "enum": [
                                      "user",
                                      "assistant",
                                      "system",
                                      "developer"
                                    ],
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the message input. Always `message`.\n",
                                    "enum": [
                                      "message"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "role",
                                  "content"
                                ],
                                "title": "Eval message object",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "model": {
                              "description": "The model to use for the evaluation.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "range": {
                              "description": "The range of the score. Defaults to `[0, 1]`.",
                              "items": {
                                "max_items": 2,
                                "min_items": 2,
                                "type": "number"
                              },
                              "type": "array"
                            },
                            "sampling_params": {
                              "description": "The sampling parameters for the model.",
                              "properties": {
                                "max_completions_tokens": {
                                  "anyOf": [
                                    {
                                      "description": "The maximum number of tokens the grader model may generate in its response.\n",
                                      "minimum": 1,
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "reasoning_effort": {
                                  "anyOf": [
                                    {
                                      "default": "medium",
                                      "description": "Constrains effort on reasoning for\n[reasoning models](https://platform.openai.com/docs/guides/reasoning).\nCurrently supported values are `minimal`, `low`, `medium`, and `high`. Reducing\nreasoning effort can result in faster responses and fewer tokens used\non reasoning in a response.\n\nNote: The `gpt-5-pro` model defaults to (and only supports) `high` reasoning effort.\n",
                                      "enum": [
                                        "minimal",
                                        "low",
                                        "medium",
                                        "high"
                                      ],
                                      "type": "string"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "seed": {
                                  "anyOf": [
                                    {
                                      "description": "A seed value to initialize the randomness, during sampling.\n",
                                      "type": "integer"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "temperature": {
                                  "anyOf": [
                                    {
                                      "description": "A higher temperature increases randomness in the outputs.\n",
                                      "type": "number"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "top_p": {
                                  "anyOf": [
                                    {
                                      "default": 1,
                                      "description": "An alternative to temperature for nucleus sampling; 1.0 includes all tokens.\n",
                                      "example": 1,
                                      "type": "number"
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "description": "The object type, which is always `score_model`.",
                              "enum": [
                                "score_model"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "input",
                            "model"
                          ],
                          "title": "ScoreModelGrader",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "pass_threshold": {
                              "description": "The threshold for the score.",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "ScoreModelGrader",
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "required": [
              "id",
              "data_source_config",
              "object",
              "testing_criteria",
              "name",
              "created_at",
              "metadata"
            ],
            "title": "Eval",
            "type": "object"
          }
        }
      },
      "description": "OK"
    }
  },
  "summary": "Create eval",
  "tags": [
    "Evals"
  ]
}
