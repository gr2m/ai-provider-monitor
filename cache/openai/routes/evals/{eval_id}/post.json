{
  "description": "Update certain properties of an evaluation.\n",
  "operationId": "updateEval",
  "parameters": [
    {
      "description": "The ID of the evaluation to update.",
      "in": "path",
      "name": "eval_id",
      "required": true,
      "schema": {
        "type": "string"
      }
    }
  ],
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "metadata": {
              "anyOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ]
            },
            "name": {
              "description": "Rename the evaluation.",
              "type": "string"
            }
          },
          "type": "object"
        }
      }
    },
    "description": "Request to update an evaluation",
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "An Eval object with a data source config and testing criteria.\nAn Eval represents a task to be done for your LLM integration.\nLike:\n - Improve the quality of my chatbot\n - See how well my chatbot handles customer support\n - Check if o4-mini is better at my usecase than gpt-4o\n",
            "properties": {
              "created_at": {
                "description": "The Unix timestamp (in seconds) for when the eval was created.",
                "type": "integer"
              },
              "data_source_config": {
                "anyOf": [
                  {
                    "description": "A CustomDataSourceConfig which specifies the schema of your `item` and optionally `sample` namespaces.\nThe response schema defines the shape of the data that will be:\n- Used to define your testing criteria and\n- What data is required when creating a run\n",
                    "properties": {
                      "schema": {
                        "additionalProperties": true,
                        "description": "The json schema for the run data source items.\nLearn how to build JSON schemas [here](https://json-schema.org/).\n",
                        "type": "object"
                      },
                      "type": {
                        "default": "custom",
                        "description": "The type of data source. Always `custom`.",
                        "enum": [
                          "custom"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "schema"
                    ],
                    "title": "CustomDataSourceConfig",
                    "type": "object"
                  },
                  {
                    "description": "A LogsDataSourceConfig which specifies the metadata property of your logs query.\nThis is usually metadata like `usecase=chatbot` or `prompt-version=v2`, etc.\nThe schema returned by this data source config is used to defined what variables are available in your evals.\n`item` and `sample` are both defined when using this data source config.\n",
                    "properties": {
                      "metadata": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                            "type": "object"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "schema": {
                        "additionalProperties": true,
                        "description": "The json schema for the run data source items.\nLearn how to build JSON schemas [here](https://json-schema.org/).\n",
                        "type": "object"
                      },
                      "type": {
                        "default": "logs",
                        "description": "The type of data source. Always `logs`.",
                        "enum": [
                          "logs"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "schema"
                    ],
                    "title": "LogsDataSourceConfig",
                    "type": "object"
                  },
                  {
                    "deprecated": true,
                    "description": "Deprecated in favor of LogsDataSourceConfig.\n",
                    "properties": {
                      "metadata": {
                        "anyOf": [
                          {
                            "additionalProperties": {
                              "type": "string"
                            },
                            "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                            "type": "object"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "schema": {
                        "additionalProperties": true,
                        "description": "The json schema for the run data source items.\nLearn how to build JSON schemas [here](https://json-schema.org/).\n",
                        "type": "object"
                      },
                      "type": {
                        "default": "stored_completions",
                        "description": "The type of data source. Always `stored_completions`.",
                        "enum": [
                          "stored_completions"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "schema"
                    ],
                    "title": "StoredCompletionsDataSourceConfig",
                    "type": "object"
                  }
                ],
                "description": "Configuration of data sources used in runs of the evaluation.",
                "discriminator": {
                  "propertyName": "type"
                },
                "type": "object"
              },
              "id": {
                "description": "Unique identifier for the evaluation.",
                "type": "string"
              },
              "metadata": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Set of 16 key-value pairs that can be attached to an object. This can be\nuseful for storing additional information about the object in a structured\nformat, and querying for objects via API or the dashboard.\n\nKeys are strings with a maximum length of 64 characters. Values are strings\nwith a maximum length of 512 characters.\n",
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "name": {
                "description": "The name of the evaluation.",
                "example": "Chatbot effectiveness Evaluation",
                "type": "string"
              },
              "object": {
                "default": "eval",
                "description": "The object type.",
                "enum": [
                  "eval"
                ],
                "type": "string"
              },
              "testing_criteria": {
                "description": "A list of testing criteria.",
                "items": {
                  "anyOf": [
                    {
                      "allOf": [
                        {
                          "description": "A LabelModelGrader object which uses a model to assign labels to each item\nin the evaluation.\n",
                          "properties": {
                            "input": {
                              "items": {
                                "description": "A message input to the model with a role indicating instruction following\nhierarchy. Instructions given with the `developer` or `system` role take\nprecedence over instructions given with the `user` role. Messages with the\n`assistant` role are presumed to have been generated by the model in previous\ninteractions.\n",
                                "properties": {
                                  "content": {
                                    "anyOf": [
                                      {
                                        "description": "A text input to the model.\n",
                                        "title": "Text input",
                                        "type": "string"
                                      },
                                      {
                                        "description": "A text input to the model.",
                                        "properties": {
                                          "text": {
                                            "description": "The text input to the model.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "default": "input_text",
                                            "description": "The type of the input item. Always `input_text`.",
                                            "enum": [
                                              "input_text"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "title": "Input text",
                                        "type": "object"
                                      },
                                      {
                                        "description": "A text output from the model.\n",
                                        "properties": {
                                          "text": {
                                            "description": "The text output from the model.\n",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the output text. Always `output_text`.\n",
                                            "enum": [
                                              "output_text"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "title": "Output text",
                                        "type": "object"
                                      },
                                      {
                                        "description": "An image input to the model.\n",
                                        "properties": {
                                          "detail": {
                                            "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.\n",
                                            "type": "string"
                                          },
                                          "image_url": {
                                            "description": "The URL of the image input.\n",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the image input. Always `input_image`.\n",
                                            "enum": [
                                              "input_image"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "image_url"
                                        ],
                                        "title": "Input image",
                                        "type": "object"
                                      },
                                      {
                                        "description": "An audio input to the model.\n",
                                        "properties": {
                                          "input_audio": {
                                            "properties": {
                                              "data": {
                                                "description": "Base64-encoded audio data.\n",
                                                "type": "string"
                                              },
                                              "format": {
                                                "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.\n",
                                                "enum": [
                                                  "mp3",
                                                  "wav"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "data",
                                              "format"
                                            ],
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the input item. Always `input_audio`.\n",
                                            "enum": [
                                              "input_audio"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "input_audio"
                                        ],
                                        "title": "Input audio",
                                        "type": "object"
                                      },
                                      {
                                        "description": "A list of inputs, each of which may be either an input text, input image, or input audio object.\n",
                                        "title": "An array of Input text, Input image, and Input audio",
                                        "type": "array"
                                      }
                                    ],
                                    "description": "Inputs to the model - can contain template strings.\n"
                                  },
                                  "role": {
                                    "description": "The role of the message input. One of `user`, `assistant`, `system`, or\n`developer`.\n",
                                    "enum": [
                                      "user",
                                      "assistant",
                                      "system",
                                      "developer"
                                    ],
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the message input. Always `message`.\n",
                                    "enum": [
                                      "message"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "role",
                                  "content"
                                ],
                                "title": "Eval message object",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "labels": {
                              "description": "The labels to assign to each item in the evaluation.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "model": {
                              "description": "The model to use for the evaluation. Must support structured outputs.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "passing_labels": {
                              "description": "The labels that indicate a passing result. Must be a subset of labels.",
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "type": {
                              "description": "The object type, which is always `label_model`.",
                              "enum": [
                                "label_model"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "model",
                            "input",
                            "passing_labels",
                            "labels",
                            "name"
                          ],
                          "title": "LabelModelGrader",
                          "type": "object"
                        }
                      ],
                      "title": "LabelModelGrader",
                      "type": "object"
                    },
                    {
                      "allOf": [
                        {
                          "description": "A StringCheckGrader object that performs a string comparison between input and reference using a specified operation.\n",
                          "properties": {
                            "input": {
                              "description": "The input text. This may include template strings.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "operation": {
                              "description": "The string check operation to perform. One of `eq`, `ne`, `like`, or `ilike`.",
                              "enum": [
                                "eq",
                                "ne",
                                "like",
                                "ilike"
                              ],
                              "type": "string"
                            },
                            "reference": {
                              "description": "The reference text. This may include template strings.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The object type, which is always `string_check`.",
                              "enum": [
                                "string_check"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "input",
                            "reference",
                            "operation"
                          ],
                          "title": "StringCheckGrader",
                          "type": "object"
                        }
                      ],
                      "title": "StringCheckGrader",
                      "type": "object"
                    },
                    {
                      "allOf": [
                        {
                          "description": "A TextSimilarityGrader object which grades text based on similarity metrics.\n",
                          "properties": {
                            "evaluation_metric": {
                              "description": "The evaluation metric to use. One of `cosine`, `fuzzy_match`, `bleu`, \n`gleu`, `meteor`, `rouge_1`, `rouge_2`, `rouge_3`, `rouge_4`, `rouge_5`, \nor `rouge_l`.\n",
                              "enum": [
                                "cosine",
                                "fuzzy_match",
                                "bleu",
                                "gleu",
                                "meteor",
                                "rouge_1",
                                "rouge_2",
                                "rouge_3",
                                "rouge_4",
                                "rouge_5",
                                "rouge_l"
                              ],
                              "type": "string"
                            },
                            "input": {
                              "description": "The text being graded.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "reference": {
                              "description": "The text being graded against.",
                              "type": "string"
                            },
                            "type": {
                              "default": "text_similarity",
                              "description": "The type of grader.",
                              "enum": [
                                "text_similarity"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "input",
                            "reference",
                            "evaluation_metric"
                          ],
                          "title": "TextSimilarityGrader",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "pass_threshold": {
                              "description": "The threshold for the score.",
                              "type": "number"
                            }
                          },
                          "required": [
                            "pass_threshold"
                          ],
                          "type": "object"
                        }
                      ],
                      "title": "TextSimilarityGrader",
                      "type": "object"
                    },
                    {
                      "allOf": [
                        {
                          "description": "A PythonGrader object that runs a python script on the input.\n",
                          "properties": {
                            "image_tag": {
                              "description": "The image tag to use for the python script.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source code of the python script.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The object type, which is always `python`.",
                              "enum": [
                                "python"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "source"
                          ],
                          "title": "PythonGrader",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "pass_threshold": {
                              "description": "The threshold for the score.",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "PythonGrader",
                      "type": "object"
                    },
                    {
                      "allOf": [
                        {
                          "description": "A ScoreModelGrader object that uses a model to assign a score to the input.\n",
                          "properties": {
                            "input": {
                              "description": "The input text. This may include template strings.",
                              "items": {
                                "description": "A message input to the model with a role indicating instruction following\nhierarchy. Instructions given with the `developer` or `system` role take\nprecedence over instructions given with the `user` role. Messages with the\n`assistant` role are presumed to have been generated by the model in previous\ninteractions.\n",
                                "properties": {
                                  "content": {
                                    "anyOf": [
                                      {
                                        "description": "A text input to the model.\n",
                                        "title": "Text input",
                                        "type": "string"
                                      },
                                      {
                                        "description": "A text input to the model.",
                                        "properties": {
                                          "text": {
                                            "description": "The text input to the model.",
                                            "type": "string"
                                          },
                                          "type": {
                                            "default": "input_text",
                                            "description": "The type of the input item. Always `input_text`.",
                                            "enum": [
                                              "input_text"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "title": "Input text",
                                        "type": "object"
                                      },
                                      {
                                        "description": "A text output from the model.\n",
                                        "properties": {
                                          "text": {
                                            "description": "The text output from the model.\n",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the output text. Always `output_text`.\n",
                                            "enum": [
                                              "output_text"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "text"
                                        ],
                                        "title": "Output text",
                                        "type": "object"
                                      },
                                      {
                                        "description": "An image input to the model.\n",
                                        "properties": {
                                          "detail": {
                                            "description": "The detail level of the image to be sent to the model. One of `high`, `low`, or `auto`. Defaults to `auto`.\n",
                                            "type": "string"
                                          },
                                          "image_url": {
                                            "description": "The URL of the image input.\n",
                                            "type": "string"
                                          },
                                          "type": {
                                            "description": "The type of the image input. Always `input_image`.\n",
                                            "enum": [
                                              "input_image"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "image_url"
                                        ],
                                        "title": "Input image",
                                        "type": "object"
                                      },
                                      {
                                        "description": "An audio input to the model.\n",
                                        "properties": {
                                          "input_audio": {
                                            "properties": {
                                              "data": {
                                                "description": "Base64-encoded audio data.\n",
                                                "type": "string"
                                              },
                                              "format": {
                                                "description": "The format of the audio data. Currently supported formats are `mp3` and\n`wav`.\n",
                                                "enum": [
                                                  "mp3",
                                                  "wav"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "data",
                                              "format"
                                            ],
                                            "type": "object"
                                          },
                                          "type": {
                                            "description": "The type of the input item. Always `input_audio`.\n",
                                            "enum": [
                                              "input_audio"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "type",
                                          "input_audio"
                                        ],
                                        "title": "Input audio",
                                        "type": "object"
                                      },
                                      {
                                        "description": "A list of inputs, each of which may be either an input text, input image, or input audio object.\n",
                                        "title": "An array of Input text, Input image, and Input audio",
                                        "type": "array"
                                      }
                                    ],
                                    "description": "Inputs to the model - can contain template strings.\n"
                                  },
                                  "role": {
                                    "description": "The role of the message input. One of `user`, `assistant`, `system`, or\n`developer`.\n",
                                    "enum": [
                                      "user",
                                      "assistant",
                                      "system",
                                      "developer"
                                    ],
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The type of the message input. Always `message`.\n",
                                    "enum": [
                                      "message"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "role",
                                  "content"
                                ],
                                "title": "Eval message object",
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "model": {
                              "description": "The model to use for the evaluation.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the grader.",
                              "type": "string"
                            },
                            "range": {
                              "description": "The range of the score. Defaults to `[0, 1]`.",
                              "items": {
                                "max_items": 2,
                                "min_items": 2,
                                "type": "number"
                              },
                              "type": "array"
                            },
                            "sampling_params": {
                              "description": "The sampling parameters for the model.",
                              "type": "object"
                            },
                            "type": {
                              "description": "The object type, which is always `score_model`.",
                              "enum": [
                                "score_model"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "type",
                            "name",
                            "input",
                            "model"
                          ],
                          "title": "ScoreModelGrader",
                          "type": "object"
                        },
                        {
                          "properties": {
                            "pass_threshold": {
                              "description": "The threshold for the score.",
                              "type": "number"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "ScoreModelGrader",
                      "type": "object"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "required": [
              "id",
              "data_source_config",
              "object",
              "testing_criteria",
              "name",
              "created_at",
              "metadata"
            ],
            "title": "Eval",
            "type": "object"
          }
        }
      },
      "description": "The updated evaluation"
    }
  },
  "summary": "Update an eval",
  "tags": [
    "Evals"
  ]
}
