{
  "description": "Creates a completion for the provided prompt and parameters.",
  "operationId": "createCompletion",
  "requestBody": {
    "content": {
      "application/json": {
        "schema": {
          "properties": {
            "best_of": {
              "default": 1,
              "description": "Generates `best_of` completions server-side and returns the \"best\" (the one with the highest log probability per token). Results cannot be streamed.\n\nWhen used with `n`, `best_of` controls the number of candidate completions and `n` specifies how many to return â€“ `best_of` must be greater than `n`.\n\n**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.\n",
              "maximum": 20,
              "minimum": 0,
              "nullable": true,
              "type": "integer"
            },
            "echo": {
              "default": false,
              "description": "Echo back the prompt in addition to the completion\n",
              "nullable": true,
              "type": "boolean"
            },
            "frequency_penalty": {
              "default": 0,
              "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.\n\n[See more information about frequency and presence penalties.](https://platform.openai.com/docs/guides/text-generation)\n",
              "maximum": 2,
              "minimum": -2,
              "nullable": true,
              "type": "number"
            },
            "logit_bias": {
              "additionalProperties": {
                "type": "integer"
              },
              "default": null,
              "description": "Modify the likelihood of specified tokens appearing in the completion.\n\nAccepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.\n\nAs an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token from being generated.\n",
              "nullable": true,
              "type": "object"
            },
            "logprobs": {
              "default": null,
              "description": "Include the log probabilities on the `logprobs` most likely output tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.\n\nThe maximum value for `logprobs` is 5.\n",
              "maximum": 5,
              "minimum": 0,
              "nullable": true,
              "type": "integer"
            },
            "max_tokens": {
              "default": 16,
              "description": "The maximum number of [tokens](/tokenizer) that can be generated in the completion.\n\nThe token count of your prompt plus `max_tokens` cannot exceed the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.\n",
              "example": 16,
              "minimum": 0,
              "nullable": true,
              "type": "integer"
            },
            "model": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "enum": [
                    "gpt-3.5-turbo-instruct",
                    "davinci-002",
                    "babbage-002"
                  ],
                  "title": "Preset",
                  "type": "string"
                }
              ],
              "description": "ID of the model to use. You can use the [List models](https://platform.openai.com/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](https://platform.openai.com/docs/models) for descriptions of them.\n"
            },
            "n": {
              "default": 1,
              "description": "How many completions to generate for each prompt.\n\n**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.\n",
              "example": 1,
              "maximum": 128,
              "minimum": 1,
              "nullable": true,
              "type": "integer"
            },
            "presence_penalty": {
              "default": 0,
              "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.\n\n[See more information about frequency and presence penalties.](https://platform.openai.com/docs/guides/text-generation)\n",
              "maximum": 2,
              "minimum": -2,
              "nullable": true,
              "type": "number"
            },
            "prompt": {
              "anyOf": [
                {
                  "default": "",
                  "example": "This is a test.",
                  "type": "string"
                },
                {
                  "items": {
                    "default": "",
                    "example": "This is a test.",
                    "type": "string"
                  },
                  "title": "Array of strings",
                  "type": "array"
                },
                {
                  "items": {
                    "type": "integer"
                  },
                  "minItems": 1,
                  "title": "Array of tokens",
                  "type": "array"
                },
                {
                  "items": {
                    "items": {
                      "type": "integer"
                    },
                    "minItems": 1,
                    "type": "array"
                  },
                  "minItems": 1,
                  "title": "Array of token arrays",
                  "type": "array"
                }
              ],
              "description": "The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.\n\nNote that <|endoftext|> is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document.\n",
              "nullable": true
            },
            "seed": {
              "description": "If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.\n\nDeterminism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.\n",
              "format": "int64",
              "nullable": true,
              "type": "integer"
            },
            "stop": {
              "anyOf": [
                {
                  "default": "<|endoftext|>",
                  "example": "\n",
                  "nullable": true,
                  "type": "string"
                },
                {
                  "items": {
                    "example": "[\"\\n\"]",
                    "type": "string"
                  },
                  "maxItems": 4,
                  "minItems": 1,
                  "type": "array"
                }
              ],
              "description": "Not supported with latest reasoning models `o3` and `o4-mini`.\n\nUp to 4 sequences where the API will stop generating further tokens. The\nreturned text will not contain the stop sequence.\n",
              "nullable": true
            },
            "stream": {
              "default": false,
              "description": "Whether to stream back partial progress. If set, tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).\n",
              "nullable": true,
              "type": "boolean"
            },
            "stream_options": {
              "anyOf": [
                {
                  "description": "Options for streaming response. Only set this when you set `stream: true`.\n",
                  "properties": {
                    "include_obfuscation": {
                      "description": "When true, stream obfuscation will be enabled. Stream obfuscation adds\nrandom characters to an `obfuscation` field on streaming delta events to\nnormalize payload sizes as a mitigation to certain side-channel attacks.\nThese obfuscation fields are included by default, but add a small amount\nof overhead to the data stream. You can set `include_obfuscation` to\nfalse to optimize for bandwidth if you trust the network links between\nyour application and the OpenAI API.\n",
                      "type": "boolean"
                    },
                    "include_usage": {
                      "description": "If set, an additional chunk will be streamed before the `data: [DONE]`\nmessage. The `usage` field on this chunk shows the token usage statistics\nfor the entire request, and the `choices` field will always be an empty\narray.\n\nAll other chunks will also include a `usage` field, but with a null\nvalue. **NOTE:** If the stream is interrupted, you may not receive the\nfinal usage chunk which contains the total token usage for the request.\n",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                },
                {
                  "type": "null"
                }
              ]
            },
            "suffix": {
              "default": null,
              "description": "The suffix that comes after a completion of inserted text.\n\nThis parameter is only supported for `gpt-3.5-turbo-instruct`.\n",
              "example": "test.",
              "nullable": true,
              "type": "string"
            },
            "temperature": {
              "default": 1,
              "description": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or `top_p` but not both.\n",
              "example": 1,
              "maximum": 2,
              "minimum": 0,
              "nullable": true,
              "type": "number"
            },
            "top_p": {
              "default": 1,
              "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n\nWe generally recommend altering this or `temperature` but not both.\n",
              "example": 1,
              "maximum": 1,
              "minimum": 0,
              "nullable": true,
              "type": "number"
            },
            "user": {
              "description": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](https://platform.openai.com/docs/guides/safety-best-practices#end-user-ids).\n",
              "example": "user-1234",
              "type": "string"
            }
          },
          "required": [
            "model",
            "prompt"
          ],
          "type": "object"
        }
      }
    },
    "required": true
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "description": "Represents a completion response from the API. Note: both the streamed and non-streamed response objects share the same shape (unlike the chat endpoint).\n",
            "properties": {
              "choices": {
                "description": "The list of completion choices the model generated for the input prompt.",
                "items": {
                  "properties": {
                    "finish_reason": {
                      "description": "The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,\n`length` if the maximum number of tokens specified in the request was reached,\nor `content_filter` if content was omitted due to a flag from our content filters.\n",
                      "enum": [
                        "stop",
                        "length",
                        "content_filter"
                      ],
                      "type": "string"
                    },
                    "index": {
                      "type": "integer"
                    },
                    "logprobs": {
                      "anyOf": [
                        {
                          "properties": {
                            "text_offset": {
                              "items": {
                                "type": "integer"
                              },
                              "type": "array"
                            },
                            "token_logprobs": {
                              "items": {
                                "type": "number"
                              },
                              "type": "array"
                            },
                            "tokens": {
                              "items": {
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "top_logprobs": {
                              "items": {
                                "additionalProperties": {
                                  "type": "number"
                                },
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "text": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "finish_reason",
                    "index",
                    "logprobs",
                    "text"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "created": {
                "description": "The Unix timestamp (in seconds) of when the completion was created.",
                "type": "integer"
              },
              "id": {
                "description": "A unique identifier for the completion.",
                "type": "string"
              },
              "model": {
                "description": "The model used for completion.",
                "type": "string"
              },
              "object": {
                "description": "The object type, which is always \"text_completion\"",
                "enum": [
                  "text_completion"
                ],
                "type": "string"
              },
              "system_fingerprint": {
                "description": "This fingerprint represents the backend configuration that the model runs with.\n\nCan be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.\n",
                "type": "string"
              },
              "usage": {
                "description": "Usage statistics for the completion request.",
                "properties": {
                  "completion_tokens": {
                    "default": 0,
                    "description": "Number of tokens in the generated completion.",
                    "type": "integer"
                  },
                  "completion_tokens_details": {
                    "description": "Breakdown of tokens used in a completion.",
                    "properties": {
                      "accepted_prediction_tokens": {
                        "default": 0,
                        "description": "When using Predicted Outputs, the number of tokens in the\nprediction that appeared in the completion.\n",
                        "type": "integer"
                      },
                      "audio_tokens": {
                        "default": 0,
                        "description": "Audio input tokens generated by the model.",
                        "type": "integer"
                      },
                      "reasoning_tokens": {
                        "default": 0,
                        "description": "Tokens generated by the model for reasoning.",
                        "type": "integer"
                      },
                      "rejected_prediction_tokens": {
                        "default": 0,
                        "description": "When using Predicted Outputs, the number of tokens in the\nprediction that did not appear in the completion. However, like\nreasoning tokens, these tokens are still counted in the total\ncompletion tokens for purposes of billing, output, and context window\nlimits.\n",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "prompt_tokens": {
                    "default": 0,
                    "description": "Number of tokens in the prompt.",
                    "type": "integer"
                  },
                  "prompt_tokens_details": {
                    "description": "Breakdown of tokens used in the prompt.",
                    "properties": {
                      "audio_tokens": {
                        "default": 0,
                        "description": "Audio input tokens present in the prompt.",
                        "type": "integer"
                      },
                      "cached_tokens": {
                        "default": 0,
                        "description": "Cached tokens present in the prompt.",
                        "type": "integer"
                      }
                    },
                    "type": "object"
                  },
                  "total_tokens": {
                    "default": 0,
                    "description": "Total number of tokens used in the request (prompt + completion).",
                    "type": "integer"
                  }
                },
                "required": [
                  "prompt_tokens",
                  "completion_tokens",
                  "total_tokens"
                ],
                "type": "object"
              }
            },
            "required": [
              "id",
              "object",
              "created",
              "model",
              "choices"
            ],
            "type": "object"
          }
        }
      },
      "description": "OK"
    }
  },
  "summary": "Create completion",
  "tags": [
    "Completions"
  ]
}
